%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 379.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Admin
%%CreationDate: 3/28/17
%%BoundingBox: 0 0 800 800
%%HiResBoundingBox: 0 0 800 800
%%CropBox: 0 0 800 800
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2017-03-28T14:58:52+08:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-03-28T14:58:52+08:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-03-28T14:58:52+08:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7xkWl2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;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&#xA;hexCkc7qB0HI0+7FIkVRtW1JhQ3MlPY0/ViniKFZ2ZizEsx6k7nFi1XFXVwquileKRZENHU1U9d/&#xA;pwKF01zcTGssjP8AMkjFJNqeKFeK/vYRSOd1A7BjT7sUglUbV9SYUNy4HsafqxTxFCs7OxZmLMep&#xA;JqcWLVcVdXFV0cjxyLIho6mqnY0I+eKrprq4mNZZGf2J2+7FJNqdcUK0V7dxCkczqPAE0+7FIkV5&#xA;1TUCKG4f6DT9WKeIodnZ2LMxZj1JNTixW4q7FXYq7FXYq7FXVwq6uKurirVcVdXFXVxV1cVdXFXV&#xA;xV1cVdXFXVxV1cVdXFXVxV1cVdXFXVxV1cVdXFXVxV1cVdXFXYq7FXYq7FXYq6uKuxV2KuxVquKu&#xA;rirq4q6uKurirq4q6uKurirq4q6uKurirq4q6uKurirq4q6uKuxV2KuxV2KurirsVaxV2KuxV2Ku&#xA;xV1cVdXFXVxV1cVdXFXVxV1cVdXFXVxV1cVdXFXVxVquKurirq4q6uKurirq4q6uKuxV2KuxV2Ku&#xA;xV1cVdXFXVxV1cVdXFXVxV1cVdXFXVxV1cVdXFXVxV1cVf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:0580117407206811822AD29A8A8E4895</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0580117407206811822AD29A8A8E4895</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0480117407206811822AD29A8A8E4895</stRef:instanceID>
            <stRef:documentID>xmp.did:0480117407206811822AD29A8A8E4895</stRef:documentID>
            <stRef:originalDocumentID>uuid:8B4F69C9209AE311A709E4CB816E03E4</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811822AFBD12AB6519A</stEvt:instanceID>
                  <stEvt:when>2014-02-18T14:30:35+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0280117407206811822AFBD12AB6519A</stEvt:instanceID>
                  <stEvt:when>2014-02-18T15:15:54+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0680117407206811822AFBD12AB6519A</stEvt:instanceID>
                  <stEvt:when>2014-02-18T16:52:49+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0880117407206811822AFBD12AB6519A</stEvt:instanceID>
                  <stEvt:when>2014-02-18T17:55:05+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0980117407206811822AFBD12AB6519A</stEvt:instanceID>
                  <stEvt:when>2014-02-18T21:11:09+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0280117407206811822AB56695B5F5FC</stEvt:instanceID>
                  <stEvt:when>2014-02-19T10:29:38+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0680117407206811822AB56695B5F5FC</stEvt:instanceID>
                  <stEvt:when>2014-02-19T12:05:19+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0280117407206811822AC3B13772DB1F</stEvt:instanceID>
                  <stEvt:when>2014-02-20T14:42:44+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0680117407206811822AC3B13772DB1F</stEvt:instanceID>
                  <stEvt:when>2014-02-20T15:30:21+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:13E97AEE16206811822AE69A76F40F30</stEvt:instanceID>
                  <stEvt:when>2014-02-27T15:23:14+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0380117407206811822AD29A8A8E4895</stEvt:instanceID>
                  <stEvt:when>2017-03-28T12:45:14+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0580117407206811822AD29A8A8E4895</stEvt:instanceID>
                  <stEvt:when>2017-03-28T14:58:52+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:8B4F69C9209AE311A709E4CB816E03E4</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>800.000000</stDim:w>
            <stDim:h>800.013672</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>236</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>241</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>165</xmpG:green>
                           <xmpG:blue>81</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>173</xmpG:green>
                           <xmpG:blue>238</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>235</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>139</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>190</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>238</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>54</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>240</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>40</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>175</xmpG:green>
                           <xmpG:blue>64</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>49</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>214</xmpG:red>
                           <xmpG:green>222</xmpG:green>
                           <xmpG:blue>35</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>139</xmpG:red>
                           <xmpG:green>197</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>55</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>56</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>166</xmpG:green>
                           <xmpG:blue>156</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>37</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>117</xmpG:green>
                           <xmpG:blue>187</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>43</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>38</xmpG:red>
                           <xmpG:green>34</xmpG:green>
                           <xmpG:blue>97</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>144</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>144</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>142</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>92</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>236</xmpG:red>
                           <xmpG:green>41</xmpG:green>
                           <xmpG:blue>123</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>154</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>154</xmpG:red>
                           <xmpG:green>132</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>113</xmpG:red>
                           <xmpG:green>101</xmpG:green>
                           <xmpG:blue>88</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>90</xmpG:red>
                           <xmpG:green>74</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>195</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>107</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>168</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>79</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>138</xmpG:red>
                           <xmpG:green>93</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>40</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>59</xmpG:red>
                           <xmpG:green>35</xmpG:green>
                           <xmpG:blue>20</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=100</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>255</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=90</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>229</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=80</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>203</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=70</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>178</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=60</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>152</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>127</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=40</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>101</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=30</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>76</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=20</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>50</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=10</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>25</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=5</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>12</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -800 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 800 li
800 800 li
800 0 li
cp
clp
800 800 mo
0 800 li
0 0 li
800 0 li
800 800 li
203.681 533.702 mo
156.522 533.702 118.296 571.93 118.296 619.086 cv
118.296 635.018 122.67 649.921 130.268 662.683 cv
119.497 706.096 li
162.291 693.77 li
174.553 700.579 188.66 704.47 203.681 704.47 cv
250.837 704.47 289.064 666.243 289.064 619.086 cv
289.064 571.93 250.837 533.702 203.681 533.702 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[-15 -776.961 776.961 -15 409.247 878.996 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.654902 .737255 .717647 ]
/C1 [.827451 .870588 .843137 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-15 -776.961 776.961 -15 409.247 878.996 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Vl-GjVl-JlW2QYnWMukrWMuntWiE)!X/i;%X/i>'XK8M*Xf\_-Xfeh0Y-+q2YHP.5YHY78Yct@:Z*CR=
ZEgdAZEggCZa7!E['[3I['[6K[C*EM[^NWQ[^NZS\$riV\@B&Y\@K/\\[f8^]"5Ja]">Sd]=Y\f]Y(ni
]tM+m]tM.o^:q=q^V@Ou^V@S"^qdb$_83t(_84"*_SX1-_o'C0_o0L3`5KU5`Pog8`Q#p;`l?$=a2c6@
aN2HDaN2KFaiVZHb0%lLb0%oNbKJ)Pbfn;Tbfn>Vc-=MYcHa_\cHjh_cd0qad*U.dd*^7gdF$@idaHRl
~>
<~]Y(ni]Y(ni]tM+m]tM+m^:q=q^:q=r^V@Ou^V@P!^qdb$^qde&_83t(_84"*_SX1,_Sa:/_o'C0_o0L3
`5KU4`Pog8`Pog8`l?$<`l?$=a2c6@a2c6AaN2HDaN2KFaiVZHaiV]Jb0%lLb0.uObKJ)PbKS2Sbfn;T
c-=MXc-=MXcHa_\cHa_\cd0q`cd0qad*U.dd*U.edF$@hdF$CjdaHRldaHUne'ldpe'umseC<!teCE+"
e^`4#f%/F'f%/F'f@SX+f@SX,f\"j/f\"j0g"G'3g"G*5g=k97g=k<9gY:K;gYCT>gt^]?gtgfBh;-oC
~>
<~\$riU\$riU\@B&Y\@B&Y\[f8]\[f8]]"5Ja]"5Ja]=Y\e]=Y\e]Y(ni]Y(ni]tM+m]tM+m^:q=q^:q=q
^V@Ou^V@Ou^qdb$^qdb$_83t(_83t(_SX1,_SX1,_o'C0_o'C0`5KU4`5KU4`Pog8`Pog8`l?$<`l?$<
a2c6@a2c6@aN2HDaN2HDaiVZHaiVZHb0%lLb0%lLbKJ)PbKJ)Pbfn;Tbfn;Tc-=MXc-=MXcHa_\cHa_\
cd0q`cd0q`d*U.dd*U.ddF$@hdF$@hdaHRldaHRle'ldpe'ldpeC<!teC<!te^`4#e^`4#f%/F'f%/F'
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
126.915 101.395 mo
124.723 100.66 122.946 99.6123 121.585 98.2515 cv
120.225 96.8911 119.545 95.2046 119.545 93.1934 cv
119.545 91.2197 120.251 89.5244 121.663 88.1055 cv
123.075 86.687 124.787 85.9775 126.799 85.9775 cv
128.784 85.9775 130.486 86.6812 131.905 88.0864 cv
132.705 88.8599 133.376 90.0918 133.917 91.7808 cv
130.28 93.2124 li
129.842 92.0259 129.442 91.2524 129.081 90.8911 cv
128.449 90.2725 127.688 89.9624 126.799 89.9624 cv
125.896 89.9624 125.129 90.2759 124.497 90.9009 cv
123.865 91.5264 123.549 92.2905 123.549 93.1934 cv
123.549 94.0957 123.865 94.8633 124.497 95.4951 cv
125.206 96.1914 126.187 96.8296 127.438 97.4102 cv
129.861 98.1973 131.918 99.4346 133.607 101.124 cv
135.504 102.994 136.451 105.264 136.451 107.933 cv
136.451 110.603 135.506 112.882 133.617 114.771 cv
131.729 116.661 129.455 117.605 126.799 117.605 cv
124.129 117.605 121.854 116.657 119.971 114.761 cv
118.462 113.253 117.507 111.17 117.107 108.513 cv
120.996 107.101 li
121.24 109.384 121.84 111.002 122.795 111.957 cv
123.903 113.066 125.238 113.62 126.799 113.62 cv
128.358 113.62 129.693 113.066 130.803 111.957 cv
131.912 110.848 132.467 109.506 132.467 107.933 cv
132.467 106.373 131.912 105.038 130.803 103.929 cv
129.745 102.872 128.449 102.027 126.915 101.395 cv
cp
.192157 .290196 .388235 rgb
f
155.698 89.9624 mo
152.436 89.9624 149.653 91.1138 147.352 93.4155 cv
145.05 95.7173 143.898 98.5 143.898 101.763 cv
143.898 105.025 145.053 107.811 147.361 110.119 cv
149.67 112.427 152.448 113.582 155.698 113.582 cv
158.961 113.582 161.743 112.427 164.045 110.119 cv
166.347 107.811 167.498 105.025 167.498 101.763 cv
167.498 98.5 166.347 95.7173 164.045 93.4155 cv
161.743 91.1138 158.961 89.9624 155.698 89.9624 cv
cp
166.898 90.5625 mo
169.993 93.6572 171.541 97.3906 171.541 101.763 cv
171.541 106.134 169.993 109.868 166.898 112.962 cv
163.804 116.057 160.07 117.605 155.698 117.605 cv
151.327 117.605 147.594 116.057 144.499 112.962 cv
141.403 109.868 139.856 106.134 139.856 101.763 cv
139.856 97.3906 141.403 93.6572 144.499 90.5625 cv
147.594 87.4673 151.327 85.9199 155.698 85.9199 cv
160.07 85.9199 163.804 87.4673 166.898 90.5625 cv
cp
f
200.827 109.906 mo
203.826 112.595 li
200.163 115.935 196.288 117.605 192.2 117.605 cv
187.828 117.605 184.101 116.064 181.02 112.982 cv
177.938 109.9 176.396 106.173 176.396 101.801 cv
176.396 97.4424 177.938 93.7153 181.02 90.6201 cv
184.101 87.5254 187.828 85.9775 192.2 85.9775 cv
196.288 85.9775 200.163 87.6484 203.826 90.9878 cv
200.827 93.7153 li
198.067 91.2656 195.191 90.04 192.2 90.04 cv
188.963 90.04 186.193 91.188 183.892 93.4834 cv
181.59 95.7788 180.438 98.5518 180.438 101.801 cv
180.438 105.064 181.59 107.843 183.892 110.138 cv
186.193 112.434 188.963 113.582 192.2 113.582 cv
195.191 113.582 198.067 112.356 200.827 109.906 cv
cp
f
213.033 86.3262 mo
213.033 117.276 li
209.029 117.276 li
209.029 86.3262 li
213.033 86.3262 li
cp
f
232.3 102.323 mo
229.649 95.0693 li
227.019 102.323 li
232.3 102.323 li
cp
230.732 86.3262 mo
241.99 117.276 li
237.735 117.276 li
233.75 106.328 li
225.549 106.328 li
221.583 117.276 li
217.309 117.276 li
228.566 86.3262 li
230.732 86.3262 li
cp
f
245.859 117.276 mo
245.859 86.3262 li
249.864 86.3262 li
249.864 113.253 li
260.929 113.253 li
260.929 117.276 li
245.859 117.276 li
cp
f
283.87 86.3262 mo
293.909 103.677 li
303.91 86.3262 li
307.566 86.3262 li
307.566 117.276 li
303.562 117.276 li
303.562 94.9146 li
293.909 111.628 li
284.219 94.9146 li
284.219 117.276 li
280.215 117.276 li
280.215 86.3262 li
283.87 86.3262 li
cp
f
330.991 86.3262 mo
330.991 90.3301 li
318.321 90.3301 li
318.321 99.7891 li
330.991 99.7891 li
330.991 103.794 li
318.321 103.794 li
318.321 113.253 li
330.991 113.253 li
330.991 117.276 li
314.317 117.276 li
314.317 86.3262 li
330.991 86.3262 li
cp
f
340.315 90.4077 mo
340.315 113.214 li
343.501 113.214 346.111 112.189 348.149 110.138 cv
350.444 107.843 351.593 105.064 351.593 101.801 cv
351.593 98.5518 350.444 95.7725 348.149 93.4639 cv
346.111 91.4263 343.501 90.4077 340.315 90.4077 cv
cp
339.251 86.3262 mo
344.281 86.3521 348.201 87.7769 351.013 90.6011 cv
354.095 93.709 355.636 97.4424 355.636 101.801 cv
355.636 106.173 354.095 109.906 351.013 113.001 cv
348.201 115.825 344.281 117.25 339.251 117.276 cv
336.312 117.276 li
336.312 86.3262 li
339.251 86.3262 li
cp
f
364.882 86.3262 mo
364.882 117.276 li
360.878 117.276 li
360.878 86.3262 li
364.882 86.3262 li
cp
f
384.148 102.323 mo
381.498 95.0693 li
378.867 102.323 li
384.148 102.323 li
cp
382.581 86.3262 mo
393.84 117.276 li
389.584 117.276 li
385.599 106.328 li
377.397 106.328 li
373.432 117.276 li
369.156 117.276 li
380.415 86.3262 li
382.581 86.3262 li
cp
f
413.396 86.3262 mo
425.021 106.444 li
436.628 86.3262 li
438.62 86.3262 li
438.543 86.4614 li
438.543 117.276 li
436.802 117.276 li
436.802 89.479 li
425.021 109.868 li
413.222 89.479 li
413.222 117.276 li
411.48 117.276 li
411.48 86.4614 li
411.403 86.3262 li
413.396 86.3262 li
cp
f
463.187 108.919 mo
463.187 105.477 li
462.864 103.774 462.058 102.278 460.769 100.989 cv
459.054 99.2734 456.984 98.416 454.56 98.416 cv
452.135 98.416 450.065 99.2734 448.351 100.989 cv
446.635 102.704 445.777 104.773 445.777 107.198 cv
445.777 109.623 446.635 111.689 448.351 113.398 cv
450.065 115.106 452.135 115.96 454.56 115.96 cv
456.984 115.96 459.054 115.103 460.769 113.388 cv
462.058 112.099 462.864 110.609 463.187 108.919 cv
cp
464.928 117.276 mo
463.187 117.276 li
463.187 113.407 li
462.852 113.859 462.484 114.291 462.084 114.704 cv
460.008 116.78 457.5 117.818 454.56 117.818 cv
451.632 117.818 449.13 116.78 447.054 114.704 cv
444.978 112.627 443.939 110.126 443.939 107.198 cv
443.939 104.258 444.978 101.75 447.054 99.6733 cv
449.13 97.5972 451.632 96.5586 454.56 96.5586 cv
457.5 96.5586 460.008 97.5972 462.084 99.6733 cv
462.484 100.086 462.852 100.518 463.187 100.969 cv
463.187 98.2808 li
464.928 98.2808 li
464.928 117.276 li
cp
f
470.73 98.2808 mo
472.472 98.2808 li
472.472 101.743 li
472.832 101.228 473.252 100.731 473.729 100.253 cv
475.264 98.7192 476.837 97.9131 478.449 97.8354 cv
478.449 99.7314 li
477.353 99.7832 476.218 100.396 475.045 101.569 cv
473.394 103.207 472.536 105.174 472.472 107.469 cv
472.472 117.276 li
470.73 117.276 li
470.73 98.2808 li
cp
f
491.971 98.2808 mo
487.289 104.083 li
494.756 117.276 li
492.589 117.276 li
486.148 105.477 li
484.445 107.584 li
484.445 117.276 li
482.705 117.276 li
482.705 90.1948 li
484.445 90.1948 li
484.445 104.799 li
489.726 98.2808 li
491.971 98.2808 li
cp
f
512.649 100.157 mo
511.14 98.9961 509.386 98.416 507.388 98.416 cv
504.976 98.416 502.912 99.2705 501.197 100.979 cv
499.482 102.688 498.624 104.754 498.624 107.179 cv
498.624 109.178 499.205 110.932 500.365 112.44 cv
512.649 100.157 li
cp
501.546 113.717 mo
503.184 115.213 505.131 115.96 507.388 115.96 cv
509.813 115.96 511.882 115.103 513.597 113.388 cv
513.816 113.169 514.022 112.943 514.216 112.711 cv
516.053 113.369 li
515.718 113.833 515.338 114.278 514.912 114.704 cv
512.836 116.78 510.328 117.818 507.388 117.818 cv
504.46 117.818 501.958 116.78 499.882 114.704 cv
497.806 112.627 496.768 110.119 496.768 107.179 cv
496.768 104.251 497.806 101.75 499.882 99.6733 cv
501.958 97.5972 504.46 96.5586 507.388 96.5586 cv
509.902 96.5586 512.101 97.3135 513.983 98.8218 cv
514.293 99.0801 514.604 99.3638 514.912 99.6733 cv
515.028 99.7891 515.138 99.9058 515.241 100.021 cv
513.926 101.337 li
501.546 113.717 li
cp
f
523.404 98.2808 mo
523.404 90.1948 li
525.145 90.1948 li
525.145 98.2808 li
529.014 98.2808 li
529.014 100.021 li
525.145 100.021 li
525.145 117.276 li
523.404 117.276 li
523.404 100.021 li
519.535 100.021 li
519.535 98.2808 li
523.404 98.2808 li
cp
f
535.784 98.2808 mo
535.784 117.276 li
534.043 117.276 li
534.043 98.2808 li
535.784 98.2808 li
cp
536.142 92.0518 mo
536.483 92.3872 536.654 92.7939 536.654 93.2705 cv
536.654 93.7607 536.483 94.1733 536.142 94.5083 cv
535.8 94.8442 535.391 95.0112 534.914 95.0112 cv
534.437 95.0112 534.027 94.8442 533.686 94.5083 cv
533.344 94.1733 533.173 93.7607 533.173 93.2705 cv
533.173 92.7939 533.344 92.3872 533.686 92.0518 cv
534.027 91.7168 534.437 91.5488 534.914 91.5488 cv
535.391 91.5488 535.8 91.7168 536.142 92.0518 cv
cp
f
543.716 102.517 mo
543.716 117.276 li
541.975 117.276 li
541.975 98.2808 li
543.716 98.2808 li
543.716 99.499 li
545.302 97.9263 547.146 97.1392 549.247 97.1392 cv
551.492 97.1392 553.316 97.8418 554.722 99.248 cv
556.128 100.653 556.85 102.427 556.889 104.567 cv
556.889 117.276 li
555.147 117.276 li
555.147 104.722 li
555.147 103.11 554.564 101.733 553.397 100.592 cv
552.229 99.4507 550.847 98.8804 549.247 98.8804 cv
547.648 98.8804 546.269 99.4414 545.108 100.563 cv
544.477 101.195 544.013 101.847 543.716 102.517 cv
cp
f
581.437 105.38 mo
581.1 103.716 580.301 102.253 579.037 100.989 cv
577.322 99.2734 575.253 98.416 572.828 98.416 cv
570.403 98.416 568.334 99.2734 566.619 100.989 cv
564.903 102.704 564.046 104.773 564.046 107.198 cv
564.046 109.623 564.903 111.692 566.619 113.407 cv
568.334 115.123 570.403 115.98 572.828 115.98 cv
575.253 115.98 577.322 115.123 579.037 113.407 cv
580.288 112.157 581.088 110.706 581.437 109.055 cv
581.437 105.38 li
cp
581.396 113.504 mo
581.074 113.917 580.727 114.317 580.353 114.704 cv
578.276 116.78 575.768 117.818 572.828 117.818 cv
569.899 117.818 567.398 116.78 565.322 114.704 cv
563.246 112.627 562.208 110.126 562.208 107.198 cv
562.208 104.258 563.246 101.753 565.322 99.6831 cv
567.398 97.6133 569.899 96.5781 572.828 96.5781 cv
575.768 96.5781 578.276 97.6104 580.353 99.6733 cv
580.753 100.086 581.119 100.518 581.455 100.969 cv
581.455 98.2808 li
583.196 98.2808 li
583.196 113.04 li
583.196 115.89 582.184 118.327 580.159 120.352 cv
578.083 122.428 575.581 123.466 572.654 123.466 cv
569.713 123.466 567.205 122.428 565.129 120.352 cv
564.703 119.926 564.323 119.481 563.987 119.017 cv
565.825 118.359 li
566.019 118.592 566.226 118.817 566.444 119.036 cv
568.159 120.751 570.229 121.609 572.654 121.609 cv
575.064 121.609 577.129 120.751 578.844 119.036 cv
580.404 117.476 581.255 115.632 581.396 113.504 cv
cp
f
604.513 88.0864 mo
604.513 104.78 li
609.773 104.78 li
612.068 104.78 614.032 103.965 615.663 102.333 cv
617.295 100.702 618.11 98.7324 618.11 96.4238 cv
618.11 94.1152 617.295 92.1484 615.663 90.5234 cv
614.032 88.8989 612.068 88.0864 609.773 88.0864 cv
604.513 88.0864 li
cp
604.513 106.541 mo
604.513 117.276 li
602.771 117.276 li
602.771 86.3262 li
610.896 86.3262 li
613.256 86.6484 615.261 87.6353 616.911 89.2856 cv
618.885 91.2588 619.871 93.6377 619.871 96.4238 cv
619.871 99.2222 618.885 101.607 616.911 103.581 cv
614.938 105.554 612.559 106.541 609.773 106.541 cv
604.513 106.541 li
cp
f
640.82 108.919 mo
640.82 105.477 li
640.498 103.774 639.691 102.278 638.402 100.989 cv
636.688 99.2734 634.618 98.416 632.193 98.416 cv
629.769 98.416 627.699 99.2734 625.984 100.989 cv
624.269 102.704 623.411 104.773 623.411 107.198 cv
623.411 109.623 624.269 111.689 625.984 113.398 cv
627.699 115.106 629.769 115.96 632.193 115.96 cv
634.618 115.96 636.688 115.103 638.402 113.388 cv
639.691 112.099 640.498 110.609 640.82 108.919 cv
cp
642.562 117.276 mo
640.82 117.276 li
640.82 113.407 li
640.485 113.859 640.118 114.291 639.718 114.704 cv
637.642 116.78 635.134 117.818 632.193 117.818 cv
629.266 117.818 626.764 116.78 624.688 114.704 cv
622.611 112.627 621.573 110.126 621.573 107.198 cv
621.573 104.258 622.611 101.75 624.688 99.6733 cv
626.764 97.5972 629.266 96.5586 632.193 96.5586 cv
635.134 96.5586 637.642 97.5972 639.718 99.6733 cv
640.118 100.086 640.485 100.518 640.82 100.969 cv
640.82 98.2808 li
642.562 98.2808 li
642.562 117.276 li
cp
f
664.652 112.711 mo
666.489 113.369 li
666.154 113.833 665.773 114.278 665.349 114.704 cv
663.272 116.78 660.764 117.818 657.824 117.818 cv
654.896 117.818 652.395 116.78 650.318 114.704 cv
648.242 112.627 647.204 110.119 647.204 107.179 cv
647.204 104.251 648.242 101.75 650.318 99.6733 cv
652.395 97.5972 654.896 96.5586 657.824 96.5586 cv
660.764 96.5586 663.272 97.5972 665.349 99.6733 cv
665.773 100.099 666.154 100.538 666.489 100.989 cv
664.652 101.666 li
664.459 101.434 664.253 101.202 664.033 100.969 cv
662.318 99.2671 660.248 98.416 657.824 98.416 cv
655.412 98.416 653.349 99.2705 651.634 100.979 cv
649.919 102.688 649.061 104.754 649.061 107.179 cv
649.061 109.603 649.919 111.673 651.634 113.388 cv
653.349 115.103 655.412 115.96 657.824 115.96 cv
660.248 115.96 662.318 115.103 664.033 113.388 cv
664.253 113.169 664.459 112.943 664.652 112.711 cv
cp
f
680.107 98.2808 mo
675.426 104.083 li
682.893 117.276 li
680.727 117.276 li
674.285 105.477 li
672.583 107.584 li
672.583 117.276 li
670.842 117.276 li
670.842 90.1948 li
672.583 90.1948 li
672.583 104.799 li
677.863 98.2808 li
680.107 98.2808 li
cp
f
203.681 161.321 mo
156.524 161.321 118.296 199.549 118.296 246.705 cv
118.296 262.638 122.672 277.54 130.268 290.302 cv
119.498 333.713 li
162.291 321.389 li
174.555 328.198 188.662 332.09 203.681 332.09 cv
250.839 332.09 289.066 293.861 289.066 246.705 cv
289.066 199.549 250.839 161.321 203.681 161.321 cv
cp
level3{
gsave
clp
[106.328 -150.793 150.793 106.328 169.85 338.534 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.905882 .905882 .905882 ]
/C1 [.905882 .905882 .905882 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.905882 .905882 .905882 ]
/C1 [.984314 .984314 .984314 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.984314 .984314 .984314 ]
/C1 [.984314 .984314 .984314 ]
/N 1 
>>
]
/Bounds [.219388 .882653 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.328 -150.793 150.793 106.328 169.85 338.534 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
kNM-nkih6okih9ql07Hsl07KulK[["lK[[#lg*m&lg*m'm-O**m-O**mHs<.mHs<.mdBN2mdBN2mdKW5
n*f`6n*oi9nF5r:nF5u<naZ/>naZ2@o()ABo()ACoCMSFoCMSGo^qeJo^qeJp%A"Np%A"Np@e4Rp@e4R
p@n=Up\4FVp\=OYq"XXZq"aa]q>'j^q>'m`qYL'bqYL*dqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
~>
<~kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
kNM-nkih6okih9ql07Hsl07KulK[["lK[[#lg*m&lg*m'm-O**m-O**mHs<.mHs<.mdBN2mdBN2mdKW5
n*f`6n*oi9nF5r:nF5u<naZ/>naZ2@o()ABo()ACoCMSFoCMSGo^qeJo^qeJp%A"Np%A"Np@e4Rp@e4R
p@n=Up\4FVp\=OYq"XXZq"aa]q>'j^q>'m`qYL'bqYL*dqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
~>
<~kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
kNM-nkih6okih9ql07Hsl07KulK[["lK[[#lg*m&lg*m'm-O**m-O**mHs<.mHs<.mdBN2mdBN2mdKW5
n*f`6n*oi9nF5r:nF5u<naZ/>naZ2@o()ABo()ACoCMSFoCMSGo^qeJo^qeJp%A"Np%A"Np@e4Rp@e4R
p@n=Up\4FVp\=OYq"XXZq"aa]q>'j^q>'m`qYL'bqYL*dqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
204.647 176.142 mo
165.497 176.142 133.764 207.879 133.764 247.028 cv
133.764 262.006 138.421 275.892 146.35 287.337 cv
140.121 312.448 li
164.486 305.431 li
175.904 313.296 189.733 317.912 204.647 317.912 cv
243.798 317.912 275.533 286.177 275.533 247.028 cv
275.533 207.879 243.798 176.142 204.647 176.142 cv
cp
level3{
gsave
clp
[74.4845 -157.155 157.155 74.4845 160.747 337.36 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.211765 .713726 .286275 ]
/C1 [.211765 .713726 .286275 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.211765 .713726 .286275 ]
/C1 [.341176 .788235 .396078 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.341176 .788235 .396078 ]
/C1 [.341176 .788235 .396078 ]
/N 1 
>>
]
/Bounds [.178571 .760204 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[74.4845 -157.155 157.155 74.4845 160.747 337.36 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HP2`EZT3&ilW3B9)[
3]];_3]fDb4$5Vf4?Pbi4Zttm5!D.p5<h@t5X7S"5s[e&6:+"*6:4+-6UX=16psI477B[87Rfj;7n6'?
84Z9B8P)KF8kM]J8kVfM92&#Q9MA/T9he>W:/4P[:JXb^:f'tb;,L1f;,U:i;H$Lm;c?Xp<)cjt<E3%"
<`W7&='&I)='&I)='&I)='&I)='&I)='&I)='&I)='&I)='&I)='&I)='&I)='&I)='&I)='&I)='&I)
~>
<~[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NZS\$riU\$rlW
\@B&Y\@B)[\[f8]\[f;_]"5Ja]">Sd]=Y\e]=beh]Y(ni]Y2"l]tM+m]tV4p^:q=q^;%Ft^V@Ou^VIY#
^qdb$_83t(_83t(_SX1,_SX1,_o'C0_o'C0`5KU4`5KU4`Pog8`Pog8`l?$<`l?$=a2c6@a2c6AaN2HD
aN2HEaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZH
~>
<~8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8kM]J8kVfM91qrP
9MA,S9he>V9hnGY:/4S\:JXb_:f'tb:f1(e;,L4h;GpCk;c?Un;cH^q<)cjt<E3%"<`W7%<``@(='&L+
=BJ[.=]nm1=^#!4>$>-7>?b<:>[1N=>[:W@?!UcC?=$rF?XI/I?XR8L?smDO@:<SR@U`eU@q0"Y@q0%[
A7T4^AS#FaAS#FaAS#FaAS#FaAS#FaAS#FaAS#FaAS#FaAS#FaAS#FaAS#FaAS#FaAS#FaAS#FaAS#Fa
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
182.094 239.939 mo
183.081 238.803 184.075 237.672 185.061 236.533 cv
186.726 234.605 189.213 232.733 189.34 229.957 cv
189.461 227.293 188.513 224.645 187.571 222.218 cv
186.965 220.659 186.345 219.106 185.748 217.544 cv
184.667 214.71 183.271 210.728 181.704 209.065 cv
179.587 206.818 175.946 206.337 173.073 207.718 cv
173.071 207.72 156.317 215.775 161.473 231.883 cv
161.473 231.883 171.461 277.315 221.726 286.658 cv
221.726 286.658 239.768 289.236 244.602 278.282 cv
245.645 275.913 246.349 272.593 246.175 270.018 cv
246.006 267.518 244.243 265.865 242.191 264.688 cv
239.539 263.168 237.186 261.743 234.171 260.258 cv
231.553 258.969 228.54 257.065 225.524 257.896 cv
223.317 258.504 221.731 260.526 220.233 262.122 cv
218.281 264.198 216.287 266.236 214.313 268.293 cv
214.313 268.293 188.859 258.949 182.094 239.939 cv
cp
level3{
gsave
clp
[52.2667 -63.8815 63.8815 52.2667 171.799 299.882 ]ct
/3 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.905882 .905882 .905882 ]
/C1 [.905882 .905882 .905882 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.905882 .905882 .905882 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
]
/Bounds [.219388 .882653 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[52.2667 -63.8815 63.8815 52.2667 171.799 299.882 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
kih6okih6pl07Hsl07KulK[["lKdd%lg*m&m-O**m-O*+mHs<.mHs?0mdBN2mdKW5n*f`6nF5r:nF5r;
naZ/>naZ2@o()ABo()DDoCMSFoCV\Io^qeJp%A"Np%A"Op@e4Rp@e7Tp\4FVp\=OYq"XXZq>'j^q>'j_
qYL'bqYL*dqtp9fqu$Bir;?KjrVc]nrVc]orr2orrr2rts8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
kih6okih6pl07Hsl07KulK[["lKdd%lg*m&m-O**m-O*+mHs<.mHs?0mdBN2mdKW5n*f`6nF5r:nF5r;
naZ/>naZ2@o()ABo()DDoCMSFoCV\Io^qeJp%A"Np%A"Op@e4Rp@e7Tp\4FVp\=OYq"XXZq>'j^q>'j_
qYL'bqYL*dqtp9fqu$Bir;?KjrVc]nrVc]orr2orrr2rts8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
kih6okih6pl07Hsl07KulK[["lKdd%lg*m&m-O**m-O*+mHs<.mHs?0mdBN2mdKW5n*f`6nF5r:nF5r;
naZ/>naZ2@o()ABo()DDoCMSFoCV\Io^qeJp%A"Np%A"Op@e4Rp@e7Tp\4FVp\=OYq"XXZq>'j^q>'j_
qYL'bqYL*dqtp9fqu$Bir;?KjrVc]nrVc]orr2orrr2rts8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
404.438 347.511 mo
357.279 347.511 319.054 385.738 319.054 432.896 cv
319.054 448.827 323.43 463.729 331.025 476.493 cv
320.255 519.905 li
363.049 507.579 li
375.313 514.388 389.419 518.28 404.438 518.28 cv
451.597 518.28 489.822 480.052 489.822 432.896 cv
489.822 385.738 451.597 347.511 404.438 347.511 cv
cp
level3{
gsave
clp
[122.783 -148.977 148.977 122.783 319.123 531.5 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.783 -148.977 148.977 122.783 319.123 531.5 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
405.405 362.333 mo
366.254 362.333 334.52 394.069 334.52 433.218 cv
334.52 448.196 339.178 462.081 347.107 473.528 cv
340.876 498.638 li
365.242 491.62 li
376.66 499.485 390.491 504.104 405.405 504.104 cv
444.556 504.104 476.29 472.368 476.29 433.218 cv
476.29 394.069 444.556 362.333 405.405 362.333 cv
cp
level3{
gsave
clp
[3.81996 -174.627 174.627 3.81996 414.621 523.315 ]ct
/4 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.231373 .34902 .596078 ]
/C1 [.231373 .34902 .596078 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.231373 .34902 .596078 ]
/C1 [.372549 .513726 .811765 ]
/N 1 
>>
]
/Bounds [.30102 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.81996 -174.627 174.627 3.81996 414.621 523.315 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc
4$,Mc4$,Mc4$,Mc4$,Mc4$,Md4?P_g4Ztqk5!D.o5!M7r5<hCu5X7S#5s[e&6:+"*6:4+-6UO706psF3
77BX67Rfj:7Ros=7n6*@84Z9C8P)KF8kM]J8kVfM91qrP9MA,S9he>V:/4PZ:/=Y]:JXe`:f'tc;,L1f
;GpCj;H$Lm;c?Xp<)cgs<E3%!<`W7%<``@(='&L+=BJ[.=]nm1>$>*5>$G38>?b?;>[1N>?!U`A?=$rE
~>
<~=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1
=]nm1=]nm1=]nm1=]nm1=]np3>$>-7>?b?;>[1N>?!U`B?=$rF?XI/J?smAM@:<SQ@U`eU@q0"YA7T4]
A7]=`AS,OdAnPahB4tslBP;*oBk_<sC2.O"CMR^%Ci!p)D/F--DJj?1Df9Q4E,]c8EH,u<EcQ2@F)uDD
F*)MGFEM_KF`qqOG'A.SGB\:VG^+LZH$O^^H?spbH[C*eI!g<iI=6NmIXZ`qIt)rtJ:N0#JUrB'JqAT+
~>
<~R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.
R$a8.R$a8.R$a8.R$a8.R$jA1R[T\7S"#n;S=H.@SXuFET:_aJTV.sOTqS3TU8+KYUSO]]V5:#cVP^8h
Vl-JlW2ZbqWiE)"X/i;&XK8P+Xfeh0YHP.5Yct@:Z*CU?ZEpmDZa@*H[C*EN[^NZS\$rlW\@K/\]"5Jb
]=Y\f]Y(qk]tV4p^V@Ou^qdb%_84"*_Sa:/_o0L3`Pog9`l?'>a2c9BaN;QGb0%lMbKJ)Qbfn>Vc-FV[
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
437.745 411.007 mo
449.619 411.007 li
449.619 392.344 li
434.877 392.344 li
431.825 392.344 li
431.825 392.344 420.642 392.073 413.509 401.337 cv
413.509 401.337 408.653 405.917 408.575 419.325 cv
408.57 419.325 li
408.57 433.323 li
390.99 433.323 li
390.99 453.138 li
408.57 453.138 li
408.57 504.329 li
428.86 504.329 li
428.86 453.138 li
446.306 453.138 li
448.741 433.323 li
428.86 433.323 li
428.86 419.325 li
428.849 419.325 li
428.901 417.763 429.597 410.868 437.745 411.007 cv
cp
level3{
gsave
clp
[122.783 -148.976 148.976 122.783 319.124 531.499 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.783 -148.976 148.976 122.783 319.124 531.499 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
404.438 161.321 mo
357.283 161.321 319.056 199.548 319.056 246.705 cv
319.056 262.637 323.431 277.54 331.027 290.302 cv
320.256 333.713 li
363.05 321.388 li
375.313 328.198 389.42 332.09 404.438 332.09 cv
451.599 332.09 489.823 293.861 489.823 246.705 cv
489.823 199.548 451.599 161.321 404.438 161.321 cv
cp
level3{
gsave
clp
[106.327 -150.791 150.791 106.327 370.608 338.534 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.327 -150.791 150.791 106.327 370.608 338.534 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
405.407 176.142 mo
366.256 176.142 334.521 207.878 334.521 247.027 cv
334.521 262.006 339.18 275.891 347.109 287.337 cv
340.879 312.447 li
365.243 305.43 li
376.664 313.296 390.493 317.913 405.407 317.913 cv
444.558 317.913 476.292 286.176 476.292 247.027 cv
476.292 207.878 444.558 176.142 405.407 176.142 cv
cp
level3{
gsave
clp
[74.4855 -157.157 157.157 74.4855 361.504 337.36 ]ct
/5 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .847059 .47451 ]
/C1 [1 .847059 .47451 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .847059 .47451 ]
/C1 [.894118 .372549 .345098 ]
/N 1.24263 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.894118 .372549 .345098 ]
/C1 [.823529 .164706 .611765 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.823529 .164706 .611765 ]
/C1 [.411765 .407843 .87451 ]
/N 1 
>>
]
/Bounds [.0969388 .44898 .678571 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[74.4855 -157.157 157.157 74.4855 361.504 337.36 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8N#srr2orrVc]nr;?Kjr;6Bgqtg0cqYBs_q"XXZp\4FUp@e4Q
p%@tLo^h\Go()AAnaZ,<nF,i7mdBN1mHs9,m-F!'lK[[!l07Eqki_-kk2tdejlGL_j5]1Zio8qUiS`YP
hr!>KhVR,Fh;-lAgt^Z=gY1B8g"G'2f\"j.f@SU)f%&=$eC<!te'ldodaHOiccs\WaiMNB`5BI.^V7Cn
]",>Z[C!9FYck11X/`+rVPKu]Tq@pIS=5k5QBd\uOcYWaN/NRLLPCM8Jq8E#I=-?dG^":PF)c/;DJX*'
~>
<~f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f[na+f%&:!da?FfcHXSVb/q`F`l5j4_8*h!]Xtbb\$i]NZE^U9
XfJJ#Vl$8bTqJ!JS=5k4QB[SqOH,<YMMR%AKS"`(I=-?cGBJ"JE,TT0C1q6k@q&hP?<pf?>$4s/<`N.!
;c6Ih:JOVX9M7uL84Q-<6pj:-5sRXu4Zkee3B9&X2Dm<I1,1I:0.nh-.k3"u.kE8(/h\n40etOA1c70M
2`NfY3]fGe4[)(q5X@_(6UX@47Rp!@8P2WL9MJ8X:Jand;H$Op<E<1'=BSg3>?kH??=.)K@:E_WA7]@c
~>
<~H$O[\H$O[\H$O[\H$O[\H$O[\H$O[\H$FRYG^+IWGB\7SG'8"NF`heJFE;MEEcQ2?EH,r:E,TZ5DJj?/
D/=$)CMR^#C2%BrBP;$kB4baeAS#C_@q/tW@UW\Q?sd8J?=$oC>[1N<>?Y35=]ed.=^#$7?!guJ@Uiq[
B4u!oCM[m,E,fo>FEVkQH$XgcIXcm!JqSi4LPUeEN/`jYOHG`kQ'Rc(R[]h<SXuIHTqS3UUnsrcVl6Sp
WiN5'Y-+t4Z*L^B['d?O\%&u[]=Y_h^;%J!_8=+.`5Ta:aN;QHbKS5UcHjkbdF-Lne^i='f\,!4gYCWA
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
440.599 261.393 mo
440.599 273.699 430.622 283.675 418.315 283.675 cv
390.564 283.675 li
378.258 283.675 368.282 273.699 368.282 261.393 cv
368.282 233.64 li
368.282 221.335 378.258 211.359 390.564 211.359 cv
418.315 211.359 li
430.622 211.359 440.599 221.335 440.599 233.64 cv
440.599 261.393 li
cp
421.614 202.769 mo
387.267 202.769 li
372.037 202.769 359.692 215.114 359.692 230.344 cv
359.692 264.69 li
359.692 279.92 372.037 292.265 387.267 292.265 cv
421.614 292.265 li
436.843 292.265 449.188 279.92 449.188 264.69 cv
449.188 230.344 li
449.188 215.114 436.843 202.769 421.614 202.769 cv
cp
1 1 1 rgb
f
405.638 261.854 mo
397.805 261.854 391.457 255.503 391.457 247.67 cv
391.457 239.837 397.805 233.486 405.638 233.486 cv
413.472 233.486 419.823 239.837 419.823 247.67 cv
419.823 255.503 413.472 261.854 405.638 261.854 cv
cp
405.638 224.098 mo
392.621 224.098 382.066 234.652 382.066 247.67 cv
382.066 260.689 392.621 271.243 405.638 271.243 cv
418.657 271.243 429.212 260.689 429.212 247.67 cv
429.212 234.652 418.657 224.098 405.638 224.098 cv
cp
f
433.573 223.731 mo
433.573 227.042 430.89 229.725 427.579 229.725 cv
424.271 229.725 421.587 227.042 421.587 223.731 cv
421.587 220.422 424.271 217.739 427.579 217.739 cv
430.89 217.739 433.573 220.422 433.573 223.731 cv
cp
f
605.196 161.321 mo
558.038 161.321 519.813 199.549 519.813 246.706 cv
519.813 262.638 524.188 277.54 531.784 290.302 cv
521.015 333.714 li
563.808 321.389 li
576.071 328.198 590.177 332.09 605.196 332.09 cv
652.354 332.09 690.581 293.862 690.581 246.706 cv
690.581 199.549 652.354 161.321 605.196 161.321 cv
cp
level3{
gsave
clp
[106.327 -150.791 150.791 106.327 571.366 338.535 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.327 -150.791 150.791 106.327 571.366 338.535 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
606.163 176.143 mo
567.013 176.143 535.278 207.879 535.278 247.028 cv
535.278 262.006 539.937 275.892 547.866 287.337 cv
541.638 312.448 li
566.001 305.431 li
577.419 313.296 591.249 317.913 606.163 317.913 cv
645.315 317.913 677.05 286.177 677.05 247.028 cv
677.05 207.879 645.315 176.143 606.163 176.143 cv
cp
level3{
gsave
clp
[74.4857 -157.157 157.157 74.4857 562.262 337.36 ]ct
/6 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.760784 .0941176 .117647 ]
/C1 [.760784 .0941176 .117647 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.760784 .0941176 .117647 ]
/C1 [.870588 .160784 .145098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.870588 .160784 .145098 ]
/C1 [.870588 .160784 .145098 ]
/N 1 
>>
]
/Bounds [.168367 .765306 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[74.4857 -157.157 157.157 74.4857 562.262 337.36 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_Sa:/_o'C1`5KU4`Pog8
`Q#p;`l?$=a2c6@aN2HDaN2KFaiVZIb0%lLb0.uObKJ,Rbfn;Tc-=MXc-FV[cHa_]cd0q`d*U.dd*^7g
dF$@idaHRle'ldpe'lgreC<!ue^`4#e^i=&f%/I)f@SX+f\"j/f\+s2g"G'4g=k97gY:K;gY:N=gt^]@
h;-oChVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,G
~>
<~(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`=2/)&X;0)&X>2
)B'M4)B'M5)]K_8)]K_8*#oq<*#oq<*$$%?*??.@*??1B*Zc@D*Zc@E+!2RH+!2RH+<VdL+<VdL+<_mO
+X&!P+X/*S+sJ3T+sJ6V,9nEX,9nEY,U=W\,U=W\,pai`,pai`,pjrc-71&d-71)f-RU8h-RU8i-n$Jl
-n$Jl.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
~>
<~*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
*ZlIG+!2RH+!2RH+!2RH+!2RH+!2RI+<VdL+<VdL+<VdL+<VdL+<VdL+<_mO+X&!P+X&!P+X&!P+X&!P
+X&!Q+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sS<W,9nEX,9nEX,9nEX,9nEX,9nEY,U=W\,U=W\,U=W\,U=W\
,U=W\,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
589.382 224.747 mo
633.017 247.518 li
589.382 270.289 li
589.382 224.747 li
cp
1 1 1 rgb
f
589.382 225.091 mo
627.335 250.483 li
633.017 247.518 li
592.755 226.506 li
589.382 225.042 li
589.382 225.091 li
cp
.909804 .878431 .878431 rgb
f
605.196 533.703 mo
558.038 533.703 519.813 571.933 519.813 619.089 cv
519.813 635.019 524.187 649.923 531.784 662.685 cv
521.014 706.095 li
563.808 693.771 li
576.069 700.579 590.176 704.474 605.196 704.474 cv
652.354 704.474 690.581 666.243 690.581 619.089 cv
690.581 571.933 652.354 533.703 605.196 533.703 cv
cp
level3{
gsave
clp
[106.328 -150.792 150.792 106.328 571.365 710.915 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.328 -150.792 150.792 106.328 571.365 710.915 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
606.163 548.524 mo
567.013 548.524 535.278 580.259 535.278 619.409 cv
535.278 634.39 539.937 648.274 547.866 659.718 cv
541.635 684.829 li
566.001 677.813 li
577.419 685.679 591.247 690.294 606.163 690.294 cv
645.313 690.294 677.048 658.56 677.048 619.409 cv
677.048 580.259 645.313 548.524 606.163 548.524 cv
cp
.737255 .0313726 .109804 rgb
f
598.913 651.733 mo
604.759 658.444 614.479 660.956 622.995 658.354 cv
624.761 657.813 626.502 657.192 628.196 656.462 cv
631.487 655.04 634.585 653.169 637.241 650.747 cv
644.839 643.823 648.964 635.093 650.884 625.181 cv
653.376 612.294 651.116 600.276 642.976 589.946 cv
638.03 583.67 631.05 579.558 623.594 576.95 cv
613.477 573.413 602.112 572.999 591.888 576.298 cv
588.953 577.244 586.015 578.528 583.331 580.053 cv
573.758 585.495 566.389 594.253 563.381 604.907 cv
562.581 607.741 562.099 610.708 561.815 613.64 cv
561.132 620.741 562.7 627.774 565.928 634.106 cv
566.437 635.104 567.08 636.032 567.559 637.044 cv
568.698 639.44 570.427 641.839 572.54 643.46 cv
573.525 644.216 574.735 644.876 576.017 644.788 cv
577.804 644.665 578.251 642.956 578.737 641.485 cv
579.276 639.854 579.462 638.14 579.817 636.466 cv
580.14 634.937 580.184 634.022 579.233 632.671 cv
571.726 622.011 574.302 604.747 583.552 596.112 cv
591.936 588.282 601.448 585.992 612.101 587.509 cv
621.595 588.862 630.06 595.085 633.769 604.026 cv
635.288 607.688 635.776 612.665 635.83 616.56 cv
635.908 622.181 635.024 627.196 632.846 632.452 cv
630.986 636.937 628.19 641.28 624.276 644.233 cv
618.515 648.583 606.409 650.466 603.968 641.421 cv
603.37 639.192 603.298 636.298 603.751 634.034 cv
604.89 628.358 607.067 622.96 608.373 617.325 cv
609.069 614.321 609.532 611.302 608.714 608.241 cv
607.749 604.628 605.503 602.302 601.75 601.786 cv
597.757 601.237 594.015 602.485 591.696 605.593 cv
586.859 612.069 586.243 619.478 588.615 627.097 cv
589.127 628.741 589.305 630.151 588.886 631.856 cv
586.602 641.112 584.615 650.442 582.233 659.671 cv
580.615 665.937 580.071 672.378 580.38 678.833 cv
580.464 680.62 580.503 682.431 580.911 684.185 cv
581.183 685.36 581.62 687.032 582.772 687.649 cv
584.368 688.501 585.72 686.468 586.468 685.36 cv
589.427 680.987 591.745 676.126 593.491 671.142 cv
594.624 667.915 595.511 664.608 596.374 661.3 cv
596.679 660.128 598.36 654.116 598.913 651.733 cv
cp
level3{
gsave
[118.108 -171.019 171.019 118.108 521.579 744.083 ]ct
<<
/PatternType 2
/Shading
/1 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[118.108 -171.019 171.019 118.108 521.579 744.083 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/1 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
605.196 347.512 mo
558.04 347.512 519.812 385.74 519.812 432.896 cv
519.812 448.828 524.188 463.731 531.786 476.494 cv
521.013 519.904 li
563.806 507.579 li
576.069 514.39 590.177 518.28 605.196 518.28 cv
652.354 518.28 690.581 480.054 690.581 432.896 cv
690.581 385.74 652.354 347.512 605.196 347.512 cv
cp
level3{
gsave
clp
[122.785 -148.979 148.979 122.785 519.88 531.499 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.785 -148.979 148.979 122.785 519.88 531.499 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
606.163 362.332 mo
567.013 362.332 535.278 394.069 535.278 433.218 cv
535.278 448.197 539.937 462.082 547.866 473.528 cv
541.636 498.639 li
566.001 491.622 li
577.419 499.488 591.249 504.104 606.163 504.104 cv
645.313 504.104 677.048 472.367 677.048 433.218 cv
677.048 394.069 645.313 362.332 606.163 362.332 cv
cp
level3{
gsave
clp
[3.81994 -174.626 174.626 3.81994 610.468 501.214 ]ct
/7 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.980392 .968627 .027451 ]
/C1 [.980392 .968627 .027451 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.980392 .968627 .027451 ]
/C1 [1 .988235 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .988235 0 ]
/C1 [1 .988235 0 ]
/N 1 
>>
]
/Bounds [.0918367 .729592 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.81994 -174.626 174.626 3.81994 610.468 501.214 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYU0eqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqu$Bir;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?NlrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]orr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2oss8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\=OYq"XXZ
q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"aa]q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'m`qYL'b
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'cqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9gr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ="pP89"pP89"pP89"pP89"pP89"pP88"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&4"9\i1"9\i1"9\i1"9\i1"9\i1"9\f/!s8W-!s8W-!s8W-!s8W-!s8W-!s/N*!WiE)!WiE)
!WiE)!WiE)!WiE)!W`<&!<E3%!<E3%!<E3%!<E3%!<E3%zzzzzzzzzzzzzzzzzzzzzz!!!!!~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
593.388 391.431 mo
590.8 392.574 588.47 394.118 586.468 396.02 cv
584.075 398.29 582.132 401.085 580.683 404.334 cv
578.562 409.094 579.063 417.104 579.468 423.543 cv
579.47 423.552 li
579.513 424.241 579.56 424.964 579.601 425.664 cv
579.29 425.807 578.784 425.958 578.04 425.958 cv
576.931 425.958 575.837 425.649 574.808 425.25 cv
573.917 424.905 573.028 424.528 572.058 424.506 cv
571.122 424.488 570.159 424.818 569.36 425.286 cv
568.259 425.934 567.546 426.849 567.353 427.862 cv
567.226 428.534 567.231 429.858 568.702 431.202 cv
569.515 431.94 570.704 432.623 572.239 433.232 cv
572.642 433.39 573.12 433.543 573.626 433.704 cv
575.384 434.261 578.046 435.104 578.739 436.737 cv
579.091 437.564 578.938 438.654 578.29 439.972 cv
578.241 440.079 li
577.446 441.958 576.321 443.726 575.132 445.372 cv
573.282 447.941 571.046 450.325 568.433 452.13 cv
567.069 453.075 565.603 453.899 564.06 454.512 cv
562.671 455.06 561.2 455.288 559.772 455.691 cv
558.62 456.018 557.663 456.766 557.737 458.082 cv
557.757 458.409 557.833 458.735 557.968 459.059 cv
558.423 460.118 559.472 461.02 561.183 461.815 cv
563.271 462.784 566.394 463.601 570.464 464.239 cv
570.671 464.632 570.886 465.612 571.032 466.286 cv
571.187 467.001 571.349 467.737 571.579 468.519 cv
571.827 469.366 572.472 470.379 574.124 470.379 cv
574.751 470.379 575.472 470.237 576.306 470.073 cv
577.528 469.834 579.2 469.506 581.286 469.506 cv
582.442 469.506 583.642 469.607 584.849 469.809 cv
587.175 470.195 589.181 471.612 591.501 473.252 cv
591.696 473.392 591.894 473.531 592.091 473.669 cv
593.524 474.676 594.983 475.65 596.554 476.436 cv
598.306 477.311 600.177 477.929 602.12 478.199 cv
603.235 478.357 604.354 478.379 605.481 478.364 cv
606.716 478.35 607.954 478.286 609.169 478.051 cv
611.06 477.684 612.862 476.983 614.55 476.064 cv
615.329 475.64 616.083 475.175 616.821 474.686 cv
617.511 474.229 618.257 473.783 618.892 473.254 cv
618.896 473.248 li
621.216 471.61 623.22 470.195 625.546 469.809 cv
626.751 469.607 627.948 469.506 629.106 469.506 cv
631.101 469.506 632.679 469.762 634.089 470.036 cv
635.007 470.215 635.722 470.304 636.271 470.304 cv
636.323 470.304 li
636.38 470.304 li
637.589 470.304 638.478 469.641 638.815 468.479 cv
639.042 467.714 639.204 466.995 639.362 466.268 cv
639.499 465.637 639.722 464.626 639.927 464.23 cv
644.001 463.592 647.12 462.777 649.21 461.809 cv
650.915 461.016 651.966 460.118 652.421 459.061 cv
652.558 458.742 652.638 458.416 652.655 458.082 cv
652.722 456.948 651.919 455.949 650.796 455.764 cv
638.106 453.67 632.39 440.634 632.151 440.079 cv
632.103 439.97 li
631.454 438.653 631.304 437.564 631.655 436.737 cv
632.349 435.104 635.007 434.261 636.767 433.704 cv
637.276 433.543 637.755 433.389 638.153 433.232 cv
639.886 432.547 641.124 431.807 641.94 430.965 cv
642.915 429.96 643.104 428.996 643.093 428.367 cv
643.046 425.899 640.62 424.552 638.45 424.493 cv
637.397 424.467 636.103 424.837 635.147 425.216 cv
634.177 425.601 633.149 425.899 632.103 425.95 cv
631.495 425.92 631.069 425.787 630.794 425.664 cv
630.827 425.068 630.866 424.459 630.905 423.82 cv
630.923 423.549 li
631.331 417.104 631.835 409.086 629.712 404.325 cv
628.257 401.066 626.306 398.263 623.905 395.988 cv
621.894 394.083 619.558 392.54 616.958 391.398 cv
614.315 390.239 611.481 389.522 608.612 389.243 cv
607.511 389.134 606.378 389.048 605.272 389.048 cv
602.86 389.048 600.364 389.323 598.003 389.885 cv
596.423 390.259 594.876 390.774 593.388 391.431 cv
cp
582.712 405.239 mo
582.872 404.884 583.038 404.528 583.212 404.18 cv
584.288 402.024 585.663 400.019 587.339 398.285 cv
588.763 396.815 590.392 395.55 592.165 394.535 cv
593.702 393.655 595.341 392.961 597.032 392.451 cv
598.419 392.031 599.841 391.732 601.278 391.55 cv
602.665 391.376 604.063 391.322 605.46 391.343 cv
606.856 391.362 608.222 391.402 609.606 391.605 cv
611.095 391.819 612.562 392.164 613.987 392.637 cv
615.71 393.208 617.366 393.974 618.907 394.928 cv
620.687 396.035 622.304 397.399 623.692 398.966 cv
625.345 400.828 626.669 402.96 627.681 405.231 cv
629.581 409.492 629.093 417.21 628.704 423.41 cv
628.642 424.394 628.583 425.347 628.532 426.257 cv
628.511 426.647 li
628.772 426.939 li
628.878 427.057 629.866 428.089 632.063 428.175 cv
632.099 428.175 li
632.136 428.175 li
633.095 428.156 634.052 427.942 634.956 427.638 cv
635.786 427.354 636.595 426.921 637.454 426.732 cv
638.362 426.534 639.987 426.963 640.612 427.678 cv
641.218 428.37 640.552 429.286 640.001 429.724 cv
639.202 430.355 638.278 430.79 637.335 431.162 cv
637.015 431.291 636.589 431.426 636.097 431.581 cv
633.946 432.264 630.7 433.294 629.606 435.868 cv
628.991 437.317 629.161 439.03 630.108 440.955 cv
630.497 441.864 636.632 455.683 650.435 457.957 cv
650.38 458.177 li
650.146 458.729 648.657 460.633 639.403 462.063 cv
637.956 462.284 637.603 463.905 637.19 465.792 cv
637.042 466.467 636.892 467.149 636.683 467.855 cv
636.618 468.067 636.608 468.08 636.38 468.08 cv
636.271 468.08 li
635.86 468.08 635.237 467.995 634.515 467.854 cv
633.2 467.598 631.403 467.282 629.106 467.282 cv
627.825 467.282 626.505 467.395 625.181 467.614 cv
622.349 468.085 620.046 469.715 617.606 471.438 cv
616.112 472.495 614.606 473.554 612.97 474.384 cv
611.181 475.293 609.257 475.896 607.255 476.08 cv
606.81 476.122 606.364 476.129 605.917 476.147 cv
603.804 476.232 601.673 476.024 599.659 475.335 cv
597.882 474.729 596.245 473.796 594.688 472.757 cv
594.046 472.329 593.417 471.884 592.788 471.438 cv
590.349 469.715 588.044 468.085 585.214 467.614 cv
583.89 467.395 582.569 467.282 581.286 467.282 cv
578.991 467.282 577.192 467.634 575.88 467.89 cv
575.157 468.031 574.534 468.152 574.124 468.152 cv
573.79 468.152 573.782 468.133 573.712 467.89 cv
573.505 467.186 573.353 466.489 573.204 465.813 cv
572.792 463.924 572.437 462.291 570.991 462.069 cv
561.737 460.641 560.249 458.735 560.013 458.184 cv
559.956 457.959 li
573.761 455.684 579.894 441.867 580.284 440.955 cv
581.235 439.03 581.401 437.321 580.784 435.868 cv
579.692 433.294 576.446 432.264 574.298 431.581 cv
573.804 431.426 573.38 431.291 573.058 431.162 cv
571.786 430.66 567.89 428.831 570.423 427.271 cv
570.968 426.938 571.569 426.72 572.216 426.756 cv
572.901 426.796 573.505 427.137 574.136 427.374 cv
575.382 427.845 576.702 428.182 578.04 428.182 cv
580.44 428.182 581.507 427.067 581.622 426.939 cv
581.882 426.647 li
581.86 426.259 li
581.812 425.348 581.753 424.396 581.688 423.414 cv
581.3 417.214 580.812 409.502 582.712 405.239 cv
cp
.00784314 .00784314 .00784314 rgb
f
639.403 462.063 mo
648.657 460.633 650.146 458.729 650.38 458.177 cv
650.435 457.957 li
636.632 455.683 630.497 441.864 630.108 440.955 cv
629.161 439.03 628.991 437.317 629.606 435.868 cv
630.7 433.294 633.946 432.264 636.097 431.581 cv
636.589 431.426 637.015 431.291 637.335 431.162 cv
638.278 430.79 639.202 430.355 640.001 429.724 cv
640.552 429.286 641.218 428.37 640.612 427.678 cv
639.987 426.963 638.362 426.534 637.454 426.732 cv
636.595 426.921 635.786 427.354 634.956 427.638 cv
634.052 427.942 633.095 428.156 632.136 428.175 cv
632.099 428.175 li
632.063 428.175 li
629.866 428.089 628.878 427.057 628.772 426.939 cv
628.511 426.647 li
628.532 426.257 li
628.583 425.347 628.642 424.394 628.704 423.41 cv
629.093 417.21 629.581 409.492 627.681 405.231 cv
626.669 402.96 625.345 400.828 623.692 398.966 cv
622.304 397.399 620.687 396.035 618.907 394.928 cv
617.366 393.974 615.71 393.208 613.987 392.637 cv
612.562 392.164 611.095 391.819 609.606 391.605 cv
608.222 391.402 606.856 391.362 605.46 391.343 cv
604.063 391.322 602.665 391.376 601.278 391.55 cv
599.841 391.732 598.419 392.031 597.032 392.451 cv
595.341 392.961 593.702 393.655 592.165 394.535 cv
590.392 395.55 588.763 396.815 587.339 398.285 cv
585.663 400.019 584.288 402.024 583.212 404.18 cv
583.038 404.528 582.872 404.884 582.712 405.239 cv
580.812 409.502 581.3 417.214 581.688 423.414 cv
581.753 424.396 581.812 425.348 581.86 426.259 cv
581.882 426.647 li
581.622 426.939 li
581.507 427.067 580.44 428.182 578.04 428.182 cv
576.702 428.182 575.382 427.845 574.136 427.374 cv
573.505 427.137 572.901 426.796 572.216 426.756 cv
571.569 426.72 570.968 426.938 570.423 427.271 cv
567.89 428.831 571.786 430.66 573.058 431.162 cv
573.38 431.291 573.804 431.426 574.298 431.581 cv
576.446 432.264 579.692 433.294 580.784 435.868 cv
581.401 437.321 581.235 439.03 580.284 440.955 cv
579.894 441.867 573.761 455.684 559.956 457.959 cv
560.013 458.184 li
560.249 458.735 561.737 460.641 570.991 462.069 cv
572.437 462.291 572.792 463.924 573.204 465.813 cv
573.353 466.489 573.505 467.186 573.712 467.89 cv
573.782 468.133 573.79 468.152 574.124 468.152 cv
574.534 468.152 575.157 468.031 575.88 467.89 cv
577.192 467.634 578.991 467.282 581.286 467.282 cv
582.569 467.282 583.89 467.395 585.214 467.614 cv
588.044 468.085 590.349 469.715 592.788 471.438 cv
593.417 471.884 594.046 472.329 594.688 472.757 cv
596.245 473.796 597.882 474.729 599.659 475.335 cv
601.673 476.024 603.804 476.232 605.917 476.147 cv
606.364 476.129 606.81 476.122 607.255 476.08 cv
609.257 475.896 611.181 475.293 612.97 474.384 cv
614.606 473.554 616.112 472.495 617.606 471.438 cv
620.046 469.715 622.349 468.085 625.181 467.614 cv
626.505 467.395 627.825 467.282 629.106 467.282 cv
631.403 467.282 633.2 467.598 634.515 467.854 cv
635.237 467.995 635.86 468.08 636.271 468.08 cv
636.38 468.08 li
636.608 468.08 636.618 468.067 636.683 467.855 cv
636.892 467.149 637.042 466.467 637.19 465.792 cv
637.603 463.905 637.956 462.284 639.403 462.063 cv
cp
1 1 1 rgb
f
119.497 706.096 mo
130.268 662.683 li
122.67 649.921 118.296 635.018 118.296 619.086 cv
118.296 571.93 156.522 533.702 203.681 533.702 cv
250.837 533.702 289.064 571.93 289.064 619.086 cv
289.064 666.243 250.837 704.47 203.681 704.47 cv
188.66 704.47 174.553 700.579 162.291 693.77 cv
119.497 706.096 li
164.484 677.812 mo
175.902 685.676 189.731 690.295 204.646 690.295 cv
205.989 690.295 207.322 690.258 208.647 690.184 cv
208.647 690.184 li
232.335 688.866 252.917 675.919 264.781 656.957 cv
265.182 656.316 265.576 655.665 265.957 655.01 cv
269.771 648.456 272.563 641.237 274.117 633.567 cv
274.117 633.567 li
275.045 628.992 275.531 624.257 275.531 619.409 cv
275.531 580.26 243.796 548.523 204.646 548.523 cv
165.496 548.523 133.762 580.26 133.762 619.409 cv
133.762 634.387 138.42 648.271 146.348 659.719 cv
140.119 684.828 li
164.484 677.812 li
level3{
gsave
clp
[122.783 -148.977 148.977 122.783 118.365 717.69 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.783 -148.977 148.977 122.783 118.365 717.69 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
204.646 548.523 mo
165.496 548.523 133.762 580.26 133.762 619.409 cv
133.762 634.387 138.42 648.271 146.348 659.719 cv
140.119 684.828 li
164.484 677.812 li
175.902 685.676 189.731 690.295 204.646 690.295 cv
243.796 690.295 275.531 658.558 275.531 619.409 cv
275.531 580.26 243.796 548.523 204.646 548.523 cv
.858824 .27451 .223529 rgb
f
gsave
204.646 548.523 mo
165.496 548.523 133.762 580.26 133.762 619.409 cv
133.762 634.387 138.42 648.271 146.348 659.719 cv
140.119 684.828 li
164.484 677.812 li
175.902 685.676 189.731 690.295 204.646 690.295 cv
243.796 690.295 275.531 658.558 275.531 619.409 cv
275.531 580.26 243.796 548.523 204.646 548.523 cv
clp
208.647 690.184 mo
159.055 640.591 li
165.495 599.584 li
205.297 594.349 li
230.881 619.933 li
226.662 624.151 li
262.125 659.614 li
264.781 656.957 li
252.917 675.919 232.335 688.866 208.647 690.184 cv
level3{
gsave
clp
[87.1507 85.4225 -113.408 114.716 162.528 598.953 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Ten9o1b5=Y/#5$RV)9g$2Ctaa/>kBWWAZ?.2_D'h/Z^l_XZ%l73%h?n0!@5eYW4>@3A7Zu0=*\mZT9bH
3\[s&0Xa%s\2uCT4#+</0tKJ%]0%g\4>FN41;5n,^HF?f4Yjf:1Vl72_EKcn5;U5B1W;R8`]l<#5W$PI
1s&!?b!@o.5rHkP29\?DbsF>668m.V2UFfLd6fk@6T<F]2q(/ReO2@I6o`de37pYZfL7dQ760'k3SR"`
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~gI=3X7QK3m3SR"`gI=3X7QK3m3SR"`gI=3X7QK3m3SR"`gI=3X7QK3m3SR"`gI=3X7QK3m3SR"`gI=3X
7QK3m3SR"`gI=3X7QK3m3SR"`gI=3X7QK3m3SR"`gI=3X7QK3m3SR"`gI=3X7QK3m3SR"`gI=3X7QK3m
3SR"`gI=3X7QK3m3SR"`gI=3X7QK3m3SR"`gI=3X7QK3m3SR"`gI=3X7QK3m3SR"`gI=3X7QK3m3SR"`
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.770408 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[87.1507 85.4225 -113.408 114.716 162.528 598.953 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~TV8'QU8"BWUSFW\UnsoaVP^5fVP^8hW2Q\pWN)tuX/i;&XK8M)XKAV,Y-+q2YHP.6YctC;Z*L[@ZEgdB
Za7$G['d<L[C3QR\@B&Z\[f8]\[oA`]=Y\f]Y(qk]tM.o^;%Ft^V@P!^qde&_8=(+_o'C1`5KU5`Poj:
`lH-?aN2HEaiV]Jb0.uObKJ)Pbfn;Uc-=PZcHjh_d*U.edF$@hdF$CjdaQ^qe^`4$f%/I)f@SX+f\"j0
g"G'4g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97
~>
<~1G^gC1c.$G1c.$G1c7-J2)R6K2)R6K2)R9M2E!HO2E!HO2E!KQ2`EZS2`EZT3&ilW3&ilW3&ruZ3B9)[
3B9)[3BB2^3]];_3]];`4$,Mc4$,Mc4$,Md4?P_g4?P_g4?P_g4Ztqk4Ztqk4[)%n5!D.o5!D.o5!D1q
5<h@s5<h@t5X7S"5X7S"5X7S"5s[e&5s[e&5sdn)6:+"*6:+%,6UO4.6UO4.6UO4/6psF26psF26psF3
77BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX6
~>
<~.Olnt.Olnu.k<,#.k<,#.k<,#.k</%/1`>'/1`>'/1`>(/M/P+/M/P+/M/P+/M/P,/hSb//hSb//hSb0
0/"t30/"t30/"t30JG170JG170JG170JG180ekC;0ekC;0ekC;1,:U?1,:U?1,:U?1,:U@1G^gC1G^gC
1G^gC1c.$G1c.$G1c.$G1c.$G2)R6K2)R6K2)R6K2E!HO2E!HO2E!HO2E!HO2`EZS2`EZS2`EZS3&ilW
3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
216.047 614.823 mo
215.713 614.823 li
203.925 614.823 li
184.313 614.823 li
184.313 626.165 li
203.327 626.165 li
200.575 634.281 192.999 640.112 184.079 640.112 cv
172.833 640.112 163.717 630.853 163.717 619.429 cv
163.717 608.005 172.833 598.746 184.079 598.746 cv
188.999 598.746 193.503 600.525 197.024 603.478 cv
197.558 603.478 li
205.93 594.973 li
200.157 589.646 192.491 586.397 184.079 586.397 cv
166.121 586.397 151.564 601.188 151.564 619.429 cv
151.564 637.67 166.121 652.459 184.079 652.459 cv
186.426 652.459 188.775 652.205 191.069 651.691 cv
195.726 650.655 200.123 648.561 203.88 645.623 cv
207.613 642.702 210.698 638.973 212.873 634.76 cv
213.983 632.612 214.855 630.345 215.472 628.006 cv
216.243 625.087 216.047 622.152 216.047 619.158 cv
216.047 617.713 216.047 616.269 216.047 614.823 cv
cp
1 1 1 rgb
f
265.957 655.01 mo
230.881 619.933 li
245.681 605.132 li
274.117 633.567 li
272.563 641.237 269.771 648.456 265.957 655.01 cv
level3{
gsave
clp
[33.6712 33.0929 -37.9139 38.4197 235.25 614.04 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33.6712 33.0929 -37.9139 38.4197 235.25 614.04 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
262.125 659.614 mo
226.662 624.151 li
230.881 619.933 li
265.957 655.01 li
265.576 655.665 265.182 656.316 264.781 656.957 cv
262.125 659.614 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 800 ]ct
[40.8 0 0 41.28 226.08 139.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 85 
/H 86 
/M[85 0 0 -86 0 86 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 85 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 85 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 85 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
r0$uA!gJt8rg3YPrgF+^SXl@DT:hjNrLsOmV5:&eVl6QnWX>f/Xfek2YctC=Zi7<7[C*HP\Gj#P]=Y_h
^:q@s_84"+`5KX6a2fneoIp8"qD.n's"s[3q_eF4q`"O7r&O[9r]C$?q`XpBrBL9Hod9_fpaQ"gr@@ar
qCVUtr%In#q(Vk)q(r",!&XY;r0%2HQ'M?8s-WeS#b.BUSt;RITV;=Y#Ge2mVPg>jW;`e(X0&M,Y-5(6
Z*Ue9ZimeE[^WdG\J)Te]Y2%n^V@V$_Sa=1`Pom=a=m0>!&==*qD8..rAFI1!&j^5s#Bp:r&Xg=r&jj>
r]^9FrBU'(!%@Ukq'u=nq^hRqr%@n#qCq_"!&F@+r\XX3rf[2C!gJt8rg3YPrgF+^SXl@DT:hjNrLsOm
V5:&eVl6QnWX>f/Xfeh1YctC=Zi7<7[C*HP\Gj#P]=Y_h^:q@s_84"+`5KX6a2c9CoIp8"qD.n's"s[3
q_eF4q`"O7r&O[9r]C$?q`XmAr]g<GpEoqhpaQ"gr@@arqCVUtr%In#q(Vk)q(r",r\XY<r0%2HQ'M?8
s-WeS#b.BUSt;RITV;=Y#Ge2mVPg>jW;`e(X0&M,Y-5(6Z*Ue9ZimeE[^WdG\J2Zf]Y2%n^V@V$_Sa=1
`Pom<aN;Qs0E<j(1AWg,2#T</2?5Z42ubl83Vtl;48_5<4oISD5Pm_@-NGRi.JYIl/,Lmo/c77!0D[Bu
0`X!)1]B601]W^:P6-u6Q2[-MR/WN[S"-%@StD[KU&C\jUnsobVl-Jlri-=+Xf\b/YHY79Za9Y<"LYYG
\%)FJ't_)j]tV4q^VRb'_o0L4`Q-$?aiV^!0E<j(1AWg,2#T</2?5Z42ubl83Vtl;48_5<4oISD5Pm\G
62;l../57e.fCmp/G^sr0)RC!0_mF'1ANa*2#K3.P6-u6Q2[-MR/WN[S"-%@StD[KU&C\jUnsobVl-Jl
ri-=+Xf\b/YHY79Za9Y<"LYYG\%)FJ(;%2k]tV4q^VRb'_o0L4`Q-$?aiV]JpFlS%qD.n's"s[3q_eF4
q`"O7r&OX8s#^-@q`XmAr]g6E!($H/!%@Ukq'u=nq^hRqr%@n#qCq_"!&F@+r\XO0!&a_=!gJt8rg3YP
rgF+^S=Q7CT:hjNrLsOmV5:&eVl6QnWX>f/Xfeh1YctC=Zi7<7[C*HP\Gj#Q]=Y_h^:q@s_84"+`5KX6
a2c9Cao9HX0E<j(1AWg,2#T</2?5Z42ubl83Vtl;48_5<4oISD5PdYF62N#0./57e.fCmp/G^sr0)RC!
0_mF'1ANa*2#K312?&d@Pa%I4QiEHPRL#CQSXuFFTV/"WU'IKjV5C/gW2T]q$EL;2Y-+t4Yd(O@rj2g9
[C3QSrj``T]=bhk^;%G!_8=+.`5T^9a2lBErlP5aq(Me'qD.n's"s[3q_eF4q`"O7r&OX8s#^-@q`XmA
r]g6Er^$H0!%@Ukq'u=nq^hRqr%@n#qCq_"!&F@+r\XO0#;n@sPEV5qQ2[-MR/WN[S"-%@StD[KU&C\j
UnsobVl-Jlri-=+XKAY.YHY79ZEsP;"LYYG\%)FJ'YCui]tV4q^VRb'_o0L4`Q-$?aiXP)!R&^`0E<j(
1AWg,2#T</2?5Z42ubl83Vtl;48_5<4oISD5PdYD62`/2./57e.fCmp/G^sr0)RC!0_mF'1ANa*2#K08
2)R9MPE_;srg3YPrgF._S=Q7CT:hjNU&LbkUnsobVl-Jlri-=+XKAY.YHY79ZEsP;"LYYG\%)FJ'YCui
]tV4q^VRb'_o0L4`Q-$?aiXP)!mAg4q_/")qD.n's"s[3q_eF4q`"O7r&OX8s#^-@q`XmAr]g6Er'C<0
!%@Ukq'u=nq^hRqr%@n#qCq_"!&F@+r\XO0s#'d6!gJq7rg3YPrgF._S=Q7CT:hjNU&LbkUnsobVl-Jl
ri-=+X0&P-YHY79ZEsP;"LYYG\%)FJ'YCui]tV4q^VRb'_o0L4`Q-$?aiXP)"3\p5cMTBr1&Ea&1]K<1
2>]932Z#H53;bf63r_;>4Sq;?55meC5l3hK-RU>;.JYIl/,Lmo/c77!0D[Bu0`X!)1]B6/2#fH32?B&-
rg3YPrgF._S=Q7CT:hjNU&LbkUnsobVl-Jlri-=+X0&P-YHY79ZEsP;"LYYG\%)FJ'YCui]tV4q^VRb'
_o0L4`Q-$?aiXP)"O#$6cHcABs"XC+qD8..rAFI1!&j^5s#Bp:q`=a=r&jj>rBC3FqEXpD!^\7_paQ"g
r@@arqCVUtr%In#q(Vk)q(r",r&"F2r&+P?rg3YPrgF._S=Q7CT:hjNU&LbkUnsobVl-Jlri-=+X0&P-
YHY79ZEsP;"LYYG\%)FJ'YCui]tV4q^VRb'_o0L4`Q-$?aiXP)"j>-7cHaf90`Nm)1AWg,2#T</2?5Z4
2ubl83Vtl;48_5<4oISD5PdYB5lsA?./57e.fCmp/G^sr0)RC!0_mF'1ANa*2#K312>f?42u]0DR/WN\
S"-%@StD[KTqVI[#Ge2mVP^8iW;`e(X/iA*Y-5(6Z*CY7ZimeE[^WdG\J2Zf]Y2%n^V@V$_Sa=1`Pom<
aN;R'apQ>9c-FV]d4d7/1&Ea&1]K<12>]932Z#H53;bf63r_;>4Sq;?55meC5l3hK6:4-8.JYIl/,Lmo
/c77!0D[Bu0`X!)1]B6/2#fH22ZG`9QiEHPRL,IRSXuFFTV/!Prh9XnV5:&dVl6QnWX>f-Xfeh1YctC;
Zi7<7[C*HP\Gj#Q]=Y_h^:q@s_84"+`5KX6a2c9Cao9EibKS5VcHstd0JP<Z1AWg,2#T</2?5Z42ubl8
3Vtl;48_5<4oISD5PdYB5la7N6hr2,.fCmo/Gh$s0)RC!0_d@&1AWg+2#K312>fB32Zf>5R/WN\S"-%@
StD[KTqVI[#Ge2mVP^8iW;`e(X/iA*Y-5(6Z*CY7ZimeE[^WdG\HBIU]Y4<Y%DT`q_Sa=1`Pom<aN;R'
ap#u4c-FV]rmCa#q_J"(s"s[3q_eF4q`"O7r&OX8s#^-@q`XmAr]g6Eq`t3KrBpE1q'u=nqCMLqr%@n#
qCq\!!&FC,r\XL/!&a[4rAXbDrgF._S=Q7CT:_dMU&LbkUnsobVPgAkri-=+X0&P-YHY79Z*XG:"LYYG
\%)FJ"1u1X^&G_T^VRb'_o0L4`Q-$?aiXP)"j>-7cHaf9d/hZMq_J"(s"s[3qDS40s#Bp:s#U*>s#^-@
qE=gAr]g6Eq`t3KrBgQQq^M=jr@@^qq^q^ur%In#pb;b(qD7n'!&a[4rAOa9R/WN\S"-%@StDXJTqVI[
#Ge2mVP^8iW;`e(X/iA*Y-5(6Z*CY7ZimeE[^WdG\HBIU]Y4<Y%DT`q_Sa=1`Pom<aN;R'ap#u4c-FV]
rm:bpe,(os1]K<12>T6.2ubl83WD/=3r_;>4Sh5?55meC5l3hI6N':O7/SM0.fCmo/Gh$s0)RC!0_d@&
1AWg%1]TE22Z5T72u]6PS"-%@StDXJTqVI[#Ge2mVP^8iW;`e(X/iA*Y-5(6Z*CY7ZimeE[^N^F\HBIU
]Y4<Y%DT`q_Sa=1`Pom<aN;R'ap#u4c-FV]rm:eqe(":NqD8..rAFF0q`"O7r&Od<rAss?r&jg=r]^<G
qEXpD!(-WOr^?]6q'u=nqCMLqr%@n#qCq\!!&FC,pbVt.r&4L4r\k4RR[]h<St;RHTV8(YU'IKjV5C,f
W2T]q$EL50Y-+t4Yd(I>rj2g9[C3NRrj`-C]=biV^')3e_8=+h`!+-"a2lBErlPDfbg"GYd/MDpdaQ^q
rA+4*s"s[3qDS40s#Bp:s#U*>s#^-@qE=gAr]g6Eq`t3KrBpNOr[IXmr@@^qq^q^ur%In#pb;b(qD7n'
!&a[4rAX[6$C[HSSXuFFT:hmOrh9XnV5:&dVl6QnWX>f-Xfeh1YctC;Zi7<7[C*HO\Gj#@]=Y_hrk8NM
_84"+rknuZ`lH0Bao9EdbKS5VcHuR<"ObcKeCFORqD8..rAFF0q`"O7r&Od<rAss?r&jg=r]^<GqEXpD
!(-WOr'^Q6q'u=nqCMLqr%@n#qCq\!!&FC,pbVt.r&4L4r&4qOS=Q7CT:_dMU&LbkUnjiaVPgAkri-=+
X0&P-YHY79Z*XG:"LYYG[^c=I"1u1X^&G_K^VRb'_u@RX`Q#s>aiXP)"j>-7cHaf9d0J+KeC<%"1,A\^
s"s[3qDS40s#Bp:s#U*>s#^-@qE=gAr]g6Eq`t3KrBpHM!%I^nr@@^qq^q^ur%In#pb;b(qD7n'!&a[4
rAXX5#rnHGSt;RHTV8(YU'IKiV5C,fW2T]q$EL50Y-+t4Yd(I>rj2g9[C3NRrji'@s1J?F"M_dh_ScAk
"i\L%aN;R'ap#u4c-FV]rm:u!e'umtf%)VQ1]K<12>T6.2ubl83WD/=3r_;>4Sh5?55meC5l3hI6N':J
7/8>2/,Cgo/c77!0D[Bt0`X!*1\`d,2>fB22uGT@3&mJ#StDXJTqVI[#Ge/lVP^8iW;`e(X/iA*Y-5(6
Z*CY7ZimeE[^N^F\c9;A]`,VJ^VRb'_u@RX`Q#s>aiXP)"j>-7cHaf9d0J+KeC<%"f%9aSs"s[3qDS40
s#Bp:s#U*>s#^-@qE=gAr]g6Eq`t3KrBpEL!(H`6r@@^qq^q^ur%In#pb;b(qD7n'!&a[4rAXX5r\t+R
StDXJTqVI[#Ge/lVP^8iW;`e(X/iA*Y-5(6Z*CY7ZimeE[^N^F\c9;A]`,VJ^VRb'_u@RX`Q#s>aiXP)
"j>-7cHaf9d0S1LeC<%"f%8ON1]K<12>T6.2ubl83WD/=3r_;>4Sh5?55meC5l3hI6N':J7/o^Q.fCmo
/Gh$s0)I=!0_d@&1AWg%1]TE22Z5T42uP]>StDXJTqVI[#Ge/lVP^8iW;`e(X/iA*Y-5(6Z*CY7ZimeE
[^N^F\c9;A]`,VJ^VRb'_u@RX`Q#s>aiXP)"j>-7cHaf9d0\7MeC<%"f%8O+r%n@0rAFF0q`"O7r&Od<
rAss?r&jg=r]^<GqEXpD!(-WOqF(<Or$qXqqCMLqr%@k"q_7e"!&FC,pbVt.r&4L4r&=O5"J;<ZTqVI[
'r7Y%VP^8iW2ZesX/iA*Y-5(6Z*CY7ZimeE[^N^F\c9;A]`,VJ^VRb'_u@RX`Q#s>aiXP)"j>-7cHaf9
d0e=NeC<%"f%8O+f_mW+2#T<.2Z#H53;bf:3rM,>48_5;4oRYE5PdYB5la7M6i'4L7K"_7/,Cgo/c76u
0DdHu0`X!*1\`d,2>fB22uGW33!5eGTqVI['r7Y%VP^8iW2ZesX/iA*Y-5(6Z*CY7ZimeE[^N^F\c9;A
]`,VJ^VRb'_Z%IW`Q#s>aiXP)"j>-7cHaf9d0S1LeC<%"f%8OQf`!],2#T<.2Z#H53;bf:3rM,>48_5;
4oRYE5PdYB5la7M6i'4K7K"_8/,Cgo/c76u0DdHu0`X!*1\`d,2>fB22uGW23!,bHU&Lc$UnjiaVPgAk
WN)u!X0&P-YHY79Z*XG:"LYYG[^c=Is1A<Drk8NM_84"*rknuZ`lH0Bao9EdbKS5VcHuR<#h%2OeCE.$
f@U#S"PGRe1c5.gqDS40s#Bp:s#U*>s#^-@qE=gAr]g6Eq`t3KrBpELqaLK6r@@arq^q^uq_.h#pb;b(
qD7n'!&a[4rAXX5qD\O:TqVI['r7Y%VP^8iW2ZesX/iA*Y-5(6Z*CY7ZimeE[^N^F\c9;A]`,VJ^VRb'
_Z%IW`Q#s>aiXP)&^/DCcHae`dF$CkeC<%"f%8OQfEBm\1Ggre2>T6.2ubl83WD/=3r_;>4Sh5?55meC
5l3hI6N':J7/KCS7Ofnd/,Lmp/c76u0DdHu0`X!*1\`d,2>fB22uGW23!)*#U&Lc$UnjiaVPgAkWN)u!
X0&P-YHP18Z*XG:"LYYG[^c=Is1A<Drk8NM_84"*rknuZ`lH0Bao9EpbKS5VcHsqcdF-LneCE.$f@U#S
"PMJ^1c5.gqDS40s#Bp:s#U*>s#^-@qE=gAr]g6Eq`t3KrBpELqaCQU7On?eq^hUrr%@k"q_7e"!&FC,
pbVt.r&4L4r&=I3r]0tP'r7Y%VP^8iW2ZesX/iA*Y-5%5Z*CY7ZimeE[^N^F\c9;A]`,VJ^VRb'_Z%IW
`Q#s>aiXP)&^/DCcHae`dF$CkeC<%"f%8OQfEBm\g=nI_2>T6.2ubl83WD/=3r_;>4Sh5?55meC5l3hI
6N':J7/KFP7f=k7/Gh$s0)I=!0_d@&1AWg%1]TE22Z5T42u5N43>\EaUnjiaVPgAkWN)u!X0&P-YHP18
Z*XG:"LYYG[^c=Is1A<Drk8NM_84"*rknuZ`lH0Aao9EpbKS5VcHsqcdF-LneCE.$f@U#S"PMJ^gY;Za
qDS40s#Bp:q`=a=r&jm?s#p?Fr]g6Eq`t3KrBpELqaLHQr[[jsq^q^uq_.h#pb;b(qD7n'!&a[4pc&%/
rAbZSU84T]VP^8iW2ZesX/iA*Y-5%5Z*CY7ZimeE[^N^F\c9;A]`,VJ^VRb'_Z%IW`Q#s>aN=G(&^/DC
cHae`dF$CkeC<%!f%8OQfE0aZgA]k+2>T6.2ubl83Vtl;48_5=4o[\E55meC5l3hI6N':J7/KFN7fP"9
/Gh$s0)I=!0_d@&1AWg%1]TE22Y]6-3;kiR3B<n2V5C,fW2Q\qWiN2&Y-+t3Yd(I>rj2g9[C3NRrji'@
s1J?F%DT`q_SX4/`5Ta:aN2L&aq;h@c-FV]d*^7he'umte^i@(rn%;*g"QDZs#'X2q`"O7r&OX8s#^-@
r&t'Cr]^<GqEXpD!(-WOqF(3LqaLQ9q^hUrr%@k"q_7e"!&FC,pbVt.r&4=/qDeF6r]([gV5C,fW2Q\q
WiN2&Y-+t3Yd(I>rNl[7[^N^F\c9;A]`,VS^VRb'_Sa=1`Q#s>aN=G(&^/DCcHae`dF$CkeC<%!f%8OQ
fE0aZgAK\*2>T6.2ubl83Vtl;48_5=4o[\E55meC5l3hI6N':J7/KFL7f+b6/c76u0DdHu0`X!*1\`d,
2>fB-2u5N43W1rOV5C,fW2Q\qWiN2&Y-+t3Yd(I>rNl[7[^N^F\J2Zf]Y(ql^;%M#_SX4/`5Ta:aN2L&
aq;h@c-=P\d*^7he'umte^i@(rn%;*g"Q>XqDS40s#Bp:q`=a=r&jm?s#p?Fr]g6Eq`t3KrBpELqaL<M
r%.^sr%@k"q_7e"!&FC,pbVt.r&4=/qDeF6r&GCeVPgAkWN)u!X0&P-YHP18Z*XD9"1>SG\Gj#Q]=Y_g
]tV4q_84"*_o0L4`lH0Aao9EpbKS5UcHsqcdF-LneCE+#f@U#S!nl8\qV1m*q`"O7r&OX8s#^-@r&t'C
r]^<GqEXmCrBpELqaL9Lr@Idsr@[t#q_7e"!&FC,pbVt.q_n7/qDeF6q`,7cVl6PnWiE,#Xfeh1YHY::
Zi.65[C3NRrj``T]=bei^:q@u_8=(,`5KX7a2l?DrlPhrbg"DXd*U1fdaQ^qe^`7&fDaD(g"G*Tg\`u,
2ubl83Vtl;48_5=4o[\E55meC5l*eF6i'4I7JK@O/G^ss0)I=!0_d@&1AWg%1]TE12Yf<.3;kl63=r*e
W2ZesX/iA*Y-5%5Z*CY6Zid_E[^c=I'Y:oh]Y2%n^VRb'_Sa=1`Q#s>aN=G(&^/DCc-F\_dF$CkeC<%!
f%8OQfE0aZgA'G$2Z#H53;bf63r_;>4T%AB4oRYE5PdYA62a1I7/B@H7fP%9/c@=!0DdHu0`X!*1\`d,
2>]<-2u5N43VbZGW2Q\qWiN2&Y-+t3Yd(I>rNl[7[^N^F\J2We]Y(ql^;%M#_SX4/`5Ta:aN2L&aq;h@
c-=P\d*^7he'umte^i@(rn%;*g"Q2Tr\jX4s#Bp:q`=a=r&jm?s#p?Fr]g6EqEb'IqF(0Kp-o$5qCVXu
q_.h#pb;b(qD7n'!&aX3q)A.0rAjX5%]HA,WiN2&Y-+t3Yd(I>rNl[7[^N^F\J2We]Y(ql^;%M#_SX4/
`5Ta:aN2L&aq;h@c-=P\d*^7he'lgse^i@(rn%;*g"Q/Ss#0a5s#Bp:q`=a=r&jm?s#p?Fr]g6EqEb'I
qF(0Kog\d0r@[t#q_7e"!&FC,pbVt.q_n7/qDeF6pGi\^WiE,#Xfeh1YHY::Zi.65[C3NRrj``S]=bei
^:q@u_8=(,`5KX7a2l?DrlPhrbg"DXd*U1fdaQ[pe^`7&fDaD(g"G*PgAj//2ubl83Vtl;48_5=4o[\E
55meC5l*eF6i'4I7J'(H/c@=!0DdHu0`X!*1\`d,2>]<-2u5N43VGHAWiE,#Xfeh1YHY::Zi.65[C3NR
rj``S]=bei^:q@u_8=(,`5KX7a2l?DrlPhrbg"DXd*U1fdaQ[pe^`7&fDaD(g"G*Og\Wr03;bf63r_;>
4T%AB4oRYE5PdYA62a1I7/B@D7f4k:0)I=!0_d@&1AWg%1]TE12Yf<.3;kl13=DjfX0&P-YHP18Z*XD9
"1>SG\Gj#Q]">Vf]tV4q^qmn)_o0L4`lH0Aao9EpbKS5UcHsqcdF-LmeCE+#f@U#S!nl8\o@s1%s#Bp:
q`=a=r&jm?s#p?Fr]g6EqEb'IqF(0Knj`R0r@[t#q_7e"!&FC,pbVt.q_n7/qDeF6oJm8ZX0&P-YHP18
Z*XD9"1>SG\Gj#Q]">Vf]tV4q^qmn)_o0L4`lH0Aao9EpbKS5UcHsqcdF-LmeCE+#f@U#S!nl8\o%X+%
s#Bp:q`=a=r&jm?s#p?Fr]g6EqEb'IqF(0KnOEL0r@[t#q_7e"!&FC,pb`".r&4@0qDeF6o/R,XXfeh1
YHY::Zi.65[C3NRrj``S]=bei^:q@t_8=(,`5KX7a2l?DrlPhrbg"DXd*U1fdaQ[pe^`7&fDaD(g"G*L
g\s/33;bf63r_;>4T%AB4oRYE5PdYA62a1I7/B@A7fP(=0)I=!0_d@&1AWg%2#fH22Yf<.3;kl.3=)ah
Y-5%5Z*CY6Zid_E[^c=I'Y:oh]Y2%n^VI\&_Sa=1`Q#s>aN=G(&^/DCc-F\_dF$Cke'upuf%8OQfE0aZ
g@3ks2ubl83Vtl:48h;>4o[\E55meC5l*eF6i'4I7IN\G/c@=!0D[Bu0`X!*1\`g,2>fB.2u5N43Uo*7
Xfek2Yd(I>rNl[7[^N^F\J2We]Y(ql^;%J"_SX4/`5Ta:aN2L&aq;h@c-=P\d*^7he'lgse^i@(rn%;*
g"PoL!]N%tr&OX8r]C'@qE=gArBL0E!($KJrBpELqF0gAr@[t#qCq_"!&FC,pb`".r&4@0qDdk&#<Arj
YHY::Zi.65[C3NRrj``S]=bei^:q@s_8=(,`5KX6a2l?DrlPhrbg"DXd*U1fdaQ[pe^`7&fDaD(g"G*I
gAs5mr&OX8r]C'@qE=gArBL0E!($KJr'U?LqF0d@r\"($qCq_"!&FC,pb`".r&4@0qDdk&#<=fJYHY::
Zi.65[C3NRrj``S]=bei^:q@s_8=(,`5KX6a2l?DrlPhrbg"DXd*U1fdaQ[pe^`7&fDaD(g"G*HgAj52
3Vtl:48h;<4oRYD5Pm\G62NtG6i0:J7I3MD0)I<u0_mF'1AWg%2#fH22Yf<.3:/a*3<ZOiZ*CY6Zid_E
[^c:H'>(oi]tV4q^VRe(_o0L4`Q-'@ao9EpbKS5UcHsqcdF-LmeCE+#f@U#S!nl8\m+_Fuq`=^<rB0p>
r]^9Fq`k-Iqa(-IqaC9LlUCk,q_.e"q(Vk)qD7n's#'^4q)A.0m5b,*"L,/9Za9Y<"1>SG\G`rO]=bei
^:q@s_8=(,`5KX6a2l?DrlPhrbg"DXd*U1fdaQ[pe^`7&fDaD(g"G*Fg\j/03rV5>4Sh5?55d_C5QF+I
62X+I7/B@;7f+k80_mF'1AWg%2#fH22Yf<.3:/a(3WHAaZi7<6[C3NRrOETR]Y(ql^;%G!_SX4/`5T^9
aN2L%aq2eAc-F\_dF$Cke'upuf%8OQfE0aZg?RGl3Vtl:48h;<4oRYD5Pm\G62NtG6i0:J7Hm;>0D[Bu
0`X!*1\`g,2>fB.2u5N$3Vtf<Z*Ue9Zid_E[^c:H'>(oi]tV4q^VRe(_o0L4`Q-'@ao0?nbg"DXd*U1f
daQ[pe^`7&fDaD(g"G*Dg]';23rV5>4Sh5?55d_C5QF+I62X+I7/B@97f>":0_mF'1AWg%2#fH22Yf<.
3:/a&3WHGbZid_E[^c:H'>(oi]tV4q^VRe(_o0L4`Q-'@ao0?nbg"DXd*U1fdaQ[pe^`7&fDaD(g"G*C
gAj823rV5>4Sh5?55d_C5QF+I62X+I7/B@87fG(;0_mF'1AWg%2#fH22Yf<.3:/a%3<6DbZid_E[^c:H
'>(oi]tV4q^VRe(_o0L4`Q-'@ao0?nbg"DXd*U1fdaQ[pe^`7&fDaD(g"G*Bg\X&248h;<4oRYD5Pm\G
62NtG6i0:J7HR)>0D[Bu0`X!*1\`g,2>fB.2u5N$3VYW6ZimeF[^`jH\J)Tf]Y2%n^V@V%_Sa=1`Pom=
aN=D'&BrDDcHsqcdF-LmeCE+#f@U#S!nl8\k1fepr]C'@qE=gArBL0E!($KJr'U?LqF0L8!&+1&q(Vk)
q(qh's#'^4q)A.0m5ao$#.1bF[^N]Urj`]S]Y(ql^;%G!_SX4/`5T^9aN2L%aq2eAc-F\_dF$Cke'upu
f%8OQfE0aZg?%)f3rV5>4Sh5?55d_C5QF+I62X+I7/B@57f"h70`X!)1\im-2>fB.2u5N$3VGH:['d?N
\@DOK'>(oi]tV4q^VRe(_o0L4`Q-'@ao0?nbg"DXd*U1fdaQ[pe^`7&fDaD(g"G*?g\s8548_5<4oRYD
5Pm\G62NtG6i0:J7H6l70_mF'1ANa%2#fH22Yf<.3:/a!3<Zau[^`jH\J)Tf]Y2%n^V@V%_Sa=1`Pom=
aN=D'&BrDDcHsqcdF-LmeCE+#f@U#S!nl8\j4jSpr]C$?q`XpBrBL0E!($KJr'U?LqF0C5r%Rq$!&F@+
q)&+/r&4@0qDdk&oJur[s1&'='YD#j]tV4q^VRe(_o0L4`Q-'@aiXP)&BrDDcHjkbdF-LmeCE+#f@U#S
!nl8\inFGor]C$?q`XpBrBL0E!($KJr'U?LqF0@4r@n%%!&F@+q)&+/r&4@0qDdk&o/Ql\\@DOK'YD#j
]tV4q^VRe(_o0L4`Q-'@aiXP)&BrDDcHjkbdF-LmeCE+#f@U#S!nl8\iS4>nr&jj>r]^9Fq`k-Iqa(-I
qaC9Li(!]"q(Vk)q(qh's#'^4q)A.0m5a_ts1&'='YD#j]tV4q^VRe(_o0L4`Q-'@aiXP)&BrDDcHjkb
dF-LmeCE+#f%9oR!nl8\i7n8nr&jj>r]^9Fq`k-Iqa(-IqaC9Lha[W"q(Vk)q(qh's#'^4q)A.0m5a\s
!4`$='YD#j]tV4q^VRe(_o0L4`Q-'@aiXP)&BrDDcHjkbdF-LmeCE+#f%9oR!nl8\hqJ,mr&jj>r]^9F
q`t!Dr'UBM!(?ZPhF7K!q(Vk)q(qh's#'^4q)A.0h)PHqrj``T]Y(ql^;%G!_SX4/`5T^9aN2KFrlPer
c-=P[d*^7he'lgse^i='rn%;*g"P<;r&jj>r]^9Fq`t!Dr'UBM!(?ZPh+%2p!&F@+q)&+/r&4@0qDd:k
(caUe\\#Me]tV4q^VRe(_o0L4`Q-'@aiXP)&BrDDcHaeadF-LmeCE+#f%9oR!nl8\h:qljq`XpBrBL0E
qEb$Hr'UNQqF01/qCqt*q(qh's#'^4q)A.0h)YHp'tLrh]Y2%n^V@V%_Sa=1`Pom=aN;R'aq2eAc-FV]
dF$Cke'upuf%/IPf`0Y)g>1N_4Sq;@55d_C5l*eE6i9=P7/B@,7f+n?1ANa%2#fH22Yf<.38HUn3>B*<
]Y2%n^V@V%_Sa=1`Pom=aN;R'aq2eAc-FV]dF$Cke'upuf%/IPf`0Y)g>(H_4Sq;@55d_C5l*eE6i9=P
7/B@+7f4t@1ANa%2#fH22Yf<.38HUm3>9$;]tV4q^VRe(_o0L4`Q-'@aiXP)&BrDDcHaeadF-LmeCE+#
f%9oRs4RG+gY2]jq`XpBrBL0EqEb$Hr'UNQqF0(,r@n:-q(qh's#'^4q)A.0h)Y?m'"kol^;%G!_SX4/
`5T^9aN2KFrlPerc-=PZd*^7he'lgre^i='rn.8(s4Z2]q`XpBrBL0EqEb$Hr'UNQqF0%+r\4C.q(qh'
s#'^4q)A.0h)Y<l&\Yom^V@V%_Sa=1`Pom=aN;R'aq2eAc-FV]dF$Cke'umtf%/IPf`0Y)g=b6Y4oRYD
5Pm_B62X+J6i]XO7Ft!10ekHZ1\im-2>fB.2u5Mi3VbZH^:q@s_8=(,`5KX6a2l?Dao9Eobg"DXcHstd
daQ[peCE.$fDaG&g&KdYg\j;755d_C5l*eE6i9=P7/B@'7KG5!q(qh's#'^4q)A.0h)Y6j&&,fn_8=(,
`5KX6a2l?Dao9Eobg"DXcHstddaQ[peCE.$fDaG&g&KdXg\sA855d_C5l*eE6i9=P7/B@&7K>4>1\im-
2>fB.2u5Mi3VPND^V@V$_Sa=1`Pom=aN;R'ap$#6c-FV]rm:u"e'umtf%/IPf`0Y)g=G$Y4oRYD5Pm_B
62X+J6i]XO7FXg&1\im-2>fB.2u5Mi3VGHB^VRb'_o0L4`Q-'@aiXP)"jG69cHaf9d0J.LeC<%"f%9lQ
!nl;]e_:'er]^9Fq`t!Dr'UBM!(?ZPdmj0iq)&+/r&4@0qDd:kof3Gs_8=+.`5T^9aN2KFrlPDfc-=PZ
d/MDte'lgre^i='rR_2)g=k'2r]^9Fq`t!Dr'UBM!(?ZPdRO*iq)&+/r&4@0qDd:koJm;q_Sa=1`Pom=
aN;R'ap#u5c-FV]rm:u"e'umtf%/IOfE0a[g=+gV55d_C5l*eE6i9=P7/B@"7f5(<2#fH22Yf<.38HUd
3=<X@`5KX6a2c9Cao9EdbK\;WcHuR<#Lh/OeCE.$fDX>'g"P0.gAjG95Pm_B62X+J6i]XO7F4O&1\im-
2>fB.2u5Mi3V#0:_o0L4`Q-$?aiXP)"j>08cHaf9d0J.LeC<%"f%9lQ!nl;]dG+Uaq`t!Dr'UBM!(?ZP
cURmiq)&+/r&4@0qDd:knMpln`5T^9a2lBErlPDfc-=PZd/MDte'lgre^i='rR_2)g=jp.r]g9FqEb$H
qaC9Lq*rq)s"jI-s#'^4pc&(0brH%i`5T^9a2lBErlPDfc-=PZd/MDte'lgre^i='rR_2)g=jm-s$-?F
qa(-IqaC9Lq*rn(!&OF-s#'^4pc&(0brH%i3Q8tXa2lBErlPDfc-=PZd/MDte'lgre^i='rR_2)g=jj,
!'g<Fqa(-IqF(3Lq*rk'q)&+/r&4=/q`)h\r](/$a2c9Cao9EdbKS5VcHuR<#Lh/OeCE.$fDX>'g"P0)
g\O2462X+H7/KFK7ajj'2#fH22Y]6.36aJ^3<[CCaN;R'ap#u4c-FV]rm:u"e'umtf%/IOfE0a[g<A=K
5l3kF6i'4J7JTF$7f,%B2>fB-2u>SZ3W(l>a2lBErlPDfbg"GYd/MDte'lgre^i='rR_2)g=ja)r':-F
r'U<KqaL<Md74$js#'^4pc&(0brPY]J,~>

%%EndBinary
grestore
np
245.672 633.563 mo
236.145 633.563 li
236.145 605.108 li
245.672 605.108 li
245.672 633.563 li
cp
1 1 1 rgb
f
226.682 624.097 mo
226.682 614.57 li
255.137 614.57 li
255.137 624.097 li
226.682 624.097 li
cp
f
grestore
404.437 533.703 mo
357.281 533.703 319.054 571.931 319.054 619.087 cv
319.054 635.019 323.429 649.922 331.025 662.685 cv
320.254 706.095 li
363.048 693.77 li
375.312 700.58 389.418 704.471 404.437 704.471 cv
451.595 704.471 489.823 666.243 489.823 619.087 cv
489.823 571.931 451.595 533.703 404.437 533.703 cv
cp
level3{
gsave
clp
[122.784 -148.978 148.978 122.784 319.123 717.689 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.784 -148.978 148.978 122.784 319.123 717.689 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
405.403 548.522 mo
366.254 548.522 334.521 580.259 334.521 619.408 cv
334.521 634.388 339.178 648.272 347.107 659.718 cv
340.877 684.829 li
365.241 677.813 li
376.661 685.679 390.491 690.294 405.403 690.294 cv
444.556 690.294 476.29 658.557 476.29 619.408 cv
476.29 580.259 444.556 548.522 405.403 548.522 cv
cp
0 .482353 .709804 rgb
f
375.197 577.149 mo
380.582 577.149 384.959 581.525 384.959 586.921 cv
384.959 592.309 380.582 596.685 375.197 596.685 cv
369.798 596.685 365.436 592.309 365.436 586.921 cv
365.436 581.525 369.798 577.149 375.197 577.149 cv
366.772 604.09 mo
383.622 604.09 li
383.622 658.285 li
366.772 658.285 li
366.772 604.09 li
cp
1 1 1 rgb
f
394.186 604.09 mo
410.343 604.09 li
410.343 611.5 li
410.573 611.5 li
412.821 607.237 418.317 602.747 426.511 602.747 cv
443.567 602.747 446.716 613.97 446.716 628.563 cv
446.716 658.285 li
429.878 658.285 li
429.878 631.93 li
429.878 625.642 429.771 617.558 421.126 617.558 cv
412.36 617.558 411.022 624.409 411.022 631.478 cv
411.022 658.285 li
394.186 658.285 li
394.186 604.09 li
cp
f
203.68 347.513 mo
156.522 347.513 118.296 385.74 118.296 432.896 cv
118.296 448.827 122.67 463.729 130.268 476.493 cv
119.498 519.903 li
162.291 507.579 li
174.552 514.388 188.66 518.28 203.68 518.28 cv
250.838 518.28 289.064 480.054 289.064 432.896 cv
289.064 385.74 250.838 347.513 203.68 347.513 cv
cp
level3{
gsave
clp
[122.783 -148.977 148.977 122.783 118.365 531.498 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.783 -148.977 148.977 122.783 118.365 531.498 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
204.647 362.332 mo
165.497 362.332 133.762 394.069 133.762 433.218 cv
133.762 448.196 138.42 462.083 146.35 473.528 cv
140.119 498.638 li
164.484 491.62 li
175.902 499.485 189.733 504.103 204.647 504.103 cv
243.796 504.103 275.533 472.366 275.533 433.218 cv
275.533 394.069 243.796 362.332 204.647 362.332 cv
cp
.113725 .631373 .94902 rgb
f
188.402 470.659 mo
221.706 470.659 239.916 443.069 239.916 419.146 cv
239.916 418.362 239.902 417.581 239.867 416.806 cv
243.401 414.249 246.474 411.058 248.896 407.429 cv
245.652 408.87 242.162 409.841 238.5 410.28 cv
242.238 408.036 245.108 404.491 246.461 400.263 cv
242.963 402.339 239.088 403.845 234.963 404.659 cv
231.66 401.14 226.956 398.939 221.748 398.939 cv
211.75 398.939 203.64 407.046 203.64 417.042 cv
203.64 418.464 203.8 419.845 204.11 421.169 cv
189.062 420.415 175.719 413.21 166.789 402.253 cv
165.235 404.929 164.337 408.036 164.337 411.354 cv
164.337 417.636 167.534 423.181 172.396 426.425 cv
169.424 426.333 166.634 425.519 164.194 424.161 cv
164.192 424.392 li
164.192 433.161 170.433 440.483 178.718 442.142 cv
177.196 442.556 175.594 442.778 173.943 442.778 cv
172.779 442.778 171.643 442.663 170.54 442.45 cv
172.845 449.644 179.529 454.88 187.453 455.024 cv
181.257 459.884 173.452 462.776 164.966 462.776 cv
163.506 462.776 162.064 462.694 160.647 462.526 cv
168.661 467.663 178.175 470.659 188.402 470.659 cv
1 1 1 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 16.0.0%%For: (Admin) ()%%Title: (379.eps)%%CreationDate: 3/28/17 2:58 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6HZRu`OY?P;n/_@tM&>\EU/=0=:nAUbU:X!CI1GY4(l``f@UhdATir\Dq9W$(a0VE;k-M)7%lPh6A2a\.*`5M%:lh]*r%bVJ%br;up:KMJ\YC;mFs76bb=)D1%J(f_gAn$0iIIk^uT)Z=q\9(dc%nt`$G\_@3Rh4NWqOmGoJVV*.*L[b84M3lTFLeomrSco8D"7&U%r;,FLk2RO1oA<<H-@\5X"b(MRq7hiGMsF^tZ]!;=^K9;ds5`#VT3j.0YAZ$hD^YOW7U#\D*rYCpGQo50T91,Mr94hBY8=[Wcnf>P%DZ8e=5L.F'!KjO's5V/=0BXEqDbb5sYHRrsGAua;:S-<h^%cQhFD0qM'*HjqnB8r4in`jsMd(Yh,i8bihYqBo/c7hsmlqrR,<b,H%2288;0)h4%&j`^&#61$.>Q"kXDC2RroU6kN35elTr-MdHXFoCgEkg;SrjUNOS@tO1QQIhTD\od*_&Thl:>R'P=Jk20b7h)a][T[3%*I(n*"&%HR5A=EJO5QJYhH>:SYP-rtkDN^I0_s>>l.a/d0C&2lp@\7]_!6&bNW25A9cNk/5CU1Gh#-j1r"c0W,:W2hr;$3ViW=k*%)E>GjV,],P:&j;oIQG1<AT8*ZH@>;i(PQ27^\Z-ObELE4(<CiW?h"#L`RRc9s$kgl'k6+k\@+P69sBiX^j@.M`We@.Z,7m+2mmX7%]4,?JH#*nYdW`L:^A.dHoD>$K?d>kS+?^-OrciM`2D],^-6<,A#'&!)s,[#+mO\kFp3(F%]f43*q4A%lY7LX1)W#^\olbe4M$reb%r\Xdq^OhGaEW$:F0)\JYJ]C!'i82qthu)RSmQSD&2QOU>Dn7kl>^V-1rUK%Hdt^.n]t:G]S\Df:Gqo-(`S'YO%4pYranJ%"(]<<;%PAb.[:4Bc74bEsshs$_be+4*b]<aL7gs'<F^P"!!TDJ<UVdYX<W5t#Up#tZ_Mi6m37C.hkHM)IPn#&)d[Q"0&`Tbq;c%P;[jcf:c%^i)tVVK1FZ2P<q*O:O$*oEa9YoR]/B."4&37AmW`6)lQ?hL8.8o0<*mBA3(Q?CrAOhFqN?T0Bu]r,d@8Odb\;.^^m>U>l-`nW"^T%JZJ7CG_/uR,W@9h$09FX]`mi\r!)rX0"4#/]sp'%jlZ3Qqt%.:03IiCoHsRnI2M:ZbFbskc9GWIIOZa1SDN%mT3X!Ss7Yu+EB/8`%-V&+$6-*oq`cp;2qUa3NZhGj15Mr!fS1j<cICK:GcEBKq:0rE2^Kon,]"\)m7bQkqqpQ&`)TM1AA%M8SC='Wpd9d7T=0JV`R9^Q%%s,T+:DpL^br*f0`?a$V-00u]>,,@g%]4r@KCm3Q,l9D<K[kc62"/^W(VQQ!G_g5Y8l=h:)Xq%kC*F-$jl_]DDj.GW:K88C),Ig`l%/oS4@4$J`IOb]n6,C*r\kb/n93snL6;*:9gc&UpVLIXj)a2dkX3GslEYrh["iOCt0a4')%nbi1O(k,'FHE)bejI8*7)jj/MLq;<J%!L/'#3boZ3_)EqbNs?8Q?*iYu0Nr4q$c+O_3c#0TJN&Y<f'Hn#FpV!Vm\'*Qe^g(cE8U"9Z'mGs5lPNMnQ4K*YM%=i&?bhF2Ohu9%>TI'uk2:"51/jRfl-]-B3eqK/SPJ4PRtdo7\uD7/E&GK;a2]msF1Ai7Q#NrS#.Wn'enPPm(670IHXqZ=NXkU*lu77f&&Y)*["g5<%c(UQs,1dA)6d<!P%;j]dki&V6_^gc$A)Lg+)r"P3SIN$6d8')QcL%;g!Z%f,EK+b)Fj>7KW#:tZ!#NpPK__%]nB[V:$q:Gk#+K1A%i+h1bkKqf8_<'h\Xq%U*bnP)"I[@^lFY:6Sc8n(;k`11eCN"S&=6lu4I9mEA"F@uZq#QMd`?.?7"Rk9(!4IC;Oja%P3+b8d%QXhi%B4BkU1]gobUYFeA(tYXmB\1._Xi2'[!T<bh>ABq:6cTW=E&jEAk$C0GOU(7_gTB3M5_]$<\iW12Puf23s5,/#<e%#Kb?(N)Us#X9%r7QtSje&'!H+WX2X5H3+h3'F`XrpgF.=h3A/#I+)<sAVlaZjD%,!IZ/RZhnT/:KV_eT"R[*c?M;)rf\NK.FerKkgl/m.BEGY2e*K%kaN@f^lG5Xar<7eL;b`k9]J(?Xl'\%4YTBfSV2=rp6"\eh+,,9@bO1>ZA2To>7<X>c::+jF+70b,L@6L0^r!06/`0E$WG^Co5FhY%`5'oFD<Et;Fkmb?rupTl3Z>N^B]0ui[DiL3EZP`WkL:6*Y6BL@5VrZVOAh5UEtFe\0P(]L;%"=)L_,u:n2Mc2_*Z&eXMpso3[UtW%S1jhbq=iB4lZC7pn/K8H"olDakC;dSFo&`<rS@Kfh*!I5bn"AXIT7o%-S83nS,Z]Fk)e>eiq>iZDi2U4<;mi$cQh\4-115S)^N6f%ZZb.(F0p$0/m\).Re<g4?PWN>nnV<3Tt#K]>]JG=[<u!DT-dhj?+"!-GOqHEFNr8lj/X@sKWi&7\o\+dI(GhQ(,),a6P'?-Zii-h%r#s,ueE:;VJ-c<Z9p9ZU5D0FEbg:0p8$W:"fEE=t",l.J[_A_+!n8o^7q@:tagd^q#o:Sf6W)He">OGLY;=,&.G"!S8*Osq;JD02%>b$D1l9JNuOBE?Q.gTVeLA`icq%,SE"6gR_r"D?HJMdg5Y6!lh_ce(7_[6P+$sjQ44E_hm4bu]<6F-^?=i2F)_*#q-VG9F_G$n'i%OL#_`D$+gfG,u/2iI#d]X8M"9b8$@<=3FZ6n(5aY.r.1WZ+QHZEm<&jP7+7k_Z.COq!-;(h9eG^/h:!RQ`)q^11,0XH8dRf1=Dk$%F1KB3#+L[W-l8sN[e7_*4&5L)rb:G.l*B@mo&$)KV&)0ESQq;\8qchAY/BljrcH'pR4S,f[]uXM]4OZ.=dZW0fF\'&!jeZ><C7-G%D$L:Zc'tL2)h30)HN@s^,EsH],fi'_+0ZJs01Tdl`4_)78_M3q8$C_$[(E:r_".cuT*(8^?u?'?4U6-?0SK^7RfS.ei0>53I1"0^%HipE(LUdn&/_&.t)>F1@#b*j@$a;uKE,^k'[ra<="+?]UZoQUN'$NYT"Z!a73k<Cj.%?'So&m?u4T!8L[9C*Z\TE8A<(kYFB9iM@%jdO:Kjf=!0`2f(P'QVPNB@HFP6klUk]qJ`I]K['9#<.6XPCp8Vd9Zt,X[)tq`t-"tRt7+h"`(;oSWCD-J_,XB@KUFQ=/7($i"^<T%;Sa[[T:1FcD]RVeIi>UHCJZ*Ccjb*DB#;O/fBR]djC_n+K'^E)=c/!V:i+'LoOKF@1)1>A=KF$X(+n3ti3@f#7@S9,'6PRD@j?/l%(X$fU[UZkqJa_aJ:UH$a(^&L/BEoW1"l-o?E=*nZ]uf@.1lrSMX:2q&OZW5W20$1a^,0fFmROnEMKq:jZ`s@DQ`AGf"tuFX?Ar4#%NsoARI1N5Gb_`?S=nAYroqGYHLRQ/Hb)ac%;o/m/l!Qe,iO!0UHUJd=oke'j>4TrJGqd:7DWda18_$k;#TRP_JillaP#ZQog3,s>%G$8WbJijV:TK^l"nbMQLhT^A\8Lco6/6TNAC/9_8<il?Q9iC6I2<oS&1+uUPQ$%AGb3r<jm)$$>2CG@ILCI@l-ABp1gP210\1fp\%N3u>n43e"L3PoW*/tAnkM]$h,n3rnY:-]Y=knkIMJ-<EQ6';Y?GVTTHaf@sJ.UGHu*pr$We6bS#fuf?KUrGLiZK<FRNl6]Vj^h6#%g^u46\/AENbV3RgL):(Um?i7s&CI!j+p*S=cXTbS?%n&i?"Z`mJhF1HRmt\@8;:=-GFoRaU^]%O8eok@'$ppuNeiOs0_P3n8+=#%%TEjOlm4e5?e*dhQFQ&mDM42?b^BAR@X;unKC'WOJGD4CIJsC^&4X6hHdo&:d>&*^1R*jSXi/aq65X!]8%:uFYWBog?nXps8`f5r_%_8h],!sG,4I*;SSed+Tf`l.(d^C6l#U_/@/^c2]]V;B(D[F0S**7!-/ZRn)7'+G=Gf*-d"H-\\`4H"!kZa`/?&Q_=9RmRs?2>XO;%<3cGbN?O/`AQ(g4YW9kq#WM3o-j"i0f1$ucJ+4YqEGHd3Xrif,GoR,M%,cFkcl8p()KJA`0ONLER=XE'P92n,YC*bgg#uocN+HP\%,1?JtUk"40Eg@jN?F`^]D9B1KiNH;OgSS@OL%@jNZZ)P9M^7juh'7*&Ah:ifVqFS0U4*]@%#sr?jGYrQ%lT!>J\b?8Qu;"9J^3O.%lCV*0.i1%lk=^n:NU8^u#1t?>bp[9<GfQ>F=p6F6()oZ+pk,aBTp1>)h[&NV0OOuH'*B)H?G[ASogsr_"-ZuT##-8rK0O<,8DCd=%*o>JcpjK97F<i5<k''MbK:-C-XCKU`_1aQQ$pE&#d9?uCTJmPRT%6AmR.Z$*GY%NMaB[l3>"n]*qd@LeN(C(W:Y@3e?Z/ErMcclW%@@i?r>2#hl*TJPV6T6%59i9,FbO@+9=bhZo:Vh!=LVf2,>*IWcLfP1WX<-2[MSQ,.2YAe,4(t^i\]W81(otgD-ieA\4+TU7g9eA,%Zi16)AoO5gY+*\IWJoo*2:m7>oE"FIS'_iT.;``o2KWY!cR"gDmH5f$)(RG647RdQs.-4Pb`6[-"M#.u/DO`XOL'kH:3(NA6UdU;%<;b$/!a(M'IG&%@HTX<UKn$)<'JFp3L/X,N!cKK[iero@>_=M+NiK/o_gR*V4)^iTDk]=3U-!:f4)Z<)Dk]=SKg]@(4[N?urZ9ii%$VpcmnN&!+ZE\.m9nidA9%Q\tD76gB#*$73g?i+FT@q#4`,M[,M.*(NbghH`<EB.?C-!Dm;2:PdC/:]PPFS,*9Ki4e9+B.:Tq%Ms%$P:gMj%sr9Ri3:Mr3<:g2W>5gA+$il9fC_cJa$t(LGYa^)2K#V$C8Y5na3%Rh*ho6#9^CCSe$"*`u_[.C\9&Okq02[M@-f4!XL7q%aC$+kJH>nu`4!mUAKt5e[OFS/9M0G6Nf(KM]/-W)GYG@%N.RMn:6_O<NUYH&W3Y*>/^'K*:6de77r'ld[O$$4lj;!g)q^W:&_0cT%<bLHq4L$H3n!;<'I]PJnO!K19@L%?l9%]"+f#o=c?pDe9`e4/oYoeUF6?p6:jN(>*Ha5e;Y#euH]/^kHg1J*@o,T)Z!j"IEUJ!YR%:O\C9Lhf.FTU(a,U(*fP1N8RE,7GJtE$.MMJm_D`=b>S'VL;G.7Uh=@V+Ht#/5qu_<K;ucFdV75PkJ.N-lqcZ@^"6ukFAe$hN;=f%rdRO2/,%<`HALMi,J+u").C$Rl5ff;,4PaUPl8,>Zte20<s/.hV/4:9CgNpYjn(N64I_tg>b:ar3F-mC;S82tcZnb,)1P.>XOX1s%L*"X/hc=BG[A)9h$^^g##<iN(.hUPCEY&]4["@e0<\<+JcCu&]`o_PS41(bd[,,#-<l+PXS'=%Q1hsoi1#!8eGFZ@5^$DC?%r,\A%IU0*s1%iOck`bV="VlO.`\jui=)$c&(2[M/REeEf>EBQ-.:o@s;QSYMADC'.4@ngcRP:":!_-RY<YF-s.6HpYo$V7ZD`C<3m3e!1%qC)5IAbr@)MX41Lc(Q@^`Y[5p(H98K_.TcgLln2SN%sHC@i8q/n/Vc'EX7_YGT=^*5HDX,*P#>l"?@r0a\9j\Z4[SnE/4]d@M'<J%^FT/#7O]d-M3Dn[jG;hB,ZJN8R\4V6qFOm<,tDuNUJGYd9l#WSKu]AVY[M)nb$R,#Mq\fc`=Q1J[7t'\$=`[0GYOWGQ'U*]K=rF$%\E?R>8!AjUEn0oNe"X$KG*H+`f=`Z.[RZ-]VM/A_qFE74PS/T!XZ`e5Q'T-hpuS?EQ7G.H/SDAT7qmbD9'TS,jKhH/.2t/3e,EOR%Y2k=jn#Ej.\$'A_7?/[_BSu]f=OF.(J`oSS6il,d#mI#F?!>no#3jj!(=uF7;4qGNhUoKTb:BZ0XK/Gg/=RX2\geIW0DA>h,Ycs\%.HPU-P:>+[BfAJ@F\[f(V1bh4/_@!4B$)Z-Qku/(OUne4?k/._XHK@g,<<rK,S![;!3^Cj`YA1U\][f]EhKMp6XV!08&eNhC!+kC%?)V.2B40$:Yili<)7,>6C"$8<UE/\i9J\S7[UG&5`:RLJKH*RnK7b.pE\8pi<Z4T'4JDtZRH.pu:'Tkj;)SVi@O,'dOou1`q)se#%pJ>_JBO&f03#n7]:b=%ZCs7;ER)W6B*[>5LC$nm.`h,4oj&+G1QT3u8V/!,JZ0\:\!/cQ6jk>t^m&J*3a]Vp2'UFNX,;*I`BH?Q(%N*8Be.MheW21,k`*W/O\Ed9OCJ\,slC0$D&-dug2pXt\AR`frtP0]ID\^3#.epIr/ZKrShCHSHu4f4kn'BaY<I+sAeU6bE(l-e'l%9p6&+0$`/9Wq;?iklreto3jLr?IJ_0-MWiTIT=NMSI%7L1B!$.28t#M\mLk7O4dK<7IEA&rGgtlk1VbW")'Y)&22asPQ?Ue55=mb%=]c-d<M$:k.2bs<V:AIdi^rBDKb(okLn'r(!`G\A/()0hMPq`3QJi*FE!3V*i#[(AR.::e%1\0X--n(gJ8\b6MO1DS/$#NT_9(,H%K)#mTXFd_Xke[HbY-6c@$eTYCWo-MY6Fep+@[=&Xp>%3G@"W%?G>m1drQ=<%r3J"6Sr8Wo'"o`B_nKd9XtdaQ)s0,T2e\"Kj;%Ce%_U:5Fk8S%%;#NbFA*R&$WlLjZ:hk0m?gIsH`Ga8)H9\PB=2e&/+u*)ml"s$h[9?YK`A0n4=H5cMZ3m*o@7j(E-rrr9W8L)9iK7*+%b]9"t<@$9[lEhnm)[b83_YkVab?7HLO-EcY;Y%Mr)/?DlZQTdXW3k9eLQns7l1e1,jGX5E"A-i3UgP3S%WdLkWnN3F<.*5ZZ-QLO%>7a%=/k1>'P,b8<l5^URq]_*U8hN%K0logn<)=SC3-?Wua';KC.2b40%%^4W]`X+<:P]:/@VmS[bQX8CV'c#k("Z'6qosgsZRDqG%rmSucPu1_7UkM&l>qh6QcR([OHC<Vi'_7Pi"Y!C'/OB6>[406Y8_Gc5oE+Vc"]DO+rON-nR7*qu6()4^=rZfeps0u2r\AM(BMWs6%_2]WW#&G2,o]==Ua";J)8fnU[S$F\![1ARn4g*D(5mNIM\<j6<?opq$5D;JmC[c4^?e.1jV9tdW?8[+_'YJF:)ca7bDQ12JV'AgJ%!i7]7gk"O_B9,<*Jh";7lkm[;,)LK>9S*e0TMgW0WRa=t$:[f)Ap'KVBSE3cW@Dmc=d&8(7B:$P<?:e;.`J>)fmATOQ;o;DY5Wfp%==#*d\-G?9nigD4aU"@g='WJL!aBgGX6X&r&4LeKl$7,"bH*"hPtT8!YC7X[4oA)?!H.-]"1rZ?-P2Li&)\1h/hLM(+WNF6B*kg6%d^LHii^/X`H<7lD&Z,*#ikPX6r^TD#XH>VIf")guEV7D6BH'FpJ/5S"rtH.%E+uY`o3K`Z>KX::b+i+^Z*[JH<)]KQAko)U6)dd]%hBZ`.L?L,>3=StJ*`7o,7obQbZR&PQ,g$aa+m;+bm4cH5=4$kY-(o[*86,b["4":h\?`(1k9*u+`]BIq%5L^.ZqQ<4UkS!9q#X!G%)[^7#_L+hq^#Zh!bdj6EP]4_n1$b6g_p0GJ1K'Q:JW'sfMoZO9bP2&T86'(?WHDaJ.+_!)Xs+#e/')Bi`X;o(W5K%#ao5/l-\p]B%`8"3H0;Abq[IUOo+@:ep16>mAN^1l$=O+Wp1bjOZkA'*\-_GFA1tR\$F^<r1gVOs`YGQN3hGonD-#+T18%n5mGKlJWrZ;d'eP'FD%,!PV+6"h#H1LGjcY*'@(KeUbQZZMVl<L4N&NG=o0j69G0')f[]<rIZ)r:Zn>mOgc,#$.DZXP2\K-<sc,>2<30H*=;R8I_ZM-/Lg2%S#Rs%WRg0/oh+66O+qqG_i6Z"?nQ?Y;%[csE+:Fs!fec#.W`/4:G-3mU`+5#opD1sTWq#sW8s>7??SRe3FI[GH<Jf=0^^Y\[=n\q%%rgNiO\6AYNg#s0Y$1(kbt-]8Kr^N120.4sp!goWb>+KeB3\]dq1Tj"jEr-Qb;h(a-]Q9\MF?;UM7kJ8Au)Z+W,PIkdcA:s!ft;W%36VOePmG94"a3t4%O#'"-_-F!TA9%ak)uLcr::=+8o[fob,qb3RL:aHa1;BS'<MBh1i.._k;8FBhLlA?WR=uq(cd>5D(+9PA#oeg%MGQbgZ&DE)N"+=f4n#Q:hc3%=;lj0I]s$S$X1J2[9@pHR?ZT4krn?6/Weu;9].We]e9mV#H3P?s@ZqC2*a^*]QW,05Vii8[.h4-k%PX@#pdlnS]j`3:]*(gtr.A"^qP>0"EQj\e=MV^r"f7HdUEai0(Is3.e6WI+%1X)4:iTDJ*V&I(Ga@sprli14nrOG_i(E]&[j]74X%(br'OfZ"Y+l7!]GR#UKG[%5`bAt(f<a2#J6!JZkme_"e*bIAp%o2/A]BKa#CE34F6;,PdlT_O&0nm&/3.B(W)D+k>LFh)uMpNda.%?V\R3I?Wn]7MFKLeZ.#]b;Tr#(!]5gcLa4V_>&72Pj6YQMR9[O)HE#"`[^hJ1hMg=[ah_?Z`<DLJeap,41Xrh_29fti./g1*Z<Jb%Ct:eeV4^;W]r+GK#<@1V-4OjM`.PrRe?RI:KW7#67F,`5K9)iMf8+;D5d]BfBGH)Z3C7KgfMR\rMoc.Hd!e0SV$-@%#ita=H\Lia%*%.t^^r6qY?cM.7*53$k^5'4VSC*P\k&P$o2.?C$;.kom8cXqOeSMb>h&!88?f7p1S+j)'AV!ngk(0sM4rU['q/GReb88aHV0=Sb%13cd>p@[%;I6P`@^#u$b2n8:7`8[fJP4,!ANRo"RrYc\+O33ohKT>`Wk!)MnX6Ou<opqH&H@[YQ'k_Q)]%Xt:BV2:aq/bc]m^fF1%J%b"8G@/n/)t%dPYrD.%.]gg3?_?;kI&+;<:K;BgJ1EAl1&uIL3te2l!i#N=Nuts.8hq/UJP,SFdZWD[SGb)9n&79eH4g4KY$;Qh%+!__1e)@2-kftJ'?;:`eeG))$a#=WHCdhE_)YK7E+!b9dPNJVC+fCJecRJL4V8E]4WNYSC<%5Sr]Zc,2\bkAG[p=?gK<M+9eM:Rp%O1F.JV'##Y?RR"rm3:V?f4oq.&%eis2UH6@Ij.)Y(RBs:]l10mXu>,?5&[<T&V#lem-=bRW^D[(_nii<5@SnSEH]Ue29G#RK]$UV%UVW.goNPo4QE(J"l4<pQ=4&4`+lt$kgtR"W3(`,9S)CUtUA(4@@s4:f4mqij1-.Zc+1H.IRfaICnab"PRbeEm01;Bir9sgF)Jq&r%A2ujE#7m&_,:FHofoAjd$O=DS`Go+Cck[_::n-Zf:#SQ%Tr@9j<7lG7+Pg_M\Khi[pBLufj&mB#20ik&dMr$H)\&uf\WPNdEep*S%@-;W2q<00C+(?r'!+'Qc?9M&9dQ9J$/2h?>T5=tEDYX,BA*A]H%DhtoI$,.k5QXC`SB/bA'qK]9p?n-Wr?M5^HI4Bi?)<gaObd:&%QFi1=Y%,$.=RJ59]8l!Uje!1R*Qqa/En@SOFg"C_a)]duZ^+s(\a*P_XP6?U5MK[_ep'm\V:8K43_$MYRiA-V@oRf6C6)6Z6%?nQ%p=S:?eK1L>@oRf6C6)6ZY<AmKk,3.,Yf?V509`$24>Kt4N>6nPL#8X^3*,g6'n0YHh\0)dN@3hH-fp:7jbtSKN$m_G-fp:7jbtSK%4Rl!'j6;Wbl&UmSqVuh#pirh6GcLO+)B;Nf^L)V;-Nqu[WT)s;io@#t:Nri6J*_8KhX219mS`$,/saL@=./RL(J+"@&c(U>Xgr/s%IBC%oH6oafKoVW9MUkkJECEb;ZXr_nN<(pBf%&i,M+@:)nqre.?Cr1-'"$/t1R8tdDNnWL7qkY3F"lU_XnEp'4q&uid.FqE/nFtc%rE#66'tr4<UKY(1>dpunpi?DPq@MSJFo_V^nGC*GGU%VL\Sds.$8OAc-+PH=6KG<b07W9^+cXidCsZ.TD;e/Y%=guh[&FRfIOQ.g%$?!&M#!L\Aq=aE4>'\JdCV+_9%]I&rF8*2rEe?9(l1<F@@Jg&SUd0C?Wh-hu8KfUP>!qkkf"4o)Gp^(FZ:gT4;o4Z"MB&J`adQ.2%q>j@Ho.7^e&PgaK-)RMQe5E',6/7H[K9VY>-s*1-AQ2Q[O^/;^U9T)>[@"?I:3&'0@1H-79SG,3]N"*8'tEU[s*[Kf:dQe8![S6X%OKAJDHO4)'4]kOS#Ji-q!m3(19S,&.jFNM127YRMe1aTW;p]-Eh=.t)<qH-JWcc78>cS=jO`u<L`DJX^Ou5(%_b_B`Ved?LZjd0Q%VrU]cd*3rs:!d'4%MJAMM66H%[:q+O;9>u^UZE2c%'NZ(#b,:>=udh81BOmoTIgo+A7Ui([RVj4jIfR3YdA:`RA>SHWo7NP'[kE[%QA2_&QrVbY9=hA/M8W$1JZ%Zm1&/kF6QP0LqpAK#pNoXG?3uX.FVkeJ'I2B[N_aJM$\]?@Q"npL^kXf=+<>.]FZL)4nF#D5<^,uu%3`t[P$Jm["pqY,9C>b*LWW=ang>L>E(.6s8Y:\sGJ#0HYcn;;F]lG<OVOOS/&2b&>QE1*NYskrpaY#"5T2r:jf[EY!!??`,D9gW.%cC?8Om"^hoP\c.X&Wjo0Re*@lVp_;QQ?&P=CaUn*)VGp,1,6pfVaIG,WKY.a-AOj4?80\j\7\;t]W#;2ZV&#/'W]7UJ^smT)X[`:%M@,(.q*GFCi]0B4EbuQih1ks`NMg$ginB4q7^eXCQHKLXD*A^AD4!))*=sRZi:Wc`J$JE<Ua(^r[M5j^GdU#AF0%DkW[eNX99blT%e/Y1=*1uBW1n/a'FRNAnbQ8(U(Qms!ETs<uF:LoEacn;bdUL-PK`T4CnJWdt-J[3e`8+F$\a?u/aRXDQ1Uf;&qqOgTKfJMF=`/=2%7GXDige%HtQWRa3l*c3.Rn=,r0mT+FhRTH=9U"][HP'oJ1Oq(S,d"ukOr5g*E&NF'(nOAI:H"$(<+L]!(0AU5/oBW<;CQ?H6B7m9%17Q@+8ILt66TLF"pT8#Yb?A'V9_Ztsb-[pMP#4I5Ypne?/M_p8$m;(mYN3K[YN#&;AZoW)rdtP"Z""$=PPg4BDMs$\$>91;BdlFN%)VINnehq\K4*'7M9tlQ0>c[&\XS^h+r!C-`Sa_&G,(iI%O.\qIc5p+-NG_A$)f3*#knpoCmTt5?gm[$0?=mJCUt.+Fetpm-SrJnS%lcSS*P[@Mb;s]CZhDEV4TCitHB>*DjhXW[Fd-7Pik"QA3Me`gp4'F]&X\=2qPPlm9^?Qa,2so_BccZH9a_GW;F086Zm[E&d=mVCr%A,7RNEuqTfm2N"hE+F'q4NXqU)C9GUSbuT(r.):f\]FX8dfKcG'ppa2Kk%DW>@qE33LN%mW=nr9r`MDiE\.fug?EmcRASFub(Bdp%WO,G9daQ-/o3D1*iS6]@kH)gY!t1,m4s2WP;4jJfTVBo!,-,iV7@'I_WNT"tDKR64LSC+PCWZ>@i]6*P>UIPc:1&-4Sue6i+!\(V%Z=TRX$SP)>0UksP.oK,ZmhA8u%p>**+ZO\S4J/t(U?.A_>gY$cfsG<[D4+IpQ[gk4Nb(:f7>i]`PmUZ73QkD$bGc8VX@<-3Vm7B7%frU!JV_*pTmC:;m0"lmAbOV!IR&coj#Lh#<V'RtiM@](,I-jR)f.t^[$C1Af**IK3D,60l)mik9?a2SQfIWj%B;Z\m#!(HRD[G,+%/a\*a*,RlNdLr`Z`P'94-G;CiLEonOZ#2a=Z:0bjH'q19ZR.[K'D!okSi2ul\8@@Q.6]L5?BU@S(!54/(J6'C4QOmjI^un-+2P.Z%)Wadf;7$m'b>>POjhWLPPU0-h*YU4<<*PdK*c-@3:d$-E+;\"<b6V5AH!a$c'NQV;drk'#eLT7T>etFib>koLZ&n'jhG>`YgXL"S%*\'npPXR0j[G+mZ&::H.lW_a<QV1R9Ej<j%P;(1&/lrtB\k7lD?W3]MXr^RnM]UIbW$0)Y'h^bs>Fnmi,XKNPISFf#Q)9g_&D!)C%otE'\$Broj?s[%5!BgETAMN&!UV#f!ht&i7qtXX`<sL&V9H)q^@EMKaA@?Y=_K`9)*p/43[=5Vk%I9F.h%pd&CB=X^meDb,@'cV.%%6Bcfpjth@e'l/0lN0sY!>kC/JO9o.;.%r<YaI!&[bEWl4H+)tp!_T_<&=!0:USdlb>qtanTFL(U(3Uf1tP')8V1`X+ol53r>kP[%8Dn8U)e;F-jcDA0pPl;lL<b@Q+4EIfbud-Y4=\UagooM>gpck@;=38p4Lq5u\tbA1Y!"FJ8K6_s*Mr?iEkfbgp%qePnEIK^WIInt%ZKe(G;.^3%2-'U,1FtQP8[,(mXlmXXcr!9A_<U:+R;e[DJEan5K%aX:6G"kDmU>KF3FiuXM5md4!TF%8H7?W$;E.ZVc`8NA<?Db:%UHtB`oMW;u.OoI;8@)BU]<2_>N`+Z4W5WTdYg\@5"\2*0\P5+"UOUu4_$AN5pKbqF]A3@%QW_1?dYD)Co-muFF:Ld0cGA_^K))'t%>aq;?Iem!>$L\B<*bc)O11^0jT8HcK@cb.Zp\DVG7aSBNj-r<AK^Y7c\,.S[l(cI&3d#H8F#!(1B18+/_Bj"p;!)KrB$Pe2Ng"d]%&m=t^R&]pnOBI1&mF!F6"Yc<__9?O!"8+prnk2;\[JV.Jf_hQ`0*ckM),Y6ABchpI%mZ3-6lJrP>?Sq[l)R*S=CE(%<ai9dm#ZbW%W^)Hn`uXe3b`!;2^G+,LMSj1Jllek@PW^d['T>p)gsYAQl$bpQS,TM4=t@d%qd<lrDUfcb_('t'O_OZ[RV=fa?l;?pXB%M`1RHG;%[)HZm%e'0d9pEuR?p7?$>T>B`DLl0a1GpJ#(tX25L(\;XCm\+9.'Z5a_f^5^l)9@L1)qIT*b779_T3'/.u^Q+YeousL6(Rq"6%L3%Y-3;a3PW-g^\['BX2<18Io61+"9,1Zhu%G>Hb6eu!XJZ#GOI^JDC;XfqpXfSio<FU!D`EE?Vp3]4/bMZkjPZ4eF+jbpM[g`?_?OP%XloZ;DtMBU%6sh.&:^8'ae's\nXoL8/O/d#%/Z4eQ6mt,n?8\?oOp,\X-UN(ki_E2UcEt;7LS/nrh2dKUjD%a*+L*j^Bd%\`d+:T%A`MZC+/(LZi;`iJM8&V(aA=O//R^=jCcn_HpFZ>L(;r`1$#CAe3poUm<TpQW\E9Ffm\aqOXbd:kXTQ8B4[:B**D)kc=jrg_[\eL3%0UN%]f&:/HoI>(37Hg7<:,8Y_TUVN#6(_@O/"WP>q.kIpqX%XmIrJ]jCV$e)f;g_b;tFP,p7QE!j#:-!K!n=ZPCdDYK@UuZ7A!jU%/"aN'nL5Q3QiTsX`V.%)_U["2bmp';GI6M:ek!'7ZIeRV]_F1l\ngf[+nG7j+)2UVEfqlu'Al7!UQFZid>B;Qf[PGuXgqZ,a+FX-%\e[b*4`7JB(b&1`=H7`YgtEnT4Cd!ac2krU&`H(b@s-"u8i*t!AX^5`fY[>d6dd>Xf!O"@=$-TdPh#t,juRrk93X!1:(!.ILlV4`%5.=-5*a?[dO!%Sk3_7_Pc,.fGbE\<=\2oL)6VW!3V7RM/bYh#VD*<$<K?bXsM`k^G(OE7))73Z&7NI13YpRI^@t;C,Egq[coX'cV%$BdVmGl#KQn_b<`n_ac?3H/1oGt(WuL(?$?8_.n_*\\MWG(XF]i.)fbe\"PlJSQLo9)8@iT_7DeSaJL@oA#3W[&j?PM]rf]O]hoo%%qAMc8O5Bk5":f<r88JknR/!*E*Ybg_*l,Dq-CY9693.%P(nO3YWT@K<'5A)X^PcU;4k%Z\2Oo+6Heq!hCOm#h-2[kIS3>7!*n3"%!El<(X-MNDbLIJo810h$;Yd,5EZM901iJfb&-6$R=o5(k_cL[<E#+d87.JKT1_$%Q('mpE?$YB;]F]<d81+QI7LC)rGsWQW6Rj-^%fd<[/F`<)Y;u:R)aG9\t0O?M:/dpCANM&LS1P#$oO\Of]?j4j?3gI`n\0o]r-E4L>.@sd7.j&%EPF(-F\`(qYY?98;2>tcX"PF]d%qGd$Cn2;Dm'()KfWE)#.Sm=i:T=o<L[^C)a8\m;e@S_nI05jlS^F3cDYi@hIk(KRK?>b"9l6a_H=<>a+>5@NBp8MiZOj4!Zd0,Ue%`]L//<kG8l@uddL\Wo;]Ad]Gr?sL*AjNOnU6?AfqKQL+R?qNKcEpBHFEZM9,'YF4nlA47>n=RY,q(.#qj58'u5(.g^mA0M';:0HR%f\]]m+d%9HWTs:KlTHK`MdCs6M_K^!46aQF#&DMZ-@44m^pUQR\WOu]IBj5sn"'(ifg*iB>ZJj`%lSR?FmhUu_+S@=YijrR$ROG;%_RJ2.(mTo:Do8C.iHTmUra`/PDL$Jhc=<#anW5:I!fM[-5?[mSH1d20#hjnS8^"3IJ;cQ3F<QiX$WDUES/'E*I'<94"+_J-C"PN2%pmdo\D[SRnadl0#[T;88[+8"I:1HA2;[Y_6ceAQ-^%qV$#]qTL$O5BC,!);K:a?:k6lc:,RN$d2D69.-+N&i2d+Qd8S%8bMBf_[;%(AL=SXYJO2m1g8g1g)0JSP<#f+h!q*N]r*>2]?S5!U.$GY"U"M+SpOsCF)I!afAU`9t14<N>lPA?@eK@!+s=Y&Y:a5<,cbS"6A`f%",PHs#WW#@SCC]GC4Kt`Uc,Ul%2pN`2#I\)>&`E0>pQ1I@5>Jo)Mlu/bjlr]3nMV-%h,%jM=![tBFM<QiU2th>3Qd+7\d$c-Aj\]%Y%JZ(n*2%i2Qc\q+koWlM76[P9POQK_6nj6bIp)S!s(>:'-j*T`05mu#<1R[^In[SFPHlK\rkR`UQsgX+i9NVQAHqQ&%bKdJE8YO%4Zq=Sg]GQ^G/?X@P*=/qR;NPPN2@QOAW8P4d:'95gW$(%BpRuF#"9FD0d%c0LlmH(nF.lDT^IJsODK%uGHoQ`L'-)]1-%0c9XNa+%b;=CdTr@l$>`eJ:QeM-2f5\F,906eXS2%-?nrEp^&0!GcBbjh#0c;g!e!8E(`5K$9QLKlY`0N$NfAWIFBm%fT1G^*"BO0,-nR02C%Z68=p(hF`7Had>WbL_&YE4$<UYR@]D]#?pXl1;/[3CAfX&mI9MRHU%$J7tLrNdsdG%05)2\d4%9#)LQmG,549Fts,3g[mTTkirpr%km,.?<3^OBH3N'+:2b/6!>\a5=,UW3d]E#P_\3L.NUhD6a4'WsRoE*uXk`5J#c`C.<f#/gmKfb)["2=<\nOQ#!3p;Y>lbnO#@K1L%XIoa5%DWJJ3j&tb_h<kL8s2GM,!cu"erZJIcnW5AZ-:qI+4+/3U2*k'_7]k+KY5L7nARaS9r#"t<S<-:kduFcVIrhlM9q\(PO*Ha%.fm2?b*egpqPmZa(RBGV0"#rZAF:-j!+_l&!Ya2M]o?nH`7Y'mg_rH8lP+BK@)k,S8O?W3&O_5rFjM!/>m\N02CcCl>=!o7FcS$f%.!k0XJQV6\K#HTPineI8ZRj93<`r;\Lf[#6>r50n,=l2#2s&C`>+.a<kBO"5-V6i<GXRjlmMNu2#Df'KRi=Lb-JH&/]sIf^aG!nr%kaVq3+W;\N8?EnJdJ=I@b%e7+)(\f?")QO:bGr#F-5k1`2?KTZ;&X,L:+_PnfrNal+,>]H[Ri[PeG9C+Wsffn#)@P8S)b?(TA5@^%B@*&TUCS;We.;`X+l!+Z?ra+59M]7)m*7433Hj,0R`U]R)A?U]17dhd,R<T:Y'EN!gk1=HM<D-@bCU7\#0diZW`H#5aB`aR^R,k>%'g5!?&/-c-8NPep-8bdT76=_[PQkTjfRn>i[)n9L94QX<&9;1P![9%9ID-G"P>i'iWMJ\brbcMV)M(TJS4t^bG)^5NRR8Fu`hs^D%0"("[j-E`c1A&NpGSZ)0.Qm`/lmUVa#/"qb*&V2-!&:oOLu<7AF?@i@X\Q?*.gF)7e?Y$mloR&bN7VCXY!J;mWZd.BQp,G*']'H9%(MK%19JidPn?>o_]\dk3;NU6e#(i19"*-F\b!ppc+qiX"hh6dTC'.SS/"K*XL;]a2Jcq!1U9c>r0ISL^J8H(7N4*Sl<psW"NPl/C%Jk.`0%6u.[W<%s3$b;,J!%A?p6;SlIAF2[]9ko3@^=!_gSQaK%M/<"jXbkWo`&9Z3@.ABNlbN%.j^(b`Ec3J:*B"gq&q`j'K+sR5%dG@2n<%3e_fW_dCUDc5h,%FU=7("OAL=VL^-.!7SE\FuE9Pd(k7&R0mOrH:K4c8Y@+kp&:#,s:'!r)#oY1ApCY78kSYhZBYD\36%%2HC#J-5"S4krNOONljdKH&D\^X*QGo=YdP>`ABI"7jU(9a#6N7:ofg4LLBTcBl1X7X`7*<_kE3e,9U^:A9%G8H)FR@G%aDU,_esh%&Wj]R[8B*j,)1^G!WqhtqC47=[=O>iCg(m1mKet[h&r*E8kksb$frWfYthnX)l#qnF$":e-@uOSbFhU"5SR*VabJ*;"tU_(.T0&q%lt[>B%9iiu$Z(ljX3df8-A/$IWEJflA`l/B!WnP(l3K,s['m!8OGlplO^lQG70$-?Ad2fq"iS(BLlo2u<dc1YQt8cMJ-N=%M<\dU%dADodckbXGXEouX5ckK;601Cg1>ccll[C*>aUJ6\<nTjM)&!0#.Q8C[NO#:"D9*/SeLJ"AojpkOGg:'!D,cPc7YNmdIBAE8AW)+0%i7_(X1GLp2!M/H#%3RhG<<XTH$IMtH/i6mff]o#<RVN#-:Pr.O3tMR6`2/_J%&b_"J"W[sk6%<BXV2o`/Nb,FDAl1V(LfcP>i)9r%+LW6>dMGCSBXBMU>s8NKF=KurP>0A5RT:1Z-UK,a/%S?-"_slNQ",4UKkM>!Tm%BF(PDc%)i:^!@^^0q*+bl1<2+Mp!g<YDlRjV`%ks:)L%?!fqQj"/B?gh]%,Y&lYD>7Z_Y+7=Q/)F`jbaX9`dimX.!ug8G2B+``;d*20Fd([c#-%bUVg,sJ/FW60jIjTV?oK'^=jGVn%*WZ.+":o:f%cpt/LG?4%6_cD"Wkm*!*-H"';<X!rVQQaqEq,MF5R(@mC6'UMDUYbPfg>MlC(CH)!$XEI@^V'Vm2A)Z8u@M?]b;RD%A9WdDFpJYKcK]L+7Sgt$C9_bnaC#+lcY,_QG*qrrCI:fN0m)-%li;/6]-hsZ8RMYhcH8cR*SbFnP\e=:!+OFBY%a)P^O#@*OqTJ^%R*7r,L^6js*[&>PPF:6LWSMB;W`m2%GS:FD/$H7YCn+SNQ27PFj*_`O#>&-FEQtEe\fF-N1Y;eJ<RQcpg7]=[VRB[C5`A:l]&\Ea%(A!3Dgb:F=`7?9[egde#j,rnVddtR>o\t#rd5p*0JV-3YC`==ZGnCacn&eocNCH?g6_.o40Hf>BSi:dsi_RbSR.+@E3n:1%cEJ:M%WARfrWtURhngKS.&4<#L6)aA\I*s.RUu(sLJk`:E8?*rY:2N8C3onT=$*8mBAEArD8`Z[fMuInAgb37ois*GXqRRM)2+@:[LC1S6%m[,E<+A)qCHMDL#gr&4FI)Z5$[kj.#BdO$A8<N6PGN5je@3lJij?rDhOo>(3RPd8?8Sq#u'ilNa.bC=W#Z)h[7QiQ]6FP7j3<Gp_%'K"U<M\A'XaUOn!_=phW$qkOG-,Q3IPFRVC%K]dWOoeHF'"gua2C<#HKPY:L49h&tBkf_`kY^5`G-F&]#'IVb-%t>iT6/ch+?%rU%%auP_(^lP!U5Re,U?t#!A-fib8gX2[W!>dWgK85&%!uC4U5gWh<15On(*t7o=Hb*DM'4#F;&Lu)L'*,ifka$M=(qeXaU>@F4jEj3%agGFFKmWQ;%BH=]%]B.VYuYWSaL5MsK!$2RZe-OM\jn<ak%$:LfsJ=(#ss`#)]`h_GS,KtqMAG,-,<`K\d[RQ7f7R2Ee#F($cESi%*g<CA6t](M*PLc,aI+sg-^#Yke?DU>JUeP)N4S#S&V*DIW>L*\2P>4CNDt3*Z)q$%P-$"JjK7D<om)-Tpj#`;5ZD`4;Wp*o1pMe'%QQ*_:9Ccst=e5oP>#d)a'dANRh=iXKD-*EhV093@h0!Pq79AuV6LmAUfN1d(D?/H40g8<PrF=2&*"jiM<^83j$Vm-I&GR!gYuW",%fHK8*-3fYL@M0<U&cTZ2TLmCcN5EUQMC!Pb$9t8cTI(%`#'mrUC*P&^!6EaS4j#*g`"7`!$m)bVr766M!,Xt1<Pr$3)G$e:"V7$b%>9?i8\1TY3[WXB^;+#O%13$?(9LCL&"<Y^E@2H^)@hA*O[Tse</25[.3ArUX>8P\p'-U#%ZJ;<2g]SErZ1bH37KXSI]uS_nFmfSH%drrjKPpiX$/]O,(]m):rmPWeZ\i+bUokB@]W%CJA/UD'#r7d;P+N0e([0q;aF%N0a,8i4^V"R9bSf7ZBVbjH%^.4,hWKENl%XXR:%9FYZFZPd&eHsCC8As@s2&1"]dFu:^<mQa;Q/uLA]]lbjL@G%tS@[73f/K#g\:/Sh2Dc6c'nO^6HmPDud'OA?BE@eql=)jHFM%YJ.%f$l!2EnAg0n)^@KfN)XB^+urJ\iD>:):F&_\0p,PdpOt4-5[d]:eY::;Ze?pp_#StL.!-K,YY9Q,$6DMK?OHF=[LIOg0R1j)k;=#%,WZG6lK6OX6\7K_`g":;f>%s3X!?8aLgBSTe`0''8VqWoDk./:HR8Q>829B+Xqb-0YsKto@n:blj[HK$O;M!c7RF56A<V,Oe7=$@%/K1F7(Ecpm1_,A%<M#kkdoT$?>@BiYP+,g\W#&@]*\\J$ks%ls@t#*479L-%=/\oH^7$$6+L8Cq01gj2+fi_&,T)+i0*)]\:-B3<%]2FH>a@7s)/L+Lg[(7bV![1G#o-E+$Ri29T0AG3[g&rQ/b8Z.8]l'.%<P,>]_h&'Ibf0ccgiZ<X7dlTk)DRoSm^bu7Qkorn>K%t/%]M%W=J0m0GZre$R\hdP,jBgK!3oHAdk1[0RC8i=9E)n(&#,=?N->U>g6j3rlNa,Dm::44<MNOm)@K`:cGI;j?%uF[f.1p\]2sX(g%NRJE"fQOjkA96t*XfNeiGAR=`<*!IQ*f61-n(7UZG1:9->FTf@2N[`0U34t#N64&Pdr)]A)[[XA"qoAj<f'5PUlFH$RbDhsS!^H8%4eDUr?V?h-hHVFtQN2jU^"Y$cL_3,d"$qas>KiI3/;c4Uk0bk5ZmO<X5_R),-j"*dfoVe`%9_(k(AEVc.LZo[2UIip%L8h-<`WNq%IQf$-W*$9sV@L>`MG+<[aB#N=7a2BT>;;7J>*0j]Jrnu$&l$gZnq&`Ad!%M+jBbh.k0k3K$Z:C_I$.G\n!X_N(TSK^G;pH&[4VLU%(]$6?>6uCI_>9,b)Q0.3$%`G.!nC%:BE?q(e5mG#SR.PrI3N\6?%K"Ze^C"#80bAQ`p0c<;#R98!^NoP"m9)q!E*dY(S+*lNbs)F%_WXl"f'*+/8g,@4"O5TKJ8^YATOA3R9-+Xi%8MZY<g3*)nMV!0H:UmrC0+k7L7O28+VRi#G;g\/,t"!ZM,.FCe23A&1e^aR[7SY,%^Fj8]0'O_GUg;2I<\5ME(:>Z#B47s9S"q^<22`+e:rbp\3@<7rdX[J3GH(fqAsRbnW,8I>qq*7s_[M$Z=^$eCkr"Z[eO5]%8UBF?%'\m@^'+'NVGBX*DlJic?OaL.SG)^g4\e/E*0d\9KJC=\-?[YGpbbe-[]kDd?qOho`.[W\9PI1q?WJiQ:g=Oe;"taujH:Y>W"2T)-%0lQ=k9ei.S-::M>K1mkF^5hIk>LVg>!_4S*2%u0-[+ScNS3%nG0hn"WNF[$=>$08WbUe_"[7hIsS8gsQl81@uh%iqiWcg-7*J0`4%.2e'_81=uL#85F!8ja@a#/)Gp<)Fj$b]g1l-g._l_Pe1q3=>[Hbd'kAZ3cLC@e-eBOYA2#<R[h0.D1r2=/B+jh\B(o:mosdH1,i]%ZUP%;<n67>0en=U<0P3feN=!XMW>bFUi\F?2Fc4:m9/\)i+(t/[/'Mm\PPUlFK8qhA^;*J0`a@QRlfO@0%)_-^JDBq.aN*6!fDoo%:*"9l.I86o5>sn0c>'+26*07=:1pfM$<?3I]%+&X%]N6lWH;e,#.:=!+IUC5L#6#2RI!&3N's&S,$B]V$uQ%G5%T>7,9Fia(,e=f%$Ad8KhF'],Odq'Q:!3`!&7(bT.rka.VOU%!JH[=>W!UTR5@=S"XTJ1:n]nLMl=?TXA4TUi+ViiYfb^M#-,24_Fd`:ZE"<S09]9^)%o'"pA<,cLk#Mj7iF^Y,MBd2^r7pSZh\r5!H?(9P"10.COK-BJ91GjnAn[qr!W5,7M@nQW83Fi.K3C:Q>GkiI=M*buA3BnUCi[=$V%M3)dBRVpl?/S1=Np61#?fidd%_iC9$WCjD+$D$a^Q<PVT8lCt4+=)+gV:A)h3EVoQfr^K7Wip3m<5PK2G"=Md/!V#J_aIs/i,3\(%U+)DN3)FpuG#QtmAE`%.#fN%XDNP4%WRdEC2E)bqRZb?o[ka(DSO%\c6j9$3/u/\l_G%!s0kd'_M1Q^T&"FsVPB3f5/8:K9(S6@3%3lj`J9nhf=@)6O(+#T,e9PQK7OZa\X_O,V0@8eLF/09X>2]Jh&<n1Boe6/7J9IO%:=]?b,0fT_I?1hR$-"NRtVpJK&6E0t]Yp;qK%-(,N>e8d?%.:if*"%(Y;(,"R:i5=6"[?q4-W-*L5W8I[?Y7.IWXE8A1)C3X0LgIPBKa^C>EL[L6+suGq$ub[Z<!f<)XE=QCaqWn^%8#UA2XJ0&IJ$jOEBP\R.NRq?u,SDo<bKOf@^u21`7MCkP%;YnGWuK13mh>6'UdE9`&&u^hN?mrh'@h`;%R[p+;Qc![5)QrV6mI;Y%j%,`p1;u?YWs3:Yf"[t"/tpZTo8Tlsre-3,/Xh+,^5(,!IA<qk*`4CGf#b&2X_:V#W]/r#TZcWU;R:q4@q6r8%cC65L=%8A\i&k9%M6e?[:TZ)h6l/r7@pbEN5V/Y\l;<D[&JW*%)^jM#.frh[Ei!9X/V-$Tf&%*dYAap3ZP0l``G;n!^Q=I928AZ0Tib!_U2!DKS)fG<%0N\R\N0HS7E!g`OC*`raUq2SLG)Jc?"Be0kIU.ln`:Bpm$:W%><,$Ln]kUGZ)GG`,'FfiAUt&5lVG:_n`s'X!U9RI>CJC#0G>`J6%0p\/8Kl"G3%t]PBJu52#$unm-%'r<D)-]fuYSbuV&WjJsU"*>jQB"fPNVSGVMPH9'98jC*[adsRXUqTng29HdH]';DbTd:#3>el'%'@bC(Y]['pUsU:kOsQM&a^*D0[MIV@3AT9,G_fNtEh/C$)P+o<o)pmNfWii(Gm]OiPu85OI6e6X!XCGUK^@Hje+%I=/J1&bX]([J%qYhZ?Lq'Z)l5Ri#NchUF>)eWqWG!mE3!YV9TF@]/79rk@f7ankm5dA.9),'&F\ZeI\`\,rl4(,IE!HH2oeOofi?L[2-9i$X:7g'0%!6W39Xg/`J6%LGU!B+=a"$sU6)OMebV*(EI#&4lZFim@qS0JdAU^8q;MQ+e1L0_r-F/_DfLnmOEeg\`ZPU35SY0NGJN<XBB!kdSj%U/)Ytc62jG6ot*1LoK#eUs]kAX4)+eJ;^@#BKAEB'Ji50OGrC`K7Vg/S35W,02'04pO1-G*!Gu1QtYc`/>#l)6dj4gh_PlDDj7^W%:YI&URX%FC!&Blp3O&pZ.%,NTPgj7iL*3ZDFfc*D?90gMf5,Y^EXV$J*.02_m+<'7"rt^T[ae[@Bb#RO3[IB12A4J&C/RA<[d1;+%b'SD&AHYo_7#W\Y&Jd:<.f>eK&[8hu$#1&78@4eIASH!25fH,*Q1Ud#&l]ScYIJPil;l>\)m$Bfh+Dt)4r4%PjC0:79u_$%'k:)C%ER\(7c(rc7-!OEP6u8<jHE#JI.4k\k1/`[6cgWEDN7E]EWG\s#"2gLn=.uR9N>e!'V821b5,PXk\m42Aa)B&QG.BY-d_&hO&hU?K%/,9O@!UdRABM$8DSi0Dd<'a4_/q-J+"QD(@8FM`Me>^!>7*2V#m<u(n%(\kU3W0[/!_;(B"M_^GU1oGf+u*)1@6$@b8"l/\V"21G%`'Q#jQ5hKG$_.<#IS^,kL65D?Tp:p7X?57!4LKD\JlMXP0"]]tRlX,%a+\G&bcDZR9STFq!@7!!RUtOsFd8c#iqX+DWf[!f6O&BF%n/I7"$p<8gW5=lL/Y8^\koqrdhKIIbAJGg+R2n3=\KR4Y+An6XCeA+<>nX,.KAidQilq]4,YjS?CL,[aX2aWkP$6H\*SY!gcD:G3%,,DUb5gUa5piV=P(a-+TPdY)sMr,i&g3?XncrnT#(Tl-l)6#n;MKgbN+B(Sr=?Mq*8n#61<\&>tP<a^p9;1)Ym;L\<<XoKeNa<>A%6-hK\7S^:R^?-!$J"tJLnCXJ45S%6@0845RKN,=LJeHJ.Wq8d9[THr,3GeuBhPd>*8=C7AF/)I3k9_d'?nOU[PRu**-6[]7A>`8!%UocEYSC3\1B+="XU`r?h[:04u3?)5CaYJZ&=^=GfRU4X7!o'"RG)Du:$:DiN;@R*;4]iVSNm/9klr:33WT9_.D<cg(ng%sF4/ZIO%UT"K@)\m<tC%m9f83rZ.`IuV!V3"'>R2*/'Tt0)<NJNI\?:hN&Ohb!YYCjnS70\1iaI6`6S"05]dXui1RQ+oJTV>`@RY?tC8ROg/%n260/ed+i^kVa1>8U*i0Z5UiDHLM=(N3m<7r>oY(5co-*8*?*?O_hC?<`>ZqqHO-#)WX88Shh<CE2pX%%VR1"f<ac&3%Y6OWu]QY%jkLTgf`%_1nUNeMZVa<43Y?e_lHq#N.Dd,3'VsNLL/7j-HSp7dl]eBD7fZr(.R1\t04mI%/C_`G$+ihR]9F$M9^#@dU%j7H.Y1@G%2^5ANVl,">R_?U3+`!#r(O>!p"fW+[*N@s2`71m4\[Lh3JPNS'02#Ip]!nOAEr6kc,@#DITKHC1QV*9q&5uj&7*/]a6eJkb1V)BK%%fEMX*8o5pgYQ@hT6$s(WVKW!s6Ylfk82K=p&"CAj:Bf0s7YW>^KeNZi/`ZVB=I'U=/S!lh=Z]p-K"goo&:"*oa89QF8kd/gVq4j%:&\5eqruAMl-^Sbn'<ZDhCPi!pW_dnJ%E59^Vg*,rq9cO^\cU3of'XTr;JQ1GkF`0Sq!8:I,^WE4b%hUI`#H98g<*p0:1Gmf1q@b%rSmaApUAl^U%^_G.&MK?1VNSQrq)3'3gTBHgW+m>4S]hsJ,ZXjg$S/&e(%[dg[+d/>DMd02T/t+c>Ppb+&hXj-Qh+D-JLB6@LW:l%c(=sD^$!/p#k%-=Y"6"U:H(Lf\l`4./[c.\T@l,OD>C.I%m6tr,P_*,j5TiGn_]sH]E=I?l1QJH;mUU3=._+[5J')Wa'sR$..;TT%TcfhA*R2jgj/7e9b"(oInkiXt^V2kG4kldno12'nD*ORu$sAtSbsQ$^L9@"-]"V1\/:Q;"#]c!pR.ht7OOr*VDU'#I]K,r[rqpTE%6#\]s+Ll_%^=q5Eh"U+FMjr2Ml^R8daER(7/jI,),hI@ccog>pQsX3L\Gg`%4(KjhM%5UJ\+SRl5?tjjHoF)[UVeq0@BuZG1ce=*%_t;;A^UlK0/,J6YfB47MhIYE$U$S2fZsC\2*n0=-N?6R40o[7'kV;Ija(/P-a#%<8qqs3R(B7KA]RGA,pA3Bh%Q(k6p=HhleG#<m%?Eel*O*uMco6)qfj6bU=`BVXDYpVp*^%1S=+3r1KT/Pr"LR@)IUoOH>qW[%\o@'bnk#(N?iOYSXh@>WXDkBC]%I!Wg62("4*9ohk%^U%tEqVAcEMq^<1I1NgUpGAa1g:.r4`aL@Lg%E>Wbo_C_^Y)7.ott\a"->=LmE$5]H`Fp&:H.`;cPE_1:'ZcRGPAVjn(%;r*u8MH%J(h7Up'<3*oldcqZ$s8D]fGrPL[2"[eUZ&K54S:*)Eb+sp!q+;e,'P(5I"!b4ubLjBBur&ch;YZTBC1<glThMWaBHE:&X*tQ=%Q;%pu2)IlLna"ORcr_\&E.9J1%)JpW+NrW\ATsj1Q0!qgMqnE"ICeq.XbpN;K:D]<\EF)]=,I^d*C!%fY.aNW-Wu67BH`GLEkqHTRnd%m;C5GVU:Z72pWg0pHFC[H?4Q4rc3!??jqCUcA('g40-LVc>S1l4l>IRIBC(sIlto$5b>mT_D<e"T,0H$/9(%Na:&s!JR6jmJ%6&J%q';SJR@,e%A7tI)k1A3$Z^\qnJ$qj2FuGcL747'/En_IK<rpPhS)iZWb*[hKjfpbBDpLWWi'"bl`rWCbFlV>M?^qT3l0a65[s]-;%5)M=MP6S(Tk;#3(Da(hK^:=/R]@bgXbPt!:UeqQfKG]"9Ps5An)FcIR7EiS2c8OHbl1=N?8BC4;fuGXdGc!X9GNk5CVk/,=qs<VA%XTo\]HWCNf4\'X5C8$+u?s2s0E.*mAkhTI0SQ?YT=iJ''VkW+DJViR9Q#XOY\mbrsmr!gYkO#pgo<NJR(j7fr1>Ru@cek@$>qI[8%0.n#QK91u@-_>]f5Ah"(gj</(:HY,43'@69iSsKGEOiTjrU]9/4]3#]VpNre=PZ`!(A1)!ai][ApZ'hEdSBrR/%ojKA_YLF`pMF-%md$1Z4=BTcUt$G8/cU4M`ns3V2.YinQ1G6F\F%h'#M[(Ih;?<.a7,H8Guo1:]4#DCn'3R="srA94N#U<?Mo-GgEn6&A&6pKRpeG#%2a0Smp!r&DHR^XmiFdYS*ft,>h"g#@\QP"#]QGp+Dr7/DT)W<9@.KjM.'VUb>[Iun+`u<GK"JMD"3gT,BB]0l79K&B^@s;1l`CTG%^\o$8hQ$\Sj6Z-]jek2'(!6OlpHCa(D&:$,#FlsU2a+k'\@qW$j/8dZ6ur(2B/8XGYKeeVnB)Qi_V`i&U0_tP)T4FRrTj]`5n"UJ%c6E=!)T8t5Psa2:=1@Wkr/0'U;jI&'&`RV#K\-Qt4_GtWJ9BOjQ*H[4&DO>"*D_@@B5KAVlZY9"ip6go64=^KQj>Dn6B$a40/X?Y%]\Go2+gPrt2<,'8KGZCtS[W>-1D+*;bjR%E^T^+^ZPS]/0jkDO^QBTg$F)g@*(*bDYRl&V<SPOr]S<3kNV!/EoDY+)&+%->J%6%O%e'%Lc`3ed$hAjr]&oSg)<S8IR1B7s?p#A\OaMGAnoI,pd&ru]H9Oec5G7,i!<=5\lUE0Tg.%j$1opc*KkQV<f!B&#tB9c7#jMFbV%NT+ZcGT+i);*9itBbX?)-_AI7a.&ud^[B5qI-GRimmd@ng`]%.8GFZYaS&Jl46125+g.EHmC?Rdcl\%=IhfFVI>6sXhY_?lcc*j6%(T5$]H-E"a-Q^=WIQ:th"PM&Znp9=N!IJid`VJ'=`Ok`Bc/4j<'88V$:2^Yu<(n+;55C"@cJ]]a5N)&N>=UFi^@C:'Sm1j5GlC&K%cuYfY?j7UEn9#`On^Iq#1#Fk]`&RO14b<W_#=$,`hn^rm?Qd8d=Y0U3k?I;1h=;c(g@_;UaJVef*:h)'SPRcW1lAI`=aMMDIolC9%`f<2=TWmH"T&$M%edmfPq'>miof;]9X%E0b!&"-FF"l!b/FW%s![_L1m;j,JgUk0K@A`C;]:6.@Blmq<c)s^1SQ0:"2s7[=0,M)"%1r(.][@nYZ?Dt4aER<H(la6VAh=%h1A(B,&%ZD"C0k.[-Z$abO_8_;m:,(uNZ.uG!a,&ip7l#NG@#S3J&^)n<\[N/DZK<iQg!nmg%Zg>[[j\B1n3sl+M;9CUc3CYI$mffaJ?b@G'mW%^X-g.;_()Ie=^MY(>`VD1UDrLGocL<s2m=STVIg9I*DpR=Sqt+k_^V0bVj(cAI%?[:SoFo->br9<>aR/@%hYCH;,9!MZ%N5?)%Y=sZ\j<[jtN,[2N-]N)n<sU/_12'-NBf@`BnM>ubB>p+f8bh_?S&OCP40[EShgs'5%s5j*hJ"0kQ/8i57=hO_$qW@Eb@h<edS%eeIl*_gbVuLgeq<<(OGG!%FXuAO)X82.X=BrX+L4N(<Xj;`B*1iA+G_-:c\Ip.tfu-)e%V7/s2%AMqfJeOn(^I+%Z`t+(a0Pt^A9U>G`ZBgIDkars49H8Y3XZl7`EQ,cS)NO$`4u$L_,BbeN(F+)X@M^840k(qP!P8o=K!>[a%1'k`6Z&>0XA4GopbrC%%`H,^[rD,-#"mG'Up_\@6^"gX_hHB=HAQ@j\I0&Ap"^@QicKo%4rdY@AYpB?0]"Y3kq#aA*f[Z/_(NO3f%9<6/VS9VKSlKmO.p4q,gNEGeNbB?<2NOnI:Apma'fcD4g1K`XqC2=,\RQXJYj0:B:HE>?['c`:!):X4MHMRO^.5UqOS(I+)hd6=D%IPbNoR.g4ZQ5<EL]_uN:Z)i4%%)1UCD#\J.gJ'H!%.sSk)>Ii0f=-61ORCdrf&'UjFT(X`a2KVcqT\$e0U]L2g\?+6gXfk\J&XO`%-mO+@f&97frHkaOUE?jaIZUi-2d;^>fCQI=ns\XJVh]QP!FpAh(mJNomX+M%A<1gp'Qg!<qS\#5A__Gm)dklpL\X'2mfO!^haSmL%l*E9<,[bh%Lcn0.])>&!#'>8]!d;M7gm`.C+ou&3)nIQc0HpO)TE?DOn,WL[p2ijNbNOBB=Zl?4c0<pKl,@#4cNiO:nl+<*6JHtK%OdnRHk/^K!oGqa4q;USdO,N%f`IEA@>b)<X@[Ct^HK8piRc;kqbO:#Xr\:3"[Cl7u=_g+c[e".4>[>+Y4hj/7K[lB=!T*P!q8JG,%l.s"1lS>(/\m9B:B;^]$Vj&DDcVD#d0[Fueaq-Afh9GWSJ6brp4i79.J!&dbH@Uitr=#5=@XsFCf;&F1kJ9$:Hu@38TI.QP6MVg]%a\SOHIf=EiXM.K7fardT=+.mSXG;e9d6-/1]O)Q%L`W]h!a\,5d?$*L6QT)?lYe]3[uP.ioB$Ypi3XNL,T>&$Q^:3a]?O1+'E#L,%W*^MM]fdHJD_Pj8ZOqmt5Fa#6qO&nR^%@ZrZ.8%oNBYhT1[U^I1&=R>mPA^hO@GjVoU/1@l)VoeWXlO>TC82s[!b37dkj*[UXM%\%9r$/o3__\H<>bH3S>IH>fE\>=hlj6@rc3'@5hM#:e+6P?n#t%oW:)CcCO.-O_/K'$`gZSV*6$3Q1MKW8m`2[.`esY?)^eEYEW7S"%g4(jLn.Pnq)NVQ3CRr5]qM1[r:=&q=h1SAO+&:/-Dh%Z%&=E(Lm;IV@pWg62IBhFtn'1:u*Z6kpS_kX3aBj5#6O$<_Y%il]K)'iG%q'8'!eV]]l_`uR8L%CWSV-`<YUmO)IT:HHhf=dZGS==tU5GUVjco:'E0eM;_oI00OYDGIs2o!)$Y5f)PTp?dFqP(Uh(?26]GGf)3%JXk?,HZTeeebc&4-eruq1AEqh0CYV>dr+&Aj/;"2E$V5=T(^Nn04NQ"_RJV;H"6=%Vr_9a;)7G**R`hPp/CRpG8?R+pZS4kY-/U.%%,TM^G0l3":(Fbn=.^<]QI0/eR)Lg!/<A26f<R4,csjQC=+5?m-,('%qb-%QmP%H(busN4#l"o)*rH!bqYP@'d"&9;ME@/1\%C>d%9a@ba?#Or8D#O7.>KX+<B9Sm5T)s:aF+4#cE\ZWCot=19K0e5I<G21,q,*LGG49P%A^<-t];j$YbkeL-ZG@/d<+A#RdYt2Bhc/;.%TW$mP\9;@&^4:mnKA$9F*S@-`IlSm@]SQ%3^;.'(?d]1B[[uK`8&=K\[$;XF`L!LLeFqVnSJK(S;TlK9VaT3!8G[$#]BOaU/.$K#%g&)F'rHLhmdp>(3(Y:Tq^2"t\im*#cVTT?/mbhZ*j*OQ4%X>D%-O7<<DUIq>d/dS[RX*miI/aoBLX3?$pT=XK\C%Rfr:El"Zp%u,%lu4c]Z#^o.:LE68e:!>_m.*d8ln14!5!lh^(2^T5?fFH1UIk?Jks8jY^V*k,*1u+N%tq/;CO(:'o71u=C#H.^Ckq7hR/]&URHr],%I)k]'\iT_.O/0W#i1tuZW@'?aQi8u8dZa6bH+@Bup09$RjAKA3kta79=!-</3"14ZGkt_na3GSu0*OVNDjA17@g>,`B<u/>oK^uZ%18q&d(LOR?EDM</oC<qQ0CMQHr*E_Mq.BIN;nk?(HCMW2Jg?,92h/BPq>m%Xdo0R-H+*M0r2TZ`op63;#6!i[DjN[q?W>q"l<aMe%];hGriW"E)[JE9m4o)gl&%^-+c;*X,B0qOtr(u!>Y\;);a-(3^=W;)liJ5c>)^g+sX`A$ohgU3-r,;Ah^OYtB`(p:oq2bQW-ZANT%5?=sKdl;SDQun>Z#IY$-jK_R8k%ijL:4QNgE6n`#Ok^u,*e$07h<`r`BLBC"Fn*8ZcnO!.#;J-]*G"ESakG%2<:?i*hS=lUmHsOa%hL,2-V[!/8X#ZYDcd"^[rcij\JA#mX^cK3/r`[:_\%eF1mGE7TX_l_tJ&0"05JY9Dgg'd`bP1Q#L)U"^=RDS:c0C:50Z_LU^87G!%IWg-fdD+iOmG:'V3e,>b?$`H_b"TkBZA*qmmh]VdT=gWjnRh=GH9U'$%]3RoL\efnD$P.=p]D=k0LQii>i!>M$q+_<4Psq*q<Gul%M9$rek?6=[#6u5QgI\U!/uDZj&!TToeBL;Kf(\U7]5G%,Jlq`>+;_`9XVTr#SV)2Fqmk,pWS)V03oBr0$3eB&aY,TNDpQ71T/9ps%&Jmd/%ID*cF\Q[+V[Bk/%3*b13ENOoWjVr"[OqILQ2X/-*]r-b/W;-uam9YM*Zg`cErHHJ.,=%r^S:C\$2B--hN;pLhR+abX9]%I%I3%e^%s#Q*PRblX>c1T)gOn52Xruc;7D0N"fQ_3.7%N@`eK_sO`t7%%f4ku+eT-[;D?)Zu#c<))nBPdLR990U+QqSsXlaW*R=fd-%$nH\WT:f:&'*JbeFmoPP?eH-s%(:$L`.%HL@OQ*SU#]7*hptJ_0,ahF[GJjY]u\nXXVSkS&p7u9Rp.Ja[5nQaoi$K@q-X+.!gH*s%gWCn#\jSf'F@[S^[7LVWK!\)S/FC'0VRVZRJMf$^<Nl_52RK;jHD_8YXf%.V&7$j\GpZaZH-cU'ihU^BG_o@f;G]7@^c%nNhqS![%kZaRLf"f;.rIgH%CIr6VY<?Q6@:=Z4Fjt::EX&rm]rX;O/^'QY4j^P>nP".8g\(<Vo$29)r@U4umm?KjKV0>)Rfg1&iHaf/DKU(2%8CFURDr1I'Ukl"F5md5lR&:BGJ8f;9/t-A1Al*FN=?GEW,f(_/]K'YA"5Pm'+EhlPrU8I/eiGJerp@!H^l'>L-Eh69cIH@jUWB]7%#DQ(,JrsGM@jeUhc[P1ri*5No*l&cTI$k`c'Q/Q4MK&PF9H.)MV5@O-r\`CH$o29QG\QB''0ngi^e64r?p(];8;>EC7T^ND'#t44%a#*t%A>TlF)WI;>/@jrW?L4M-i,'a9><A?#&r+Ia/-$#c.)[q#AKPSA'_f1\05qP;U:*iCgG#Y]cXb[ZhTuOE7*QJ"]PPr(6t4NJ%=q<+p7G?Df^fZB7_a;*iFeD1>73b&98@6Lm.6QA+b,hOMo7fNC%)ZcE%X?[F[V])j)&.>M!@*+WTb2NO!=)6iPsL$^crQ*s2\ekP%0PVfu$tSH8*jBT.N7d)a?h^KRY`(/iL)-WdL(T9+5OY/LJa][%fY4Sg3*X>WY$g=uAoO<CgNmmpi5MUp\!)mA:HpBWQfL:F`q>31%B_iM.MGdR1'kir^iccjp_#XPb`q$RZjNt\M`Kl0G%)bA9<h^qsWC5`<R.3(r"=W[AYm^RW,4Jk)=n)Jn3_MQ5K<9&[$,aK_QC>5N%:d\K%:bu5JeGBT=\V[\Er'>,QQM"PlmNN7b2KWb/G3DWiY!Ukkn?!.gOM+eNTA$k^,3fMOgf8oKQ&.64f#D!LHHMuT)f#;_^SsKq%_JFEAAjP8TLP$4XXaumR:os2S5])\efYS0Mf;'K,A7ps-_W0F\l^pRbd'b'r@A,tj^_-^$J*'C:"(,46j1$_iWdnI()V\1$GAVru%L>lfI;C%t^JEp_t4>%_S!&iQIposjrBeX:_i<0-BRnd"e6PSKIbaZUsC'99EVBV.R47YFr4@kG3KdH,t[ZT@]b7g;/;"*i&I\5D0%A-es3\4bg1eWX<h5pb!\J2:R``7VWk^(0V4@rWTlaL7sXCR`Ja.%6=<"Vu1C;1b8PU@2:^!Sfq^d_LTkD'OtLKZu3[ARc0M7TS%N%^*>D9R!FcP-5%R:MH'gQ;\fMdIjY%<4@"qCDU+670gVg_?/%mSX"KTUCeJuUp)Dh<LOpqo:I'-?s54-PUYl*]35+7M&bp4HJb]*$%SBpml^\[&Q2s5,Zcf2Fs7Ue!Q7jM\7@R_VT6t/V2Ajg)t,\BGR7O2S6@R_VT6t/V2B((fuZLNpA8S]H:HLa_JSF(iHQs&]NCC17A%k9M[Fbjn["L#-%cok?&JNFu7P%)U)0FdVe>[<64@G<h!tJd[.`CAR\UAkf=of]tgMkK`3ZMc$V%!71=HIsOA2KW[*k_h;%)P&\^#%J#'bGMPWi0cVGa3$^Ps/!^*q1d-WW<WI$sBd0!"<6YToa$S#9ZYG0Q@m*AHO(VS(q(?8ShK?Y<3&?puIC(8a/=Pg6Ml-`6jd+T8B%8BZiU6rRI,`t,CUMl4p.Cu+6O@'fYG#i>E:GKoRK/moNO??+hmi4cF%BVLJKjX.boYSdXWU2,^NU"PVn)6p+MXSZQaXIH[o'bLaW%04kR>&41NE+>S_jK?+NnEA%S8Yk3=Xd=Nbe:^9_9?um'^;4.h>U?h0ApG.MY(3<gMQkI_U:\dObYIkZn7Gt]WrTSTCj(Rc(1(gTH%;4BDUo"<6`D!f5d4qWq,_4m.'Jc6mId\jq@_H:A*A27ma(FK)-AJNfLm@BgY0N/4cf*uX*YUI>[=Kr:$):_Hs@L#Xdb'13'6$LDg%,I^hubFN&gkeBCK>95Z[%"la7DL2e?lg4UhKoKP'gK.mcMX'eAB](_Ohcg:01<]gVEYlD>aD<ZS]cMB"m*g8g@jZj,i]@p]\P[.J%JXAKk6o>Na+#j.F_=:]G2%t="aQ2.0gh8FBeJTdC=RI3rj=$5Pec0,'NYec+FMc.n$FX05oqj'u]upa62&XbsD;8%8KZI*@Yc-gB%>6>[m&F-`nM>aEqjODl<BH#@jfZtCF@V+.Z(/H&c6<#BCZG<k;a[o)P19?/nS6I.0<[kf4pl9&37$YElHSY+bUhOX)s0T9PS2FOJ%I\R'D3l"WSOW>dQFt0=Efd8/=?Nro.POt3%.8eWNO5pN\pB%T/6>H^e_SOgN1=8.d65jLGQ"H4T"6g,o-6c)c:]Vc&l%qS9jDe*8%Kh;gtVL=WKd\\SUg9mJMI-7c_AbS=8oBGDtp!"?=)+-PsW+QP3N1lgte2)i*`_atul5;rPA#O#Koo,T94U^r<O`Uue5nKW]ekg#C%a-`A*=t=3HaAsRi66+i[_Bi=,Y%a,jZYN:_857;sYl]RTN:03.>Tm>:a3"2Gh3hIT]E0+nW>%%oG%dpn!)qX/#Q=n3#27pD:nn7i%FuiTAUKY%#qb[R9pnG=r;1lFmN2.(Z^#r%$pO6fYp6TduZ-mj4>ssm06(VInMZ1GTV3"eOYt\cQOS4MC+r^lb7`!TrCT_roAI^Bp%kRI,#%>h'WQ/Q(=7o%Y0DbSVC>[/gt(F+/\Ji=p!1P.P="2(o)^`1n.!H0qAYl`dlG$i%SG!1'`^Bf)ET,,(R"\,K'cNeCD]tp38%^NC:(=oVM'DrR)aDrO.#)m^<mZ0T2pmb,FGE"DHX%g?n2QNqF?(YOV?1^QaY)81"sUr5@1)`3L4UGp(t3ZIcj7W6um]m0U(j49n_%DFAD4o]F>j2e"GURT$NKV#W0a:JG7$jH<Qg%Es&*Ade.bM"UO(47/mkkf)9h!eTOC`p;GXaDL36YAHo2lIdCTGAFs[g9rU%JYesJ%-(I6sh7J#V:-P]u],!=6[!M@Vdd&_::uTL#-6!Y>N,Ib>%W0=b.rNADllhA62E+gChY]n]O"O=9E`$9^[AHaJh3sC(E08P[6O=3b%[#:*N<<,IlUhEB^Pj2MNhfd1[,OF'll^.%jIP8*g+D%e%E_fr$\Pg1hGH]<6LascVl2-t!X'ZVeZLhtS;VO>LZ;_(UfQ]`\Kq3h2%;KQ=<=GEEps$5i.\um2AWC9kog?cU\D+8&M7$^;QBge9TO"At17$^;QBge7VA8+Gt7V$4$Q:>D!hiK.i?q+[@7$^;QBaD"dI"!g4%.m5to2!-<JW7$JONMt857?tl?V%H]G;5Fk))H!=C<>n`208M(e4'&Qhdip3oPE$Ao>M.L%K*KGG:ZQsRR8lmk!uXnFCSFDnBM5Nk%OV<h`:UW6_Veah\!%DIBPV:BW0gnI8o$&,pg]kLQ'ceDDil]ul/HoXdPCX&9Ueg^Rp4S,;T,QTP2FU^<.lWR].gMWr=.?_)QHi1>%!N\Fd1$An_cp-\$ccPK+?ghAX!hq`bjj=u`aej9"hgOBC]Dl)&bA^\S"M[GdO3@YYFpY$<m[652o#7H:\kMNlb1.mOh&U#g,7=t"%PP)+A.1Q?!BKZ]8-.Y$MAQCiP#rY]\CeA^=#'0(850+W+-<b;HNYOs7$qeSgI56UAQVkPkNGfqlNKCc8?b(`X?R_T(f*oFmlh0?F%^Q%a;#euAggC&SijBUskqW?n8gE-4Rj]gP6kaRnP3VNN%/%7c1hsBD3?uJ=bc)8S<r9%R.p@GPu_/EVuhU]Ga)1)HaiUO.]Y'qem%eqbj*a55T^'mbea%_[#ZJDS..kcI(%NsiW]7DZh]-s2C+[0"$!!e]H'[i;T]/n&[(J\Bn>Xg<RsAams)i7e@L2noiMoCf/med0!<%L#?0PP^a[%g;3$O<e3^7&12<U`,a9R_gZSc^EqPd)p"C\e#&Y8lim$34]&`;Zpdb)n*@%abVo`kcPj+<_kY#G'(a7s+R<(,I;fbm%]WU#6jK]4UIu73KmtIh6=$S2g?*M.a,?nF!2W[&Hr_e;D:\n$Qh[8O:^GP7^qH1TQEnLY#S?C^BKeCe$47Y-`RSDu"N!W+KHZuY%%j_gk*IFlb')),l.D7^j2B2Bk^@,%.J@0"m,S[&DM&r\->!eqJ6f%lD<GRAb=.tHSAhRWb*DLX0>Gr@iE?jMLVYae47jGU2dbE`ml%m%dF3m^SL.B$dikc"=8:kM!AgCK#pbJ<<-QW]a4<;YOcOpZ;[#".PKR+Qt-'\[Y?$,F[PueKe'OOJriJS1a3^nr9[`=ROk0(u8(_%QNCi`H'"sPI4?9uelpn"2XT2jjK]56mGu_Jl`%TN^@RN>JI_Rd)9e=/p[2?*ap;un<8W0)@DN'2!M!sdk!WLm47>\lW'6C5N>pA)%qu^'N<:C/'L3$>WfESR0nV>+D:DDOZJ"(>19^OTE>'DKbba3`5aHg5QE<V>^VA7+pfAQ^H@AUDp*PC7BDI';\V$Cf^-8N0D%&FZ?%`cXG#AIig"o=`,QEiX!<i2ld#'?f6Vm=2W*rTt!/g\#l;]3Y_\RqA;ND50?f$#eG]i9gADiU-'0_:pJ]/Au]#G5X;8gM<01:XB`e%?'"LK^#A@)*P>[]LUZS,n@">NJ@FienFi_2YR5=#q[7=hrM%++;bM`Cbp]=l^tW],Dr:SsZ[m%#qMmiT+#C<HKXXHrH\AjuGl,\$%gO?WiD2Lb+dYu%h447pPGWQ8\%&3b3GWRCfm4u>&s-M"8^/X$-b:!i;"R],;Q=3<*+Zh.,<R2(265.Pg/"cJ&%]1X4?>X4'in<<-%'f4k62h&Bh9X"l7#)`^N&6d]MS&'K$Ik9H8hFdgsXa\G\+M@3;*n5J=f?NaV3gd:o49%9?_@:g_l)PGn[jAVu=5f_=%a@;CH@2]S%a"4:18[.sr>FLHJK>2k?>[3o8*HV.u*5DFP6,jnZ0un2O#VpkTEVuEgpcZ[fH]I.\*67M.mOAQ!Ia<"-npAf+gC.1Ep]3jIOK^p3%-3X0@bQT<!'dNDVE!cX>I3L'T)k1C.#T4$8]Oc)O=p9hb"35-(l[]\p6qrg4e\B]kA!7K;*M5b)>.1DEO*N9)K]s_)"Ms/YfDM24%a+1uaCV?<1kC&\rOYfBXgCR"b,9c1jZQGW`;AY#l&Ch%PHPTgL7]^#kTJn\RSuH1Z:&e6fH]g==+u6mu'74eiagdOdXFiF2=c30s%2+9nA-HqQl..=:##<U=_<9c+PDPuCV`:NcdOtgJmEs]TB))YD*JX]^6\k5dm=S/cB8#nb]=fX;k#0l)"iWu!h9;2`:J7bolo+PYu%_edb-et#SmLUqFB2/>M&+c^jBUG[?u2Ct[2hWq;eBn?HDMKQo5\]VrYd,5r>=\\*Wi%:p8ENMmn.nVOSXVV`qj0VTM<E:VW-8JW3%HcLJ>g;N9"fu<dS8j&:HCMgD"YJIRAS:mme2i6FKXi1r&p,b#M5o_;/K76H-=Le$pKXLE#\%8hkWJXgH)[UNXOo8BV;/QefZERgX%1^LX),2n+RO1h59nP$a<&DPjP(R:o2bi^RMM#F;IA;g8l.1.]0C6i@ZBq*O3aX1r?(H@htXQqkH_hNQpYo+"B-sDIKg"XM88MDLQ%YC]U<l^4a]b]dSZ+LBHF_ju5KLD^#44ZU.r+k@67*?iuG@N?WC&Rlb(ee)@3+k@67*?iuG@N?WC4bHj$h$(*YJ'Af5aE&p*]+g1)%mCYF/*Xn<5^/pIbRm762FbI$X8+me*J7190$6rEf-:!d$fLQ*e0!uiM]t'GGS<NXE]/,?SfEJXk1E@]\%3YrTcGJBAb7km`L$I;d%&SlKmaO7TT4[]d@@!'3SG<ZF.@keR8\T%9aDk5_aX^G+1r#E`Vce`lK\!80GmL/5!BZnOBFb#[@/-\t.ZD&ou=f+_^U;^YtmcjPP%cb<D5GaKcLo\?%Kl^_tkb!htR.MOA+J7E+YUf?,GIlG;#:Y-ndV$%KNdJ?.:8d\"1FqPW+$<Jn1=l>BbXP?3C`@ii\@p>(O1G&p#%QT78ag,<&]/g^)\=&]k@heK1s1Vh)OCVU63\EGmiS=n/XXT>tGOdm>r>$A6t4dc;N/Ja$!\P*BbA$sj>).8%W"1H<:9-&fX'X1<&%"Z?J"?AuNF859VEVPT[aee`W=Y^TY.NeT7_<`;/I!SYIphujd>'7OIX%5^A>L0CA2,7),I8E!'7pkVauTo[&&R:N+;GS1$`?Ohi\%1,,1K"1@;&:bH)%:4h"[%e*>Gcl[utlOpeh.jufOID=T'E>!h#f9(sCZ&[J.Kp^TtW*QrK6NIop-!6qfYA>g@=FS9PGiGOB/<5]T%XeItA"ga;*W',VT8<^hI>m[_V:<Be)/M6Zf_Xo0H;PlC;NC%PHHRp+LiAG#4$DRYLJJ7.b2HUE%e;uOFUTtN^)$QA"c6u%!KiX]:%?oHBKCVU63[/-?s:/GSUomkbLfMg8]-:sad:.a`X+gY$ZP@kD<""h.iCm+n6JNLI!1c5$TMa%sAj3A%cOFBGrHjoYXG6E:UNR;qQ%n6qlec4sr\h4Y(14YpkK$07d)8+:H0M4J%o&EaHDEB\H>iPWp>,EWZ$Z\655\^^YrK?8A,(oq_,(P;"Ngd]Gsp+5Bq_"9'1!_;CH%P;iiikJe?$0[KR9>bd@@B6`R;Ojf,;]WRuJ7!_6tZ-)5NR@j0AGGr7XVDHk@#[0hc6d1IAC6J]cO!<9a@'k$Gq'0:O9d*G\:DQm)%9\)ktIqUX;Q3:06b`*:oP2+LV+Vu(d@("O;).7:@e_h\jY37hWS>=G\XT;_T+uqMu[BsP^7AN(?*Rc(*Kn<HEoj@ukTMC+QA?\Tf%.l@?tT[!V.!C=#U#AL'T6E?rN"b7UX!S.9[4@C/m?%6B9"13n@i$9$i-H[Z%PGDok24AfRa-mf'%BUL%OUN)$M[?e]7,XH0H6`qm%OJSVlq1ECB7Z#[m(soQ:nqWnY4NKd5OF`"8$LtLZcqp6#ADBDl>6ml7cU,oo4OgdgL(+U%W(&JB;&'[$(DY.RHT"j6r,Qdn"FA%h%OXulR<'q>j2hEjeS=n%0lf"'ZgXFS[T-R*KOsFUb6eNm37^^7AJJMPo[]-K1^]^l9>QUu21ht+#RSd2olAU<f:hQ#dNP[)HCG6]@%iAKNr)+K$M!%4_O_0S@`6L:[cF-ECp)lFs(g5su9N.J>?Z[ilu"1H=e%ucHb2[rJF3u1MDqTSfuLp?sL=D6]s@]Znts*rYJZl?\c%FYpkuBR\LZr2QOf<CcY]NojC`c*'0s?Ze3?l=bXsdJU#>q,KrV?WK\g]^HG'F&0V.4^6e`%p%(6$cN5*&hJPqjRQcD$HOX@<rH=]%fBJd?f4Ki<4%(W##J=;hc</0"a2sGH@"@-c'V:U@MfD!>j4B4\Z@=89_kD3>bjZd)l0?ZS8uejD;nB63"!q$]QAcp[`!^];*@%`E%i9eD&H<-ODRt2q>k!#ZC'7m@q4dgD#!RiXB-^'=N0Tp\FF[24!nXWM@,&rAEmj550_E@aVW!%k?/gO.[h2G6L):(8n#ZP#r^]K8f%DCg?FW/gFr%-mI6!FA&;0$mgsl9l8LO\B3\il2bNA?m,dB\/<qi<*+TOg@TNGgpFLksKd\o15tX9YPfi&tN:l0ZU><4b?5^OE:%Q%?jWcLaJi<FD4/$[kDJpF+HJ7S7LpcHFI4Ci'a!orF-UlG&%dI#`G8Yo*]V$]_:rN%3QuU3-CKQhc<tRk$`1SMQQ$3-(I3#O`*i.^%(qn5@j9uml.QK5r]'.3GJM:1q3AFlH:]oE:]Ti0MF*cILFp!YiRTM,4!/)p>31c@GQc^k4o&oj1*\n-;$DLd"`jkdI>^<M3e<)&[%=0+S45b,s>bof7:$!N8m3]2aaJ"A3f"7ZrW_3=+n7#QX@[[;@_'0f"(,Fu]K&&XP<B3g[A<L*jtpQ4VP..Z181/_GE[=JfKG3\Le%!kW\:*(t?'f,&6C8OYrH.\MTrI'?nM2q4/Z#LEl[$Y[l%!Wts/e><p\nI:S5=rgMWq8AUpeF^Pqn0=d<@s(>G^qrTu`E*p>:TIP)%Qsc!bVQ8PT(f3e]LXgs<WeceH)tAbCnAuu%Yu1u1p@3bA@^;--bo?o@4t$IXYTd#V6:U==5-/lXY<bdL/6IM9#&Hgf3"8YQq=iCX%Ba=/&\rqSrl'P@?J=iYB0lul!5g0AcpQ.aje^P3.e#FeRG]al<WV](br6RnM%=_aH7AK!O5&0;<Gjhj8^.PI1SVp^nqYMc%K`VEY%LNZ@9k6d`FV.Wc`Jj<+Z0*/7!LC.WuOB?oG"D\BIUo_.;.aL49es2>+1SB_IV5<A7_p1^bX'?EB4FL0KR:7I<![7&7Fca`a`1X,Y%PsPO*;BCYjGe[=Z=6Y:GifR2OOd-12)%QiaAJE=_20)fQn&b]5\'uHiX?@-E^\WTg2R!+%NUf>Dm=>7I,"ELQjagg1?DR0u&Qb!T%_aI%Q9t@8N$LncMda3c`"B*mSb9)C3%3:QM;[6L?/u$;1W^rL@6?aSBOjkic,SZli;Ud0$`&A/3qA$l5"J5-!*)T'j^d)%%VEGIs%X=/uVVe*7>f1UM:a$RpKmY&U3/r6E2OHA>:/kK`p6<S7I"T!SZ,9Fl0?l01$%R6114V.VQV0[:!h,iE0cDC+T,n<RZ7$[tN39bpC%OPk82Q#fq(LN!&3JbD;j;'.7A9)f!XBZ/H.@Sm/eI_2A`S]d;u&_m9ia.b-L-fF;+@LXO[XG@gRou>OFmRJPTU._7+oeMBcIe_n8%!0-+F9`(oOI+-SV_D8t,;XT<fW*8Bj:R4V!-rK:."+Vli,8@<u8>,T'OH'*V'a"TV+amB!m,7u'#Y;K!5+)>pLXCMWW2ua=7)j-1%g<ZrpX;90SJH>Z3<XVupY\HU@2!U0#c6p?ZUo^IA?8GF8X:Jir9nJ(CV*#)l^)`dF-5^9G8](gA^dI?"GYtQb.?s]AMhk0>0?X4n%<IlcfQu,5p_*c8/\Ol?+;",is11E0O<"4AUiu\Yp@'9SM=q+6EPYhWcIXN\\B(87#0kf-9qt9iA?`28c:8*0.6N9*#rnh]&rGVXL%d!sOgFCGXA6YJ.GD`E@J+9$#:qr5rNNugTJs#g7e,NtJT3dLolIT1Rq9qO,T,A7kjKh'M)^)HY0X$OM7)YDp/#lWZUeY$9)d/WWk%d*j%WE$H['Qn#s/]OhfCe*XA9-gZ6<$\uP<o?4E:#(%&r_(Z]C`gIoO8DMQ1Z8@"W:HmM5g73HR49/>53(=S,"*b1*(Gi;\>[0%j%YO?as)Ase]i!rC$#@MiY6Ct/>=VQ]?AZaF3(QOo1l'SD6aBM>%fmm^ciZV)^A);#%<?aS!3cA&UI/F2R0/#FbN`ZQ;>n.RG?U!pm%JG:9:T;udd!BW=IN&O/PTbSq?lEEn<1'Fc,WN<\N/m^bbA,AHi/+7e:1'qI`m:Vi:`FC?b4#Fb6X>Dp+Ff#jlap3>^/p-bgDGBe*%?RBl4$5975$k;\TkFkPDo\"LB+8he5r9tk/%'K<rXt0eV";.uZm\QZg+$r+R.[i>sQq@W*H3qGliY=0hlAs"Vi[JWdd-L/;j3uW>%Zo)gAnTUGMYVMrG:V-FP&sud1$gd+6>kF^YnUcg/k_dnp&MbW*='\gh*N9Xi$[?t8RCd!Y'WFJJ',JpA+4n@lCbPua#bD6!D2ir$%f?mBZ!&L-19f:%p^JO@:1?).L54&dm6JEqAIYjn?n]>QK^Z7o9Yh"@qPPX3a#5C_a6GYg+SD4Ll_0m/YEW4ZBe1_d9,WJf)5cE4,%JoPdU'^D\,hl"B-"ILu^krd_KBeV`FY%t$G&iF36r(Q0_BtSdA[8C=CLmZHpcqtfbf.8/C][7h[\r8p(Dj[3@P;%+Rd!k;5H3n1-%J.bCYT?I"#BDT0ih6&`b;AVm7/D76[Js!)YT5gb"W\e!9G9WoIqFmIeBOGja)@VXg$dO8Z5;JZ8nPU9(c\)_3.kg_^l'o)c.)K!3%YL5kR\tgqmKKOSf4B%@$WXgJo:=d!I!u!K!^qN"[_'ekbF`ad/;4r"CQqMbl6(N-I>m/k,;PeG.lQT"FM+S_g/s2%3'tK&E0Yp<i%VIOdpf#?,>&a",(:ec+h@JTqaYN5NSc^T.GenMVMlGGI,B`Y)`')RHPG9-T-'#0qp#4UN6gE3gqIqCE>D;WoB\aH-bO?,#'b4i;]%lD.XdFdK!*Q4cFEbDet3N'QR"?BHi0C>`:<:NcN%<3]<gYK<ZG0IJHFp&WluXdE6JNUm\BDP^WVX=^8(@\uCo@\/'(]b@7PFI@El%58]L@P:4B/3sahqs&6823G(u_EJl0RQ;XS^["7?gD_7gbLZW/"Q,5p8W-iH:s&p%EnI&%bUAm`Yesff(C:/P0d6D"D/nS>Tel$8M%*D@+lHgRQalniJB=3?)E@WCqu"'BPr/jtTBLP#k.G2,&fpcVF&pp#U(E3Q#jQ6(T$!OX^m7].:!@7(;bf1sLS6>C!W[8s6^_>bN3%jco4(r/#\ToG3&.rEha>Mhc>\rOXq5(3J8KHM"VXbX<33%8\/!"2pqj8r3`R\g4YMCpH+)dm_#VH(<_?=74ThG)pP<Yr8utVnX/u%?.g!TfI@bPCA6%iPr>S(.P[6X8^^Kii$;kH"TM@UWC71*WmH_>%8/fI/U.)%Lrm,1eNpl5JI]<PTAoUlBZQG&*N$)5>E/Bjg?rme%ek*9,<"c5@mnWL`/a`?u[5Tp02<nh[;lHfb\(sV)q.0j6(\'HS;l3ggJ9VI`!tB!CckdAOf.QCf`fh$grjK&^WPs%Y>f#\$Ne16R%h+*.f%+o\/qlSH:,E,30?0QJ^o&#&@ST;DZ2n3_3Ltubab<ro=:BX"W)(F3TA'c72/f>Iq-4fd8$Q`9'8e-5F:V:fVXu8ZORF"6b%L?]9h["rgo3kYI`bLijP\eA+`r1CmmRVUDVeNY^tCXiC'qqDZiqG/AHAo78a[E8L40NkB(!GHc*k[.-;lD#:(R#2DUiL)$IE]t:h%\<.l-M$ic7<k++4%DfZr59LRJ#f8$'P+B75?BT%]_*3sO"iG/Xm$"=C[+qU2F%HM*hEF"N?2S0Da4Eu&MN@e-)2?J-<^qABGkFo%%f>MV-)U$8OG@6se/hGhURE"$Y/JH%QiSpD1#lP#q*U0phEc<rlO(!#WU<4R-3_GspWX>47iXql:^"`n2%pC'VZDHgue)sZ3d/Zld%]&<Z>'pgnRiruqUJI:9H"XlL1Or!Ol6AJ*Q@;n=@;lKE$[9?50-GYQWcI&Pi)=]rL<9-nG$d[nL,LW.SJ!<r?LtHZ7^]8Z`L\;]@%(?nnf%1sXA/lpog&M`nI-e'KuRS0e<:of9BlB8KJ2t/U5">-l`'N8,/0cWPCd-?rD&f+sE;XfcFechHUi^!hk6cb]9-9-V%"$FaP%A6Z8La'6n>ok=f(lm):(Y;q9K9Sb&;h89;=Z0qj:h2"A\"Ua<1Z25.]kRp;WBa]=0UFh+[;9aD(7j7Pb]boYRUnP#Y)Bg@^QFf_W%fX:3<1t*^VqS!t($,V1C3/U"uMi"/n+@\Rp!br#G@It-VEZfp2Cf]/3a_4(Kk^$\e@^WkUW4qDF5mRNI9Y0]?pY6<7(\.Z+)L;IY%=:T*S$+UWREI%39."'gd)o%%Y@_SWTpGbn_Ak.6/aI\f*0(<jN,"tlC]YehNU@`hrOuW.T(>7.!:pDBBOc+''V`5`/#i.g5F:ch<%`,QL5KJCM8-(al;6Q9K2@>,L!ETiHPN-l.,Nh$^p#)Ej,b)omsZ',Rl"fb+L\]1Jb4E`]U3o\P?(C;5f6,o^1L'J2sJj2CGUnTl^%[h:Y-BhYS0"k#8me,;)N$2E!uDScYmgPC_qAR*+.YkGLK3OIlq`7,rI#FIZV]Ea$;PTfBg?VE5:Wta350ldue?36mS:TNOTMIK)I%*g&9PXXF`XocAr&.7Q<d_MBt==;7AfZsu61S4K"O%nkCYUEPnS7PmD#_huF,D.mF<@j/RZE/Ab*Z*5dp<ECRRTi^oeTVa$t9%E'c%,/T`dd]%$gDfN9A8K`4D>(5VQUc4^iCp)FR2CbCI3?mLt?>C=</B:U1U1gdnI`S<bU-7V<C.P44dhcc@>'#6VYpGh(:_4+q@+63?%%J-CGor.H0=6bboL$@>!ds&f@Fs53KB*5*j,,'WT%Xd758mZ8)^l@gh;PJ9XA6hE.04NSP6?.ZbJ:F69#=>jadusr4VFW]RDK<EI%C-S\WID"r5"sYGu!rC5U9H$L%1tB&*E3cpk+9CC,onc?d/J\S29\Z%HnJpNr"omq&!9HHP!_;fA@e:9QNIAWlLbZj-HVrkNhJk6c%l5DdpYgO)0._Gc"*_t8W(%&^N!mG:U-VtpZlu(^WhumuG&/s2j6A6jKF)@3%CEjWT[cIFgBcfa&g^"0Cb(?N/liJY?hq7+09W5K8%$3/$>LnIS$0)g@H<ia/K:Lhp;G!\D/)MV/GUh?qL!bF%SaU8QBIdrYBG(lkdiRP"8'=*N8JohH8I!cs\_6g[EqS@dfTUhrc'/a^h%J*>V@JiF>gR-_i>T*Y_s,4(7sfh'$TTJ@`r.<=u2;F=b$8OhVg+2CmT_2!2f7)X'r9K#9Q,]g3GKK&.1A#ORY1G!U@0oE\B4YccK%+o4LCBeVe]1OtpPI7([_6TDN:n24t?7jp(SDJ+3/YuGYlb$FMXjmaX$Z3$H4E?uXnNG1%c=f(Y=p)JN62kH(R[/K&7neY&`5AuET%TcJ!2BGXJ4mWu9ilJh!"go^6Ine>R_JP#e.MhUjceX>&iKTl-dMmt4#'^5HE5\&i#U;nF-OkH1&<C">r!BgS*!Z5Um'*$OG(0G'k%`]5b`BW!>c`o+j`1Lh8gc8XRuAi\-#J6g.U01i11+RlfQ(ck#HOr0jXIjU/I]OQS-rm/et[bJbe(/HtK&bdpfImeE6he6(4bs0Ni%NHVjIrk73,euZlDDQhkRruQBH#P3sVQd\G"%h$3@boWu`"(#/jP7LT\T23&[epVCLp`N:-3LO)l'aj=8bd,bPPl##SA5rT+o>S,2%o>\2!a/+"IC2N<u)l^f+1`J%A3=U#dXksWblG.<IG[:<@61GcL[oucQlA]Pfek.!6WaG9\I=:h"38a#Wr)W7Z2O77.p]jPAS,QI.%b_0YfnD8hAGj$Fa8lMbKl@1s@DX4DSONO02*+7bpXoFF6n2,peeuO9RNNIA>dZeVF:oi*Gc_4(@r/6m@?_j8fV>aW`>/sfsk6V'N%/,A)0dFWkpp/]52J$Th6H'L\!herG,RdAoZL[2W/*fZi;"4cpHEW!<7$^f+ecrC!'m*abHn,L5Tpi#!n4Y67%04/:H>L`38,VjkQ%=8NNS=^9YLn(#.u+R#L'+iSLZKl6_\P*C.#]YF:G@K1T'(B"'OEHrnN]/NNIo>bpnq;^oj8(WGg,3-,f#?RQt]Bc)2lOYd7LT8`c%rrH`(o\Dr_d&kf<=RbsLW4r<"T^;/iGH]Ze2Tq<6M9WfIHD<C+EC'fpepjlV4(E`Il0=VIpU*204I@,Q*>G)4h.WG\q?[$k]7]c`%fd?'UB<Ar)qJTa@ko-_U]WG0Eo(gaP)l<6ge;\SGS!CMTP`YnbPT0;pZV6O"qB*FfSSn>=>O1tI^HHAS'$^Ho8Sb_pna%CUDR@%%%Te4ss5MVrGGP^uErL_EZJ6@m3k-W3GOoF5o$t]$!CY'P0\\HfjHI=,7+3R(uD=$.C)_$Sb;Y6S:Vr$7uJ+jYG[=5Yim[*t(H,TaB%4D(Ybi9E=,c>%/WLtMmM;YgA%(4"7uQ--6+62A6\3c0'F*RS1pjR4t[\)kVTXYXY_n,P3-8*(Ys>4o2Wq-^(fr9YK!o814koT]8N%?*0#`ST:XZ:%der5slVt-Irf6Pe6nKG.CgO<K(P[\]:J%D,NK=X%22NZ[TC=l?17R<0][GpYC-1#6&9&R4.O'1AH-3]1U9,o*#'R%QHYf]P>/.c4P<b2J-BiOlBY$fo&\G@jkb\<SlrNC=m?]kMd#ka>3`EeO+(iQ>47erl]rbQA?9$af:l3H<eo89=meE_NR@(!qa7L$%9p:;T<9mQOe2%0eWV[e)L+t74K2d$@Dl:n(]md)a$#pT2W6LHNCpbdSm6Mh=fN,:BTkV3l#"bo4_URe:Dg:#sgKJh:Z!V9t+;=);%.<C6abT.L)W8h(M6-kr%5':1a&I1f!>pn%[AC0e\`2E@7f'f>XQ-)&NS^_3i0.2obN"Cr-`/Ri7QG9pH^TpZ6HYD(+]is]oM(7Xs%E-p2Si%<Gu,9O9BN<+8f+-04<:VY`],F'c\*c\Skea[]"_F[ftn,c_&T/masMam3iD;MbertmgX]?sWl<GhcmZ\34p7GZf:MfkiO%2PlSl,YMt4cl3YQ'aC3u]n3O[[1tMlY4b]kXfbsg+WbSUJUm/M>Fk"B>RSLbmkq#W3fYk9i_0/oJ$P[sqaE1)a!H5p(\V@VB(-\o%Udfc=QX7f_c&JW*:KTNH*"5jbUh/NgU[cQXU0%,fH3JeuQTpdk:NZ0IYON:>PXN3`P8#D4]VlVc[n34Wj<U;3V`Kg(Vod2=>#H$e%gplob[+bN@ECmW)7BL]]P*="2Uq)N/SPm(/3G6VnH<f/ioYf=IKe#9bg:%Q9VBN_<PUj.ZDn"Eas,jKB)UBRLY?e1.<`@_`1$\4d%Tg>%nkgM@>T/nX:lY!,O]r.j^DhBoc\,,4+Zb(U`Fo,Ph)FHiQBKKP\YTO?Ar0[<$(rjdsXN5hBKFKjT-4QS1R(15TLk/3,g*X"j%E?;F!&`^V\$$DDIh9>T=P+0;q96,-]@g+3Nj\\[;%XE"?ZA>JXmC-8/e9;=!GM<!G\,,b3Zn>-VLLf-!U=RsMpL157^DaW2Hh@3F%'T$]81TY^0$?f)>k=_n%^en[=&o!e16%V-THD(<\6b/nXD>,-#*B[)2M\2K8e;b=bMgfWM)td5`eY?@JU\f+Kj$#jKdXu!p`lU3+%#PFHI-k7.)[@XT)0Kb%rVpD-5,+/(B[;H5M79+S@4Z$Ymk`U:`rXENF;2%iVgo?<iNU/84FL(GAd73LF&9$CB]QtfG-AJc%&"'^T%-O(a_T!s3Y(#B/c>[PAi&t.]_g+SNVQ02-K!`_4Q%XFX+e=&tcXo2qjB"G2W]"M:ZC]!j9>=-9Zd$rlCl>SNo]o)C<-Q73uM&Xp*%9c0<7^"d9pDq039GA^ik+.n<^:"33&'JJK(nAFte60k\E17R`.o(TTLDjF7P'-Wt(Rs+DKIIf17Mor,LGF&nSe_1h/d(ENL55'`#%O/"goI*epF\<5d8j<q+qO'=5ArYfca1utprp%jYA<M1O2f1)jgE,4.NUr&ucm8WT^i(!%c;s72Q_C94,Fi/2,g$*TiZRH<;2KDWn%JRa2rZ9^RQUaPa.UfMZ,%#ZI?U,Y$Z!1j,%QMn6a(Re6anL_@bprHmmgY1Yr#a,=fTUNIj,?<rZe`fg?.I:qQEpTBr%'aSgUPGZ&%3=/]Tm_V)CCoH%.C/ZY*5YbCLeQT/*hm3/s5#!Q`b5.05(oa3O\i[<*\L7$q;gLF.$DYNt\f(,1p7rIhFpfC;_1^_\'!S4@j1"[9%`8nA_C'GYnI.Uf'?l<j,#8UQ-%qD3()fF2?pZbPQ@57%qAu`ek2R4g$3>5Wi^_s4&>Yhg*D*!Zi8uGP^A$QRWD(;[E1s(G0rH^gY%6RU=fX4/PAT&tZA2eDDfHtr<3hD?gBXa99[R7ZC1Xb8GfRp\ie&FVeHBdCaDnF9["RtCK++#^*9VHD7og/PZNc4`q!s/CXCnO0^d%oaK&CK49(K>ODt+8X"Q'@lg4/\8RN%<*ROp4Mu_)ds+>l4cO*][AGZrcePr)R;-6CH4t-Vh7NAO$=UGIDfDb#T0$qMH9eDLH&cZ[%>=U>fC6M]c^>.<d,81u(4@>qk;l']QJOO9Ia44Q49"RXB`[`fXf6\o5,Z1&J-#?QHA*DHp\`necM_3U3*2h?edE*XX4P(H0.(&7L%45k:M1Toj<(jCC54)+4Ya?*/29KNhV:N+pb:Ji"V!-8d;P-FWR\;'BGAVsN^#/)H9:(=3*'cS.EWqA[,3iSP^,s]60^'"Rn]r+R*%[CR<a.T=8Q[#ks5&s;^jU8I$Q9-%#-C%[^[?YN]Hd,OrH74*.W]1qDA&/nVK?PbAu:/8PVV1.Hg_Pef+AsW<Pc6%]t(_P;&;oFR_%LqH9Tq8Y<>au!r/+):MCX,_A0Wjrl5g5-m.,UZ@Qs/7eMCYcU+AMefLVcmr$V+K3Aiqk=@\k3o(+\=@%:Lt'6*Pj(dFa.ka=h8EY%9@ufW_FI+pH(!JK\$J.@9i#:@lXEc?/(*W[Dga\`78:]<n(J#/KZX`MTb:'qL@SM8kL7&@(XM7M2L^6(!orls,2,6&P[q,j>S1hE%`tjMMLbFVFGJQ?=8j^'gQ07\d:>ePgI(03<e#="G7>r5&-Un`TH0J/"f@+5`@I2VJES/!"STO@Fq`JRE=')B!lp^p3+S#oJ$<A.`%O5AWTq(F7f='H%Ojc?HtmefX;\'s/K5-3YN?6'egXY)6elfCh/:%3U]2jdn.H,$h:m(H[XI9ehhkmf1OEL.b;F3O5f*N*!6;7KtU%hX#'+b:N*uY',+Q]d(6L1Uj\fHIZ#T%f<g6rNjqtVH:CNf=/1=KhQ+;IUoBTob39#(5d2!iTIn'iQ$)dqj_!;2VY'7p>D\FYd,:n%%Z1GYbuO1%A)V07Y&NPDhMt%u-B.E1%qf7`AhWbD&!I7+gT=iOCd&W<GLh,/k"9')DGXTnX5;+F&[RAPDb^Lj]BcLOf@Xeb>eeHF%o^`UPB9lrGp\@.0Q%&.;^0S5]G[S\-r3uQAD>7oGBAoM0n1'cbI_<d/Uh<n@%NimE_9?0^@r\?N>Og#To+0^&`b'D>SR9LP>Q):A%P@&QAbh!'BgE-o<+#YU6ng"-6?eN+C4c#5gZW7RJof(d[le`2Q\]3FZKlhP#lQBECR/`$7?eX0mHuN`\JrL;m45!YGTt.IO]Wi51%^M_T>E34?IB"O<1[dprR1r`/HYkJ1N(,"+R/(^c'fCNch=C66a[?t:&jVm)l;c)t_1q/Z5fUTY/?&ee(XNSGH@!4WU\%f%]I].]u%kI7eLKQasb#6\lKbHn](?\5?:XG)&Uc93c`BdoJmW[3F+cQ3nRb+&"A="BoT3(e]cHm:2lA7j,tI=:&$h^dI#:&3E'eaAQ5SmU=P%/s,U!quB.ZUU.8>]t;DpDst.\Su]!<NTuRKhe4>/KE9t%cBk:kUYMQ7^pTR1>MM9[7Q$67ri9;_L0.`[p"k#2kMSiVHWg-K;Rfpm%qRKf_0>,C1\*qX$pBrq7fuo.C5C<7(Eh'i(0!'L[]`'_qIB&o`5CS)Dcn#f-Rh4%eNs8b:aE71,JphAMmOi[``(rX&?<Z$Rh7+(J%KU?E7G&Q$ULRe,/Ydi0L5.pX@O0@Eg$:TEW)o1GbYHHs?n[Dq--4.0WY4s7X(/`?#D6.O_(5mkNb;k@W3rEX:W=(iC_/4O3j0J\G%H[46cN3[J;,qZj3L&]eRKs44s@m;dBlnG%9kAdW638[l]56U/AGAj%sj[-*(?$0n[>8ql4JfU9tV7l6?+X:^U9Re_T:-H`6%Xs(B%Z1l4h7Me:Y8(j)E\`7/umP&\6d;?:YY;SV-nf4t?HauVMF_,LsrR09[h#?F%f$GCKk$St4PJZ2:>RcEKgI)M23d9mkmEsSs\#[;O%X8T`Wle=C*g$mi-EFe)0_V0CN<tA,3VSAYlV:gKL6e+YCID-"Lq0WLflZd",nFN=lo_pB)0c,;0.kU5_DlV(K`V79e>((1k-kP/c%lj)4ej7`GsLWb<jEAorU3&A%Sip;-Em-*f=[bpW7I'ES^epJ%t<ZZb9WrZmd1s/->c[T(GJU6*TaIY=ObBCM(nij"e"YVuf=O(H<%5$bO-jt%7MI_XRH%-LFWV4X)*@5=/3$[:9XD[@A%?7aqa]m:eV5j,RjYbh9PTjQpHj6r$894RX$"s^_2hHdgrC]P?uY$bahI'^,l%'tEmOp0r0BQ*8fcW^thoCiWZ<3nd@G2g>3HqA!_T?Z(__QcD1/\]1>,_6s,Kp1G5UXY5#_+)4R7Ir;rDNY\+rn=OI@3F^O?q!/K`%s#O?]\.,\5NX]Lm3RF(hO).sb*KM!)o;^g]phM<BV*:og)Lu5T5Du'V[!R-0J,LdO-J0/*@@^\NHJ$<Y6_cIG_^MV.lQ1hBeUj<N%QkE.(Yg=dT'dAhqi]icM(BPqG&QLXpp)[h.SFYm:V+oqYN^=R!^V$t#+8/JgU!`bHn=M@:S!B`<[iNH,bqk7]JtJYOhC1#5ZC7)t%6;:V:(G*MO1(Z$`+o&*$`@RCTD#S!MnL;9adE_Yga9tQLNguI=dA#5J8]u1@KI@C].B;I4p-2uM8V6Js=F>QtZDfUR1+KUib!]hJ%IM4(C4"Qi*nQ;ZOCfiN<MFs&PO=C%InMH-aD!\l(m[*=ZTSO*_V012P&>LLP<U^JQME(_c`bcI4GO1&'^_Tg6$`tQMrW6+b:L8k=%+1Fh)JN2=Q0>-No[c)Z6:Pg7:2!mnN!#g253)P/;5tHa''__/r]5n/`r.cfi?CYkDcgU:_^o]`a$lP#jjbKU3EJLg>RCU#A]c1o`%r5HJB9a56OS&Llrjmp]OF8BW_pVY%"A]iG>/9eu%$AP<$]A:[N"U;hl!>E+TKk;ljJE80q/:d&qoOVJg'lJCO'sm>gRmW&8Op%m`%J1rbq[1AgI2naP#'oq/Mo^#Fq2mr!tlf*?dU4:PF>q)m--@]kHGN-/n$7a>f9^j>43;@Oi1OG;2SY?W>]rPas0bAo1(RClHE]1do%b5:dHq"=-hE7eIq4q9m0hnM@r*aP=fT.FXKIdV3ZG>da!f<5nL^heMFkh%%74a*263M:Si@L#::L@;<]7tnR]hSi[soF$K9ma&Q8%[pB"0bOf1U@OO&hB*Udn6BO):@=QLm'FR..DY!HB_:ln7F7(+IgLUROg&<%IkLDIc/oCM2l,I$dXplkBA;TZ&;e-Ikl[6KkiBFsI%<X`s0DLVm]m:7C?Yjs6X<o;b;QYVlI;^*!&"L68e9csi_`a4;HI:>DLlHWl0THn&S$E#bD8O:>n[ZGR:!D`A.&6TkM5O&,N'9+)L%7sQ5U\l/HTZQ0kU5)"1lNph"Dms2skB[:!:I2rYmKT,;u@DAELmbY/63ORUNJM1#I`=A\7Q)u\$A"gEHD9b@@g/h_Qg\(,REORh#%cKF2!,ZfJ:p!)3W.'/XCF(_C45g-(f3uQre50[ZbhHbLW(7(uc#:&U&GpdtZgn$R'UYCfcOb[ufr:;/79E*o9X7_bF]pfre=k=Nn%_9>dEnTY4BqpRX5B@elenh'UW[pGIEF<\M'Y;R=0#Ut+Uh#;,q*>%b#)>gTY)6K8G>A`1kk%s/HL[n4u^h($^EV/KQKT?YIP.4;n%(OO[SYV'-c^@V>(9PZmDYdHIK2&*S_q>p6@gP=X9(-+P\V$`uF.g([PhX4*nh<o*l?cZ>@1@@)-DqkdsIq14iQTr:dlOBceFiT3h%m&.77*_p+ebf,QNqehS80\u:tm9Uab1O$$<B,%94?\\m>q8078]6JAj=qea.HOl9E>WQ_<'FXnQ^9[_%H?g4b1ST7)D9:MF\^J_)%nIsJb4#e2o1?[3[cMG-pO4m!-#-Wre]M&cdn>/32g\&G;a,M+Yc\:*,6g`WPjC_7`DQg8j2<`SVO(P!HRO?it`=e3O4"ke5E'FH*%c[38SbJB`\Z&IJ3-j=O$ImuNc=$Q!iGPelD46muH2CbE*7I2)QcHMEihH^!nlk=9[G0?2s,/iaE$EW.JNC'ag;Bg</Qn<Ti#igW6%bN%2dq!^YGF:!]im@2oNVfc:T].Da^bjDRANsAg;-i7JaEnXV6EgL<Knp^!='PdP,m&dtuOM*44i&6PCUQaS?h!(]r62'qum<ZJF%/\6QL^KQA7Z.p:,NjdM(@S4i%TR;/p]\.O3)]k5^s(oOrhnRn@q6j0W5N#]SZI*OP5/[(YX@a<\1&,7FDgnRAMsYb'kU1OX3oC3r%[]_[PGNiA-l.gj&4FRdKf2"TtCij,E8t'ROlN/ZUkcDH[Yn8irY?#RkN]-^'/i`CaKjqb34D$5SAX7+"Z]W.,J(Ahp:X0lc@$ZNb%OWliYfW'>s!h6'+S3=XBq)KoDZb:a7laXF1?CWMNDhF*tq02WFDmad+8Ga$;egk)7#F4o0S9MsL,7FNgp(\DTkH)1<ppLn*IkCAj%'.aqS"+k\1C`L.1hA,HkYJ"ngPKAG=<*qP^aQl3(GI9=9h3ZB_2fgo+h4)$cCS*[[cWeUE\t"7k;7r<f^B"+2^@$IIdB?@VEg32C%rS?5`o&@mKqXKI?-$snts!f0CD\"\YP0?fqYp]o)XT&$<Jq346(A$3pE"R:(5(Xh+XBt`aB..@25A#*mZXJ61++)md9cu4S9Pf<8%TT#Sm;S'8^WSOm4(S[_7O#ricSL^q0NKu@b#":-<\BmIaH(SEXhr":q/Neqhl/j:r/7uWU.$"W%+T0l/g\WVUBqmOJ`*=[OlasJ7%,(,C[MKK]JH<4AJFP>%^I:?2ld&j'eeO$Y]YM*V)0XF3pngBLm7fNfAh#@<2><>iW?3l7snuhqdE#0TS$Fe4O\[_:F]33?9>-B@q%3[?A_qKS76r[ttZ[;^5p\L(Q=IWgi+m]sIDid1=r[9CqX7F:t!CVa%+]:B>l3e$%\gmB&.5E4,<i6CpTlI&AbkhpS)Zt47[D6=@D%58AC4rXGrSlaHS'H'LZ$q]>XQ*-RA>*Oaq]a?o2F0.r+>1;"%1WO&Xr\`E"EAAUfUnXu;0+25IY/J_*B08afk&!Y7;m=*+#IJ1lk%P\q'1AK36^_omcNZhZ0Ms8AM5FCo7R.+i3^&!Ot>U!^#)]#SD)Zef0ZrU+.`p)4YP)ePDb>Q%5G!#mlqC#UNWV&WjR],Z`\/K@eG%A3S/E+&8-haD'@'-*^M`hc.GDanIH1$@lp2$g!;[YBt>;f+H*Ij1oEb0,:[!olo8S.mdm5kU-Tsa+_aZ_kn`fgVIX:\@f0eJ/dRo%5q'"eTYnd/>$UkGO5PW-pGSjk$K<WjDQLQ1!W7b4fk.ip]dk]VmD\cCPH:@(S])Zhfo+V1SVS&,nG5?#Hl`0i4JeVIc;1huNI@Kt%Y2%9B\8c\4R_9QNkG&7#mhQD%ocBL&>SC`%#`@N#kMjT)^rcH83H4>p>+-JHgrcONiq?PepU7c-I\PZ[r71IXq>8"o>]XK51=/Y5%/FVWd]8s2EFmIh3#ar*h7OU]XEd%VD\A.qT>jd5gas*&Gr6\gF=I^ITC,p3oK1H4kD(?s2-I'L81h^L1Oo+\/FJj(S4mNmo(Di!S%%!j&ANO"OaP?am=rqsS_2=f]+]^\k^[5?0]Q#:D^[Yf+7RQXlh!=N%E10Yb@%f4JeQbCY;r?,eT#GlIOrpJP.T_SI)Dk`3$qCqlS%/P96TS>H4)T*mj,3KIO_3.+s^gs(%TKDn_tX*E+7X<g?8Ip9UAe`\T?leb_qn2tAqG[9+$Q4"1R=3c+"$gj<e*N`nJ]j;f(#/Hoo%."C%:/U`"P3'+_O=f?1dHYjOWI/`RUR-;-lW/n,t_><Q@r,[3ph\^sGrVb_Ms#OH@=f>UQ&*!`F-pkhM^u,o#o1o-*K(2n9p-)!5%?[$EAZWDj-J%e+B]sQcs3_N[kTr6t7m*](]bg@#5ro)&_cXQTiVmCj-)mkg._'&Npiq#J_?[aOWf@MM2VRp'erHrgnX4*9^j8sN&%71jB83?+eNY;$j!7r!rAG5=53r4]pH/.Ah+/9qF@a$R@6Ch8[DIU4Yg*]H"+dQnbfGRk/L@W5I-Kc<>t8u-+'F8f'W%J3bF]l7n(%9DSJHXQ6\Jh>?Pa]C\8=rjhZ7LWmj"gqmZ;GP+!%nUA9C-94`C!o*U[%NO7&\U7MhrE).:h6t#3pZ\RHSTL[a4qfoZ(J!To[m5MB%MmG_DD#Z)s5&W_U+8sF2PZ2gjT.Tb6Si25qVq!ZWWUEoHF)2HJk-O[0_VqOWa/2*Ym]bWecat`rK]65c>T^hb)hX(ak<Ik5$?tn'%'hTL+c!O+DT8PBbI(;2WFM;=I4tf?:os"X-@CJ":r@L(`G;!HMol-[NZhe*YL_c!5Ejn2B[ZbsMkO0LM$[CqW-)RaUFFq2Bqe'gV%X#j&`fC_qGp1^p3!:,F%&''G(6l:=VrpOiH@;i<Yhpc'H"@uU4153W2=l1:2d=8K,\Qu=H'u:W7/"t5>o=49Kkc\hM1>UR@cGm?c%+FBLeD]n>H6A3%</n`ql>1$#=?u[!h)`o"jmrMq'i0"hXn#naiq\P6_22)J2`G$(\?[WRn::R%1`VI2Fa-7f[?HpM4K&Ek^+'b[-%IHJ/Fd^cc@<jhiP^;&sM>kdc'G)k\MYJ)R'IT]gVr%'gGdOd6Cri>rPK:&>-)Vk;c[sOK&SR_*fh:C,Ua\oVM^#haPUuJH,VhLir%L;Z.pD:*10R+0,0m\uLsptBS_geu\u:Yba;`Y@1Y>E=bM5>s<*MiOtBQL3W1\/Dq5AP/MGZ%_joqn$b5k5ZU;RU#H"2t(t6*V3an%PY(2lem743B$XgDHiC>(o:aiu.tfg_S`/6t8+$d/IqnDsnD'XFN\eVDEM_Nh21+$Cg!K)XRLFQ%9!Mf>a5(>F?7B[`Ml5BSV:Ot3%cT+3A8Pe+E[AC7ckZ8[.4uAGtGkKN)DYaM?Rg&BB`f"Hj4`=QUHdg13D9breoWom\?8;i>!$dP%:MMo6M5dj.)LGu_gY'*[Xo$,]%<h;IT[I^-D>def_KNkk0"Cpo!fH%!"<_kq5p.Y,8o6A>n*jX#BHegRrLSlnM24lOMmKa2ub*9RCoHpH=Y!9$kT=]mSMtXB=e1=D#%h+`]C-6.@MdGCBHi4ELj?#rMa!rcnND_WZXSsU?j:2IM=GEZ4j3EqBUW:dK=(E4"1W?P^Xg2n-_]puUqBbr\EMQ*qdBDdu.10Y*`%q\]8,jKTN#6^D8;\m9L+H;*9&+.rRlb4s_\L^`);S)\[m?$YYBS$bT[pQkSXf'mgN`@hIU`dhr"\%AV(nYjRhjT>W#WH,J6l9Ecr%nkG0E:VGZYqa7KNlA90-b,lA<[Y3JdOEe5f<USga-;[PmP%NolX?MWjUM^CFJ$]H[:'5gN>H(f6Nk`pd"O?mb]p5V,W*@E=E]"$<%lMdn(n?Uq@4I'*M:=o!XWCE;erIOF7Q94)C8pl#n2lJjsC_'\QHE+j?''"ks@-%VIj7]%39tcl3ZlWGU%[dXI`;g<J%1lUPp!33q%[&WXB\<.g1hX-P^(]?+BRbd3[8S[lTZDgP]R]:`Lk@paO/`_6DEQ\8O[*;`,UcdK0Ep>gb7+:`ThE=HUfY6]:Ogn=D1C$jN,u?2X%27T1Tgq^k*kI(1s]T`A;bKFe:Bf2Hi%!d-;4ZgnI<K2pu?N7$Kqk7?nrFu'?:\E]LD6:PMS-J87dl)$55Gm4+J'hJ2P?1"UfsQ#!%Y0[FLE^r7M>b?2]hVb*:Q&qK%;j.3V.Q23O%lgSi\,3hCGNS;<7PiKqJD&]NDpP)#S7X^TE^,r>GHY6Mit@Y*nH/F6eeVt4p/a\S%)J(Hm31h;t]%[pb9P%kBn!Ia^T@rhHN24_rHqmT25JtY&NmHf5p%u)>*:!G7D@UeHe"+&Q\GaVLg?$5FH.sh#)q0!]koB1%BZ".[%n+2M0`bk*%oPX>D;g^2=P54.o'5t!!Q!h>^Wm[q>#7r9TlZ`$dl+m[sTAO3Jkru!qGT!.qb>1?!2l;50e>IGOJr9Y@mfhMm-1ho=%1]&JW5do*Xhj40!n]@b.2#Tkg$"H-]c-LD.VS/8kN1hR_\S9m6:\K;&PP`82TCr-]$XPpBNeMph<ZFZCS!olbl?-fha$S3=2$gc1%gqjWAG,p+Q"DDp>g%.;!a6\[k?,983]a_-[eE<#BFut356)TP[F&0J\3O,LDY>0>QCY3@68j(/*#X=/'am2c!YDdq=\GTRu(h1-=%Lgi:<.]@e(A,$YlMjAZhDdtV]h3aT4EP'n@<Rp=HSmK[cblNKXRIGG#-3llpU0Tq";W<09r"&fH`[Sp&'_d%NLQBg1mE?c^`M^pQ%XVlF`\3K+3II@[R&6Xq"2pbS.j3A+@I]jfNARiIr+jb_;p[E%e`4%"h[C=lkiAWPf.LZ:Vj6o64[KD#MbW)&sO+4r0%cP_Un;lI*%TFd,^?`or!'mlIsGbL=XJq0cCf1_Yik!Q6T>-af-&8%Go])^@Za2.-!\QbHWiqjLgaf;=eos@6U/u?uk`ehQ_HSEX1AXF.,S4r:]%/?fr38`fAQd`bL@@??<J-Vd)=k7^?7k%>n#\LEu@k<l_c#JW\["8\M>8b[1p%.dsmVCr=&`f#9/)u3g1M.;==Eg8jD@d^cO\t1;G%\pg#T4H=Eo4'7hSDItT/4MZ)njig,Ak^+:o&qhfZJJT3MM;/pk4CH6O(aA+d%hTF9/4KiT;8ca)os(TP_*ML#F,+BfMkZFTpjb*[%\DZ.nWA'^P)[,X8%oNB71+\$5bCu5S#S:TqO#fauLc\J6JfUU[m(ck2=EG<5NpYhb+%7o7(ru`Z^(#*=;$_YJ<t,:mpn2F/)b_3*%#]VEJP;F`p<!XT`.1#"56,rGi+QZ'`W:-U>!Z-M$5V1s6*f\;u0!IT.W$c]VikT<Ki[>Ib815[?JI);`1RptL(c:et:ge(Yj,o]8%B-=>WnhZs]id>1J,KCTCc@UkNi\<t7FToAGRmTTY%kCpP?jmK(20?K]d)DCqAtIodF@sr.*M8*D!qB>)&O`iM#Rk4jNb(<`(kJ2e%:)mL!.gYfi1E7a(B]`kGa,;6!S-OWI2irZH0Ho]goE<6VR%3X@e.qs,/pWj=@\F79f3,pT)2(;;Z;H0(3cSUsQLVkSWQC=s5hV#=%8(%Nujq<Js4;="bE<)X3\/0*2(_41f\M%JNo];5k59b(Wgb9F8j`;O]G=(Xb>kE+o!U`B8!58G5fT$'G@8FB6#da^*[Qm%DC=uSh%5uN<%L-TPta0+mI*d+:&paj3]YW`P<79>Rk#FEb\E$GQb(d\oqcpf/1Y-ju2,.T4icY<Z[7ZKgtMuCZtQ\dGbi%>ZM"^iqi)g5a#%B+#:/LVjG81Cg\2O#"Ek1UZB`EY+(g6]fF<$k4,oDEu>qLa$3O,BdSVLD'qJ%=eN8o.U;7NMRoDL!>6DEh%YNJ2tT_:QtBt=B%Z#%K#io_Jo\5e+ko-*nLS4\qcorN*`Qrq(=M8'pP@i1#Z+&+p]1`3J_7"S@0,jN#+1)o!,f=g[tbCI$n2!<#pj9HO@0JR*i?$0*2!r6%^!mntN(.7O4W8u1K+UALHaGSW#?XU<#%m$Y!UVpODh\tEW(1i'6mPM3jFc+(@R^P-()QAO_$*'>Y/HoX9U&tb8/Pe:kli3n;2/\H%_-"Kk90C%f_Lu/Y.Bs:\:ZUF<0^V+Cdf::fK_iKBP%-si-5:Kpk8*#?7t%$:0G'.;"4[7qa>DB<R#8B&;p6eGI\binjP^@+o)t0_%7/Tp+0^U^?1pW7o`2.(F_Mj1J.;E+$BEm4I>M>PI/h\D(@*bR9V(%03k<rJ2#=@3s3%+8f^EQh]pi:2tOFB_61a&91)T^<"`@6Y%%p/=X+L`DWN/NQ)0P]rX%i!SQ^Gf2`f+B$rT`Z8Fm<?UQ5c:#``],dhe2^Z@?aDf=as'UloZNR+mQlB^U=GbD%^jmt.%8_+6A(,8C%KA+Q"F#/`I.Bo+QGY-0"G%f,\-k2=koEU#aV`!Ws_be_IJ[-NP!F!M('Z#e1<K%h$>j]W(D0*Nui/?n*akc+\,u1b:#;h"40(pC>%49U4m7jjS/B^CPX3#Ge%S6nes&D32nQ2<4lj!4mU7p'd>((9GC+To0g$HDe4+=9_"S&p4<q-s"R$-%bLUftL(@>S]r)2GN>8RZ9:%_l0e.KYs[R6Hp"NmK/h"OR="c$6X:b4RUUc3\KUh<"t.e5]LaP]:F_[N$GSrSm2P?C;eCDf9j.D/*mUe)U,06(_t!Q/YJn[-ODP5%2_Yej#T6MU1>Ep5p?b.c)nDR,W[<M5c&HDNM?L7526$<+eL[uZ.E2Cs&=p$[Z>Nl,#&^@!#kpOT+@9hs5S.2k;e[JlUqgkC!35IH%EB$U'5d8h2K7:9e*nU]Qgbrc#:*G5\Ot[H>a;$$YoY;m6$li?Y]EoFZhM8$Y0id_Q,4>%J&=`gK/7)fb,?$-B;ZZkgjEfldKHAeQ%FFbX^,PTo3\.Dtc/&:o<\m8gAB.9g?+p\oMcQ]f3_9=IY+Y)3u*tM;a-,;cH5ucN^Ql;_SAmB,F:fbDX:Fqar$i^ZA/N5$Ta:[J[%ef%fH+f<sIMu1kfPlFi&0U2Ag)kr&jVpb0!+pS0qN;2aO$=mRtD&KZ.*Y5TCI"YV>#_knOE&9.1BFoo<\=[K_J^\:ta2%h9&mU+S%Y2_dW)NgNU3<j(2<HfGcZDH?/?NY4/b]%!D;Mtjcc+sf7QiIW1$KXYEUf.]XYY[;uT^KH,/3*m2A7Ir`Vn"0q25KO?f1g8W`jda(%qVOoQC4J-e)M:q"H5&3.+iS\P-=HU.N1A=;"U7BQnY\3,MBeB(['Si&)CB0[`M6j2.,=mWKqYu6`.IstO@'A.X5c^+&\&<$cOC.Z%AW32bc9@,9+ZO].#I]Hh$=--8\25J$B.td-D2nP(AsrclS#%j$?,OUJ)?jCsFB3s,C*m=5EW19aMP(OgP<K^tdL\Qf,9[D'(^e7h%e.!?)1-?VtAAf&(S7aKGEs<AZ'-pD+W-BRD#"2Sq04?k+%>ZTSJKS!P_h>Gu9C1TQXc3^5(pS`nN6Fpd"Xkq+,_9M]0Im]ZY&,j(%[;-Y8`^mS7\U^&t;sqG?+\'3nP`[^;U5%@6f]Fa%cs-bB#`R2h&Q\a[e[/b>CrD)h_/USk+bFn>+?^;O2jS&(KF)/#Pm/+2&XPMs%0d&8,!$r(^A!@puej;s&XGF-^bk5M4c_<eE?m/CF+NO`\$.Fk6im8g%&D)+o1+>Tl5c6Of6)-l.cmQ^NF@<,6o>;\1jF(Hk*lm;)%(gHWa4mkfE!o7h9`YO@bb_oE:=s7>ufIb=5=efDWgN,gM%[I\b2X5F*fMR,`88(A"S=37P'F[r3"E%qr@)=T,/@m\[Kj<[^Rot<V%#)*DQ<D=Hb0H\.VM`M#-l4abN/&`ip8+Y.I9liE&6u(AU$:'!_e=39Bd-2hCDa4o90GDX/,XK6bA#)KXE[)),Ae^tmgd(5ka*st?%KG#5;VW14)"=H*R!]`=&,1R95bi9?5H#-S%`Xrd%6a-e`C4rjpC[k7fYb):aK@u5<'n\PM,D$XC3H8go=@o-rTh:(?"!.#a*,`uX%Li*Q/$]0Uh-Lp(LV%NOeLi[o"gc1uT-E6,1MD>Z\e^Ur\%V9=%2/N\Ph%U)f/&`f$'Q]2!3*\kkd;U)65TIX_c)QlVkAb6Y4d2`N%UKg"n/;\rNp-AE.0MY0$J`.r4!soWtU&]BK7(s)R#gApi&qC.0#sohgO9cM[0Q/TU#>p:!kXf3q(cnhP>BGhC5V?@)Md6BJ[cjSs%YYRBTXjNAi1aY8K0dBqfJqENE&-W4WgfPOWq<1W%p-Ni`j5't(N<11,"?V@[BZe&!oOTHE0p*g$8]*(gW]=aeMc$W\RMkc.OHn``%/WPd`5q%RH9[%OK0^gR."LOeSJVZpVBm(jr.:^55o"[ah_!JcH6)*C!('`%ofJ>2.G8q$8;For?JIV;r_FWmZ&UH$8i+XV",$KW$%7D&ml@S*d"k`peXb:qfgL\<@;ZSC?s'>"NE-(ST1<a[])S'mc3$mt?KHP9gO<ZJ$IRFjea1dZ\V&:#\%0S'MYEL[$EA_QEH+@@UA%#-po!!FY-DP214i`"\jl+:^fVfFsW=$u0TO(*Nm"gH3XA`h$u!6qsms3()JX$1eMjN&Uu0$<-.Z(7=&WK8L<[AN8qUMY)]uEE\H+%S@;lj"iCM_K3<gu)br8\A]aS7[(Xr[eg=6mB,OJ:BuK8,C'DdP8$e"#oMKbk9$o@D7ej\b>80%j.KnoGa.*ghl(!\`KbO:5.Tl9F%=;6*_`/:VY33Fr8'Q5,t*'^-J*8cUKr.M?%JK\X0)e5[I>?=pAT7RS1lV,BHK\ipA=e%1]J[$VX>II;ua"iI<cgt7L[rMpXO[IlV%bMrW1M!0=t5<PBpKS/Z$64aY>]U8U-4LW-?'b.F7?c,4H.)\MN-]/A(jtMb!>c.(;gm-<Y,WY,:K:ISfE;YAMe1aPO`'=BF_XT>'%:rR+ej*1W!Y$7Xh(mq-0oj#MQm(SKRSW/=@FZ;^ki<LE8;J)F/lS3^&&knN&KW(hWs%nCPGJo%lAOnA..osA>PCSde[P2\XEH0,>%O(Wi4"lRdB&BHYKXAje$F$C410\F<Re<#]=,lmgMDO[X2<#\W)dV:>k"o'W/&58\KEri];`lt$X"jp:`R&40KdG3,:8KNaqE^%4i%OOfZdF<4m2M_5;Jb`Kd/<f0$YdI<<mImqV0a0UKR^l0Dp`8[Iue%gphN8h0s"p,]-&fFc<&QVqHOG/tY.7H!FCg[IJ_);K#&f"=$%NanM^C1;9J^]f@M6YFk&k3?@m0KTd4W.A>k#4r9@8CInsXJgE#`Sir",UgXPW5R&#?pE!X'[BY1&./eibb6GkTOU#i5^Z@<L;4GK%nnFI[1WM*8L>u^@!7Atc^q_N-=A1OB>XtCJ\MO[ij\Z)!4GmX#__:pn0UKR&BZ4A^>UUj5'.1sC$,K#2"DZ?mXB#mP0\97",S!/V%%gkIn8q#(Le.3ndaTH`bMn!"9.u62?]GWCI+XR<l1F#g(kk0L"K[PM@OuS_HKia-CEIa+!N0!d/bQO'cD&`rOTeMQU-+sg!NkTHM%P_[+)A?\39m"^n`&$/ea-E'$GPDaQTGh-;_k@1[3?/s"F#_*hV'UBU:$_i88"&g';K*dk[PK@E!oFN4HaY:%f;[<T^9H5T,jdQ[(%$A.=f-C@hk;2C$=9=*),,RB%[Qq7>*_F2+N;?44S/k6SV;ZITSlsS$J#M^C3_`qBI-=N;2"LSSCLNLNZciWnqRY8Ru&jR6Z^QHG?%fM-)h\"b<O?DIae,N'I_B7r:.!3ts@L]j_9DBp50NQ+E5TAgkI(r6%l``Ad04obSZi"NneSVYiq'Z.])*8_Rg!a52NPV<GG&/I^+%TT1oaG<qcu!/#hK8NK+)!Z?!g_Vhu0iIQoi0_^sip7<p(%#\L"6&L45;B_o;BF'ii5VKC\BIFkC"+dCK/3EWn+s<U8UsXUlC-5$.%*1=Hj+@ttj^_bt5M])ZK3tN]*FI7ZdTO>j`V;Nih4[Br%>\,6M<;N8"!uOfKGp>)2\eX^q4#5hB0EIM'-/*)r9N$^r13nN<)O"[5%OuESSmr&Z!aW#j=@od[Sc$2#2.2GoWMY&!6dh>6>8#\3'.>ZX6JdJ<>@[+^)fP-(-QM[u]Jc&t\'q_5>5i`?ugA,Dh`VINpH7&T)%Nh2)(s002PS]CES0[&\=nHY?2NJ!XP1<5h&XDgbH0JMW5^J=G2*$Z[\$Qd)-EiaTpAHc`a"gm/3%,7.#4,#!Ci#[f&%B<RIX_]*k%b^1VT"r:%($ri<T'_p[$_i0?GOdM8R^j+/pAC;)7C1mc8Ed89aSDfhjE%-7#ONJF>WSl&!U<7UqcB:SYDe+qJ&B=l)"%!2iP)0P?%0VUr>qAcm]Aku]@gEVfT5aG%F8!&Bp'Xq!&%*Q9m`8[/8@:hMn)+<C/a(i<+E**e9;-M7=$L!+M')&;r\"_LdB1eI[q3$t5QQb7'%8S\A9KJs5N;3c^sUBh"=-47so"K5cH"4-Ab;$93RejXoiXolr`3T\D5E#m-8E#gWIIN7!8M!KRejtb[kM*kF?X.9g'WV+ZrZ^d-0%(%kJE$&Ki%G@TNN64Cd\.1Oa$LrQ6r.:t]c/'tV#knGppPpeBZR</cj^bemcd7=rbbt*T<b5X/rU&5G-AD7'f5hagD&n"%p;5mCh%b`W'V"CY`h8PY]aSL:E^#bo0Hjl%ARD`G#'!B52@V%OZf<jFn#GfWbuAYBM?N?(AUbMs"Ba5R@tGWj61@Bk_O[o%;WQ;K^6b)T=/%+ET1sVBNC(BUH)8)O!490]SR"#W!uJk4QquC=LUC&u^NmVNp/*b+KZ%RLH4T\iPR"/#/+J7b;bG"<F$o('Q&($>YZnQS3,4AVq42%'P6SMX,DEIBdAsR70nQ/M:fa8&)X4RY0mT#TL'ShWs+N;Cbe7WC4Z91qO(A<E8]B93',5hO;JM3iQs<4;@>+3aJ%X_,c_*r=Z-@\%8QLI8W<G)L[9<1(oT%KYf=PA<B;l'Z"l2dl8n6<I[)UR"8*(<Ad>_HM<":N!?G1g=hUCeL[N"Pp9*B<)^=1+P5j[_c^Cl0&'Q<X-%Ym/3G1_@Z@2Lt8ABh:a)Vr#F^A8<,OAC!]5<4DE,JWsgL5%bL2;fL!tg;pi`b*q>$`&riLf$ltOp!b\.hLms]A&:Bfgm!Fo)bSFH%D`^*p]eqZYecs^tlW0HE)O"d/24eEh3W_$/U5hK.2lPEF\.cfp2q]gBBB\'33RFL;N+mXnk3L6C"nOF#:K^Vklg]4[,#!'NARK[g%L+3,,+Hn`B4ibC_E>F7c4LT'/@goWjgNc"NGMfDV6#(Bgp$ld/0JfA+P#V>Eq7&pKa65<VE=KWbJE>H&89\Vh(S*k9ZuI/A+:oKl%8Wn:4";(%N\XpH'#JN2>0L:YRdCcsu(AN-c!jQg6b)<lNJVtla<*g,mP"e'+`=*A#PQm7C-&W>&LtE\HJZqXDRHoQ3e/cI>eR^8J%1^I]KB,)!M=O"(3#]%lXJ-+jS)i.4RL2#W^-GuNS:0-l,V^!i9jrVP!rq'[2r<Wm@$u[ls4N&WdbK^Y!Z#kZNL5%=31;$#.\+:H<%G_e:&ocIoH)r5$*a-fl2MsnLeaYhW98slb/C5t!&J\[m16/ic"JAq.!8=-`;Iuj>5^uMjh^`pfD@q5W13gRE?jG7UV_`Ot4eNr6#%B10dTYrIohMn:DJ_c&-LRc0tNP*2a$ERLB\O3*Z27AV%(!U_@riF5BCj3ahg$Y[P;1(Aj"7@4nam:N;,YSnEU[-46LL=g$NR&41u%Z</s#b3,k=\Fth^00f]9%n%-h6oIl"V90c:893ZV*!ss#YftP9l9Fr3>5a]*UJG"YO=E+S]VT<q4-h"^EPqu:Cc.QFh$ZUo#3V@C%N9,a!]Nts3#"q55'g+&.F>;6q_.TjMj?8:H+7KM567W]/Pt&u?:bJ2%jRQbpK1`AI8fhpFEK;k-@2MFB)[D`lieWoLV%0S-#Uj&<%Gr'_)!Ib5&AL`b'e9`TG0b[]jJ-tYJ+<pAFL'+@f\!ca*1#D`!>XcHiSV%4JigAKikjfW7nMkj&R+uW^fi;@n!,"b@H'1G@%:KC%%37GQR3bJMF;=[F(=+]Xn*hFokR4m[Jim8@JHNK=DUm,:[?;;^\1!1um9bf3$7#%JhHGH*$D]mi?aN;fZ//Pc!KZfT%?kF:Yn9f\[%WcAWP*UQ<<mq1![`6t"i0@o&]#Rm_]gou#u..30^2o\]^`\@Zu+X)p9Otb`SjUPTK`I\1&;hfNa&[)78BMr4\5r.p>X+Qa#@a$fc%OZ;:YYZC!*X+mSq(?!PoK9?*<fmm-T*MOD:2DCg5VM3TQ/f0%d66cTE16fuB@-Rr_#9uc51J29<auYn]TF8b]>MBa&HEf+VCnT1m%ZNQZ01amJD"FCEX-Uo`]`3Tgo-ABGi$tFRLaMCc&0du)QIS"R4I<^K%i'J:aOTR)Q_+VG6dSQe#;ZM(Bc6%H@JC:GO74]+0^tbmg%RoVb8r.%`-;p>I$]eu8:rCh&'!gk=NKG7II_,,5##R',NPm1Zn])s[!.Un4ar#<=i]a+ZBT`W8nHl>[%'q*uG&/]_p?c'F1GkD=X%!B*G9#==A]*P'&MVY^F.FF@E^dL9_BZ$IbaKqc]s2^%srC"to15H3nJJ'5u/'J0L*nfMj#Qf06,1a399k-%(67#aVk@>%K20_/Ni%@pKmVD#mpmlg$XR@Ib\W&L5WD<h^VPS/Ko$X$>&/2rZf_"f/tT&<"dGLZk,C'U^2pG2W5V1CL]V$KRD.oMVA5b+@.u>ut`E"_"o=%!LDq2G^TpB%jeNd*#2c)1gX;%4.UXJYc"N;BpXZa+4`7[JRTNk-,"&DDe+[)k@q:CW5A_]i1MQAjTR@rIglsS[2rtcJ`2&f(b)<O%YlW?[$=HEO+@W+rU\QU\X66Rb&*o+EToTNa9t67,5,`Kb%'/TN3$)C,\e5Wc5mfY7BVs<%C%W,T"\#BWnRAp3-?n7R784PjO%@j@%V]okp>j166JP$-"%ht[<LumSta:DCF!-*!*AO)p'.5Qa9>4;g5%(Mu.<Gg-=)8)OHDBLPW*R/'-*DBE>.k'r!#IX%DDUso4L1#!L%<RbN8,?A63!15;-]r'+("Jp^-,%.]a0f`Q:*!MaZ=?4R/9$@KJ7:g.,5]n"H(b-)K6#dMM^imQ*:qU(l<fAkl0?`cQQ7r8C70:(/%4@9fBfOY)"!Mr<UDD)2OA+^*2;3ZG%bTCQtS(&[ce0Dc4VbDdZ0TrDk'#BYS?B,Qt'=g^B,/U?V=UTgYX@Os'<Z;6DW/(W[:F/`.%(f=9!fl83=$kru)&j<*c#1c8E(m.Jr/\VYlZmIa%ThtJcFf8]b+J>u9nY(\>KG^(#=(BZ0).D:74$!e\$js8f=oFK6^O]bZKd__O%Yp&?uf<Z\hZ5\&NY!?Y86E[%LcSY\0SuBXtK2b60[_l2:+:Ekmn,k`j,iaFuM?SE>40[.u,!jM=m@]5fA/n.K,Dnp7LVBmb5m*A=%E$GGuG!S1<;+qTJ+Vkq"VJ+MI1cn0/p8lf(rcAG0Wt6rjbTCQl'3J3M1Qs!_"SF[%04U,cWh<uR?3C(,T#'G/.QG4k+rFIq*Yeug%<eFch\B)^)&;Gmf`8k'@AH(t*I7+3RX!&0(cq@LKKTB!W,7t87>/eP`?)iY1J@qJH#)PE;GVr]Xd-sm<UG6P?*^2eu?uhDV$RFt5%W&:7nr5fUrnZj=%LV=6^>S;+hD(&if&.T`r1OQ)K_Fl<ihUW-7T^'I-OT3V$an&>b'SPnK0o?&:^r7K<]E]R!Wdj>SJ_(7iiqYJ!%)@c7bEG@)1EZb:?#FK72%EQkoa_;<l=q[K:L2M^u5h,<!1#0$km=BWV!XL+Z:]sTP2.uF"4:387o't'C<=1dH'I,%,MaaRGRF*-V%Fm(&#/=</hn9Tm/8HUG5-P]Kn&/oA!S0T!T0k2)gRZKk3V`[:H77rL;!?_>mPsp"uB\bHebhl?].RR8UJp.=DF3l$83+6>oL'ii3%GOT)u"U1j_ofTf:U-Z%BCD)O0R#qeJc:2;@o,XMrB&`&X5"9-*qdX4BM`[Cd$omK\TEaBjqS#K9\K2Si]_INuHYG`VL(5.W4P+G[%8A8gq"sCsdbSZGC=OgO#9>d*]oLK<cR5*/f0PefDcR<3m[SaG(#E%BFj7q+.Q*XV2'L'cmR1]tH$u1<1N(uJS#e;#X"[s?,Epb?p%;YcFs`C]6L\LL)VNA*LE-64NbZ2q]f#i.n_*N>"FdFYN8#<dXe'ODE<#V':?7%X6p-T!M>1829@kt?:+@M**XMI_]<ZXoAHs))HV%[0QM(8<EZmXae7%%3!$GhGe08;]O[V_/^=^%5=ae.h,r\Fg)cRD[fTITh7-\Le1)UQu]1i]ELs2FH.BBF[MT*3E7,4=g4>uBKVho%Vtr_BhQRXZ=<'eU(%#'gHm'-2g1Sjp=Itf$!boLc%*KZ$VN^?Bh\Id^U^5OR$r]VtpT1=kcY(f@9\pIH:*BR-X.N3i1/?/kN[33C%/O&/j;8Us!@cDDXK?#/@HKPmj/(L\bF>LSp&W0(,7XCfN*;^01@N(jJF?lY(LP'ZYCo&n#T""T.o*VUE0GUe_?k+.TJ.:JrH^Oj7%Bu[,^OalG"-5*-(UB`a>*sl\dj;6&t<crA:@>Yh=RDkE\),$X'o)"Gl?S4nn.IPX*!2V-e<3(U-hPnFcFA%[0R*^p,D->NZ!U;rQ%!f+U#<!I":nV.h8djA);jk1C!ZY3W:LL'upSg:>bOIhZ3$=!pDZp%2obs'rR<=0J9>r'-]iY3:G?Ok'/:V;s&kgCSHV])4/Qh7_X%Gb)p+$tU2NEPPs\C`6mI^HG*s<,<JB5LTBeTiW,n%:*rdCpoj$8R]gG+BC%3`@?![aJ:bR6(AegUA,E88MeMldO=@9M$LI?AZT<D%c)-$lSA&oonDFT@N*>LK]RRrbL4e!roH5,ta>K4i=Zhb%3H_0\nPMf2(I9H6V,]:AU4]MfD4R1d4Fr-?7\l8'q9*IYRAD>A8?-6a%AdoGHf:uCkR7K):+@DP#<#dUE1n-t%R<3c[oKS(k/9AH>M.\0pNBsZ?'EtK^D)`>u1'Mp4MXQhXZ_:5a+ZA2/VUS%n076S7(lQW?%;+MfIKsc\8^IB?gEUu/UdYqLo)j-c]@dN:,'4MOp'S`p1cGt-UkuK*9NMaT@3gP]&G)]*r(hT]0D+=/kW%nr,4Ed)OEtoEZGb^"h%,SCu5=Yf#o#L@e.%%O:P"],6Z)D6*MSOpuGi?Jc*<g;#FoQD&'<LapOX%=[<Ph<rQ4F.:]_<SZeQIW9_nODjjF@\DT4\Ng;5VA?#%TGWCB(_\F_n2:cBE6%Mu<'1kigaF5%MRR4IK(J5G'AmgVD1\Z7np6EGHjbIU)i^F.Vqe>.4n14b]G&m1DuTh!FBFqDQX6J*_?8]r%r??VQ!+SGY`MGL"&L8I$"9hDY<af';7i[AL=P4?@),P2acX^_l@Vd,"Tm6Ub'c4>5EY'0)f8b5h=6b/7`T#;N<FsWhQ>n=1Y['Be%&T9[M=Yo<i]6">K1*PMjj)ek):k]`ML7r.>.i'e&:TIp>*&n9>3EVm@"i>3kLi/B4q[Gh6hGBFIQI8JJ7VCfSI%DiRoGR^(KFV"$%73-BCLZV7U@NrnToWW8TA7^[[Z(2g>;I*-C7e^U:?SX7NW_!8;`,Vl]o,WD,_.*k!)UaZkEIik&g\+UL'>&?gn'f6<>'\h#-q7+q%@B7h&@VMM\5^;[PjORm/'h@9>$*N]"dkc34pQmb\!=:4C^mOCZA$-m,F6E[U,G-n0ch@1/^^P@qmj[4*GkW.q1^]7g^+9:P:e^3>%`BnL#Y*=f=j*Lm&&/#MInJt;d5'.Ca&#(&6Gl9Ip7k\iuMtarJgOc]/XXK*_CIbjN0KbU.(Q',VEDaOeRh=Oh`KNMc_`[RfZD+2U%Qj'60g<^KlWj*8p_q-C!47>L'!f.#OI(<;5a2>eC+]Z%dJ[b[sqB?-@(IEB]#i/8e*tmu5[LgIa`a%4%5$\d;?"<-c?lG<j8NFI=%:<2u$dKMe(KdTA&ktqsEqhT"X&._<Z0'%`S#,6SKp5,#hYI\bZBPED]6fq9Jb^e&K4<Eko,#]jh(j)R5JWf.'leoqK\5;*N4Br32%gur#K"B##`bTjetc)K!L8JU9)&XqZOd':atO+\tijEm"g=63i3)R^!0-EI90KI3Ga96tZDSsQ+_R`(6p.Z1E7[DuaZpDDbk'()Wh%Njbi1K(ZL\7I5ph-HE_QoXK#\:rre@kp9X9]&H,D5f?p=[ttCl"OZ$?nl"ZeU:B:Ei2mE.89dN??S2\Ydcg%mi^@YM$I?UeYF-V<%T`3?,K.T^aaJ3IClk=M`A%H@gMWt8&]cmLZnN=:Z%D]rX__Wb]FKc1DP-K+V9_YanED$HcH1>;CH=iWD7o&eYaE7K^_HUiDBRkVd%>R(taO<ak5%j%.A(sC<hOgIU[q/S52JraneSpcP&$fuZn)[:<K3A;bj!/;F2D]3(Fc]H2ka=.G[.0G@Qj!4,U[.t1(TLYUV5jo-S%K,pbJ%3<t(4R)a2fiGkZ`K0:L!-qi85I@JJcYS+b2cNC1!U8=b^R=qs<#Ins\L'L8=8uoMXbX/qY@"K[V_Qq3lU1AJ-N%DPEi\bm%kf)6(SN>m3K@OOC>%<Kip^*D6Vbl7=7;&1?)h'UB@jl-'])!C\p*,!*&G_#`V-U4^O5AXBU9h1TZ</_sm`d?Gr2!eNe_A>r>3W.r%1@O7DpGT0[YC@!F3BrGLqWu5X`r.XLh!'7Nbdtb8RffkcUX4(_gSM*-bkYOoV)VQ5/fa9Vq!NQ8fdmo=c$4#9%KZ%)QQP&g/%pq-%a1\Z@$ebIWeRLWZh0/3fEZa.m.m*Q\]BmpFrJ'\k0E#j)5AFuHOT)]+QbL*q=EF2>kF>^?+1%73f(Rhfj^K9[3-rWKHX:8po0]oB%1UjYm++1l=+*MSc/,>1aDSHED7:C2E[=+MB0t2R/gasN$3,<U(>'oS;`Lgr5dn8J"o+)>dXLjR:f!a0tll-Y*5C=sKCmME\iiBq+%o1e_'59S0+F+cX=Q\qWqgWQ?Gf@XfI"P['4B)9KUV7VJ"?5!984SbFmbkKtsc4(QHm`r:+/d&2b74_PV7JH+CODhnY5+Ff#cHJ;(%>9<nccW0WZHZ)@i5FY0rZZd3-MM:/<MlhGI%Z1Gim47pCbN\-$:RP#3GiS"$Eo5?TT?hODGkZ)fNifI6.u@^#hiDDoepEfop0s,O%cQ-#'pC%5^mcf$(RY8rFmWqjir>t%7n#jZ'V.!!RIf+3mm2kG6F!&/fl?1Lh_c1C(YhIaPh63'OS:Fm7DIpQ3*l7GVUQ=g!A2!!*%:?%&R=%#]c]mb".ril'@DeJ+9s*A90qsJp:0KS=gIUTAVDRHu2Qk'P9f@:=!DXrRdq;]l:[r[88]64I3gKWKJjj1ZV.$oWC"2N2E%0)QUAs0Cb6I+BB'<ZVTl$O^Y[MqQ:jdEt/4?#@>tG;e?)Et\bfalFL%fV32V-3p:Ss"q1Yj"$d1F1sUU'^sWqDV$B6lG@hJkSs-Z%4?G<#@.,U$QZb9i9C:YYnDb_eG^R4`1nQ3koXs7:4oWN/*q.>7)M_(bE0pC7VcR4VI.I%(f1fL\^2oRbF78/;_Nc]&n/o&b:N(Cm%r;7qMHen6rCOU\KkJNel.l<SQSXJ6cBKfb(4k+r+H_#KA;PSI:'`"rKkHj`.0jjm!"TQ#YF:M)>S,]\*CL*!r<jkdXmpH2?!A[6I%eS7[Gc,S@#^g%M8]sA"V*63eaF!Ve9J'PBm>-"IeSl#`?RIP[fqtpO5b'fOI<Mc_\[AqOoI2M?u5MnQ0h`^f-X6Oc4)sro7J%X>0%e%C(9oBqP0CE%Kc4ud:a?T"JIU'"-@bJp<H\,Wl+imYrW:N4u/lpeMYT6L.Tc<YO43W?UpF*GOB4$Vsq^OL4tC&RP]+2mMos5>3-%Jrai=l1Od8]Dh,[QeU&'TA82NVjTX6NT76k<50_;q(R8<YJ#&Lg"+1+pMYPjp#NU"opre0/(]!ZIJiT@HLq.0VYGj<5Ki!u345B6%le=?>IW]5bd>\D"C`e+Ipi?8ijkZJFFt\j-`S6U"^#_A/h:u:cqVKu=H1p:7cD.<'TC+gF^DtjTrRZ3=lfFV2[pInGM=3U<nal?F%=6<h;_r(=!ffm(GrKWiohnSlm(bYQplL4Gr4l6"mQca1fIXfu9>e0QQDuJmmq06QPmIj_5'q)XgqcoC.rHe'MCu=!8?9;tXg95+,%k-(7]^,?p+p=?;3_\^oHIIQ!noab]Bqr"OB)]ub#g\oG>IE=5#5$WU.j5fdnm;G/up:Du]?bLaLhGXdmC=Za?CB&)=TU1.Unb\,t%f\a@?mT]A/X,!>!p4il;b7oGIqj.cli8k&dKDuq,R!l>eqskE*r3DJ-J%P=AhQ;Qeh>H4(fD0^cDRB/PHLT,O_*<CY[.37]'&c(R%m\;/dhtZTcDS4]<ANon^_sPU[^:Q7G`f*W@PC_X#W?_0mX9XClmsjosh5cT\Y&.4kfA!Ld?Cs"\F8q^%08oj3HS0O<X*9t=(<a83%S,`.iFJlYI!_;V*Rr<d/o?sd^p(sh4Vg=[CX2(H"Cg7.hF']Wm!`/D?Mc#&SO4[$'?n(\FW5,sIasF('Z/4Td.WEB>4/N?9DdJ/J%YSs"D*#1I4]:;:n(,99JY6%@gQV/ii`tkfZ-[_7ZWkcJ@ln;As4QbbRb2]a,7cUCFJ]3Z%RoJ;ckN+Aj"QqNnX,P%oX9)%^QOsrl%mo?nl'faLNX>1\YM$beL?=m2F,rU$?.WF`u=_0F=9GL[p]Q>X-3fgpu'famYX>1^oHPKZ^]KcX$*02[N"]"S?X3H\(KaO@)]UUTC%]YG+`PR<q(`)`?J*ERg`?'WT5JRc@9!`\)O,IZ=mBV>JXYfTO:J`FJffi6nr,IZ=mkYMF`jcPn'![i;\;ld]c7VoKcdA-goNQ2g9%![iJae#:&+7r6/plJ4bXc2#]bJlU`n,BcBg=STP13]jqJVNI(Vb<f1d/0f=c'j/boX?&GS9GKPD]:;k)c9,RV;Lp.>bGqnD92^<S%]ZV0l?nio"G:IRZ4h0j(\`b)>Fg_(?HgmbVn=k8KjmgtlpY\L7i9FqSbURSZ4h-Rc]BC<KkT4!bm%7/Z0"M9(4>.N,K,<?rX.0&$%WPCssi6pcLU3lB3h1M'^\BUAhHg@ll^An%^mC,<*Vn%<El>u]\n,N-S$E(1LbLC<7+78G;4C5Z"`Ren[Ha!0UJ7RdrAE"R`@1Oe\%U7KGK\=ULsbVI0'oNq?>C=`j7ksO[A:..i$0HObDAAr</fZ:jd!\G!L,Vtr<5U"6B<-M`A-4ZH#H7[Ah"$e2PjNK^8@qp2B6p:$O%&e2W:JYkAZp$CS2'BOH*&XN$-P_6D\Fs91FP>!6Trl;DG>>2]r,HN(PO>&),RVE$C\W_.IS##Hi_BSaH5+RKD7BX\h"G@TU^H)MC%StnmX3&=-'gW\YqJu'lM)>HqS'X^(JZ8)sli3\-Qb`WCJ$')DElObupR3V$(d_A@$b&?$?V]V"0fT%c.^*6L<Xal]BY"U%Ooh7e\%q)QH^MOHq0"=Ag"A"*EsB.bn%.>I#F9G:6U!!He#fX:Y)K)#c[d<,]p_Q#)Y%$1;dFK;b"*ME*l#XmN98A%reHiqs&g*NaZ@(R#C%b;BXQ%p6YM[g@bIG^lht!Q@2pFS!;&FPo*"5VmQf3;O\\<snBHetSKP^ifi.2u"!9]E(S!)N]q=c+[6VD]jin8jatIfbe`4K)3N?%504XD#%/n^#`k`qoUMl6k4*CY3X:D9-[SNc=i0"ZEcAZE@.GkIr[]<HkUM,@8$$NYp/R!9DFJCk8>(?\\Z>B7!3lWVY6m$%\;5n_%OAM34O=h-dK:qJ2G`3%fN_(ed\7#Ot2\6&m>Leq_8)XedE'<Uu'N[P!MTue_*?#E,B)iir:oENH&^!tj'Sspt2oA`!!nIALZ3=_`%-q@_KerUY'"G/b+djdKk`jf_dik`d4e:@KEE#k@e_;5Ij;2BZd7+.ejYOI1[?j)0c',)N7-kF.=%1L[NppLlf"KSL:.2i8.o/9(3%"!Jf$Tm2E%>a%najr@K<!@N1]#m'TbA8If**rZHS#"C4ua.q1j@TS-C#jba?/:dMjG6uQ\32p&&7,[H)%,7k:1PZ@+Q8k7^jocbs%SQL=Cft4$-#:Qr*>p?d=NE<]6ibRP)8Ut%Ld41)L,o.WgGQK!`efjsd%>LDI</@DL$q4!p2aF(E(aCn`@Y]f1)&00;LZ%,Z70,6e%CVV?^kohHp2+Z=i4"_$KqZRm/qLhl]K(3d_,e$P*P]T$4!CB&/81]AC2f_1R'qK7CE*Tfn7L=mlB_3R#=P'>S$l'VVX5kit#"I&,%.P2?M'ZX9fRuDVXM0FqGObu45I0rC<-8_]WP.$8+WdpbNKk`]/#k2d5br,o6%)?72/Z_B%*rq<g,YAN.(b;f1e9EdZ@<*%5$2H<;%i)]*SJJ`&G@$8>/:*^s@a]HoB_#ctPK.CQTXbd4],&qB)6O`nnA0m"-":b,jYV+\/!eQcu$/g)O]OOC2/e/[*%h]DB3<dnpq9gC+%`0.3XGd$2mGkV3.80B-<4=s!n.*(rcL(Zq_bS!($guL7]0moFT=H[/(c>+(p>^mHUg`7K1VFAKK;;bG:.We#-UE\8C:s[7?MZq5]%'2]4Wc=BqJ,/%Z^OSP^()]g@FmYrB85u".HR'd92LDr)0E>AE*p9+d->I#K(MfB)KEVO0K=_d'*+g4?n`JOX)ngZ1hTPa!l/TF0!%9tCtY,+;N+?GPsn1B\.Gi>Y=1$E\i,!`H'"XM;^"Gtd1+>)mu0]O7J`arjTt,m:tNRKH*nh@$KJ0ZR^<7^tmB$<0pNC0)dL."g@F%H!9JOn6UYn/5P(O=YTVGM%>K3"m@P"5aB$K'QMDG&$=mS8.jJc7'u)$&\Qu"@rDYa4;^XLIni6fhCbatl)"TbIRLO`:7O]s$DZ?O%Yd92^Y#b_YE,^Z[W(W=jb2BcV-q,q0dII_47PrnTlX=J6cRhbC'b4Mm$oidU9[[`>DLblh)i^,08]('GZf^bU[L%7d9?P)Jd@b=L%N_QFm`Xlf%U0?OO?*O-.'mqM5WL31[1"Keh/:"66V:3gW?C)X^[Q+bV4J'2'@)9*I@DGF5/=)Z%(C4VkaB-V\L$3:P0/cQ,)Q\T:%J`NY.O$S^-D8d\rJW+<m=29iIpuYn"1;RbF&n&mNS*cI8b^^M(\*KPXlEQfWRbYQ7Bo!mm;b/2hE$)72i$Q('RTmsd'2ft?`XEh%%T8f-r3AV.)<$Ak8N+E-)?1/DWdB-.b/D:5!&#u9<>@j"Kbn6_/^[AJG&6bNR9B,?3"sXUs[;mD+mc4=%+$-StL'b.r9Mnh%S%t`f%7Z:KEP%:NB,#kjF&U?):>bVXB5f1pEA3^nU:u_mVSbX*6)L-ubU?s\o'F3A]>rk8**J;]I'%2+nV6*B7V@XU)20r]a5T,O_JYb"$%R[:+mC$JnXJ;+K0b_mUtK]:<rBL&-h*]+cYi:8*0Dj2]%OO>]_lPPj3aML[Se_fnJ'K$aOF4qE1FrfqMgr7VceV)']6Q!qEk)B.C%ciE-\)`=@6?<m^;N&^?75ZACW*j]d-c_TjK8"lm0i=Z_<>_CN4k[#5uf.gqc9KE?-E!HasP\!Krl="P&E\69aJD"FH!#"&egH*Z*%(>s`iUkn$"qI@GFb!q=+-3XDMp;+NG[B8b2T'1C>,4DM8!MN;QGE$!F_bu&Y9e$RgL-U&O:8[r="XaG)'$#&C"c%hi"LZpAY8s5E%Tg%-4Yfq?j<I+Za74>^<&O9jCBV#73$BWP"A4$R1R$N;Vm(QBL:ha;=hKWh#2MVVdp4>@>]V'h`7\W19FbmPe&Q('5:X)7'en!&W%7S-@X+X"lm>*EK`KQ#B90FZWuEfb_MpRt2)Ko1E+:7ETA0sI>%JO)I[$o$q=LT#;,6c@sS)I$'8o+:#8_Z*]]ZmjqEZ6R^_MBu#4%!4iK(%HR:Da,\:QDLeb0(,KqYb5FSSK./.BFfQe%(i'?."tQZj&nqIX(3%?O%M.$F8/Nm,Ss1%NdLID5e5i!o_HBc7VVj^/OKSjN%G$r,'fl/l@f0\13d9VH*2^Ye,Jlte=5&0.$T]6D/bI,Y!.JBn%MVp#Drt0U"Y##6ThB54jl3ZdT(-W<Se=8TRgLRT2=aaD>M&[c-%1D.dY&M2m\Q00B$5L=@:L9W#:4?;4J6gn`2'S&tcEK1I$n3JK)A:$?Q6mi]cOL<1tOaIHs#(m$e)1`WO+aqiP.k9U?&u;XA3+/*u%@H;tZT;hYU@T1J?CBcLhQJallkR[Nbg?q'jHUQt)*Z,j`.V=,>DP-!=SeiM"#58>kO"cZD@$`2:9OV*!oYFCaY*CF;?e8.nC:NN=%8]5n1-O_)S;)KKe2+gC(ZDs-8a>07,'VZ3UFef95;T^ab&fC+`+>k(3d_]D::;Jml)m+[s-*)`tb1-ou6N]N(5TckFI0ap,]$!I@%F)>D*.;UKm@qqXAj3.pN'2YacR>R^XNTQ?G;be%%feDnkBYrOM&'pbHj&JumF:D[n&cdakU]oD:"DfM9U%Ji8JWbJU;?rQ:>07LV%.Am/(6"E*E2i1!MNk&N`6"6s\(p]Vdd;]u`k[:p8K"7Er.0\U*#8o-r+UhS82e6Pjq>kX1_INg-DqM$C8&Bor\&h6tf-JoXW0PXS%rcgiN'=^e23/n-J@MR!!3i.W]YT%=PoLZq^r;q7t;;Fr-f^2df9dT<@=]_m;BdKTH!&5"*#=pBhd4e!i$3gt&_,FK#'Oq.0X^09W%<Kl.5hih]0mc=nF"$>2`Uu1bSAO3X^K<%H%2KSt^dKYlQ*$ipdYAME^0g,P!,'/\#PB>k#Zd(!_!O[V.TUnD)YK80HWne:`TEu:G%:S"Qt"Q4s3Q-X/;:2*T5$bX;(4G!5F9&J]-5Y^r8ct^aYPD5Jn;HR%<g+M,`$W5#BZhb?JTe0&3UtR:M29\4XFU2Y)6eW>TJ5(.S%1FU-#S&ACGg'uob:bV>Yh"PjRC&Y4AWZK/01FtAV-:]OD@7]i1#DnsMn"V`lM+*g03)c0>&Pe?mF."1b0Mps)-F6#W016l!<,djG%+Q+2]0aAdiB<ULm,10PN>G+GB:jlkA^+W=MjQHgM1)2Q.8ifq>3/jOjcc?MPRZB_rP5YU>1l,P%g'lbtZl64-*1O6pM,+;,L^ZKl%4_Og!\cj>3R%D42"G*AHJf0OW&<)co$n;c\!<HkGoSl8(4Ei1lPI3H_Ut!<BMEmm9DJEjBFfiMAP8i@,@1lMdh4=-O5u<cqR8X6;%2Mel2KV@=Y0Ni<"=tHmAfV]#C#Q>`9!<I8tG[1#m$G=S`"4bOC;NFA&)\"h%M"`5*=l,`8i0!bVBn7GXl;@Y=6(Olc1%MHZ5'@Sn%LicP#;%b["BLd>`po;\OFt%`/HE3tn2_Hrul\h-*CjhDD6RsRr3>&G\5#^uO!P4+])P%X+Q")[!C-!?i?ck_FVe,O_BN*Ij70*pJ%3NEjR%$._[.mVmop;\"E[@tgn+SNXP+o_'AM\Ec5_`g2PdI`e27idEP@o-5#R8%?=Ej!Cfj,9Gtdn,s//i(c5g$(8E4eLc+c\'QA%b)96q>df&r17sXMc.L?Rog^e;7;ZG.ISeN2MCQP8V..0-;:I\IC*N7\PEE/nI-"qR3`FOH`bIV)*N5nNNDu,($Vp9sWS*Hb<a"&.%SJ9VXh+:He.r&`dSSbDU`pHNYMOfW^Wa8Qs)lX8VbD.>8`M*Ps;Pu&qR:WY0W/&Z"9Zs/F=a)GIZQn#TU;C-aJBKun;+iOBc"02P%W*'p:mBZ4E<uN`,k@=2Xq%A'PUE?Jqc^"?b?@];0JYK'8kW0RF9IRIg7f"'91PR,G`VHUqBO\8<?5DeMR2"jcOXJtU'Zj;hc/r6n%'=&iSgG6#qTD:'[_aXF382-AjkTW_aT>rQ_h.8Wp5%-X@<%emQ7;@8sI6X@`08]a>KnB,(_L/IoXrO-,f%H5*Hqe+HlnMZ^.>fME%"dYkg1LI!s.HQfUSt[>a;D];m/<,md7a"bB263g'Q$'@;H8\Z1)_K$gPjHQ0hIlq/XAClS:)kiIc5.kOqW2CUZ`JkHp!U+FC0>nS%0@,ZCE(B3+AM&/&?sH`tMo,'VFh/u0QUU>I8pFJl05KhtQ1qRJ?^C1O$iM:Z!@)F`,OGXZD$Zo]$=c4.,HVJfJ&GG*`E9<4foIl=%[8HX@N&6'D2N!GMPg"?BN3oI@['.\3\<K]A6XoY4MY!eUS](=>IBF1l,K,!k+jFm4$Hl18?M@jL.urG<dZsM]0WSYQ^-<K->Hh"h%dBc0EJ[E,laed?rk#Z+fGFH;%RZJ8l[:$sB&VHrpG="c+EhH/rQdhEiMM-&$QEa7`O]WK=hD^[U%Rr4BGOO2+j>gdke]9<Q%YXRp%abbnG2Yh9<dGPad@5etXe[c>C7s<Q;bn=)l-Sm51q8]l>)eVX7-D^"ER4V>lBR6eJJX+js*`7MVG.0B^q]I/IQY[ga!Sm."<>pW;%7.n?]/3@RV:SUe;1`0f#LF0i">NBV,OL$MO4;gaebVB]>#fJ8mr^1Dc1RC#rZAiU^3,4g"lBI[A6nunV75W*hjLpr/2.#)J2$pEA%-LLIKIAS?*%T^,e'+m6JJJF(aCf`"CHM<Gj9V,1AX/3]-#D,CS,"6Q08p3E1%:6:UG%8p*XWOfWADabm?X?FDq+eiRPCHB"d?9s+%N>MNl_k^jHXkj"U9LV?)P;LR@)C6/\l&Yq2eVkkE=G:Q/?J\c+Zn9&2RMf8+]6WNu]Fp"JUHi##a1&E2?8iA+A,"]2`>S'C=#3dC%.&U,:7OZPD/:Ml5.N&.u39f6PDH]?Lh#3UL)_P!:NL#%C"(f?f)?j)rnE7U>!\jo3mMl+@7,jn.QYln`?<+&kFoU\o-6_T^%5&i)%n,2Ck/\1&>7#NZ?MiNYMgn,^:A$HCf5),';]'nddn*@MMC(h+@RL_=NZi(l?<PAg40*+^jDsbP'Y?sG<p=%aGc-;7HrSO7(Gn-;*%kKadAo'jT*)dbdYIHP#<q5_OkBDAgY6(Wuk!VnriZZ+sM_;<QUHZI=0OjhpbDJe2*,gH;D_rn4plCU*Ekm^H[5MWa`61t0#lT^F?%*qg+$oC8$\a%rF/okBY*c>.FTnqU20Y+N9&Cc/PdYW??V$*/^P)/!X;:s5i=Jac4JR^th13u#i'-m5ek#,)]'("q![o)f5A<[q;4%@^:YEiWFf?M.NK=r"Pb)+).uZWtLdrg"gV&f,k0FGEbP$^jTUm[hHS5BjG3kCbUf*Pcqih2;062]P3\jA>TXb?dKmOc+N-_8C4.5%$;:j!W-k/5EgC@uq]b+SHKgQ\*XQ:[2*DP`aYYd#F(s.&j>?,&[c-mRP\gDmY(+_JgK,UIYuNr.,YAM_j:aK:];:'p3(1Fo]<g_M%W2;)^O9Z!frOoOr@t_],^#.a=Uft:C7O82j"F1>/eLbOU-8_0FiYYh#%#G\K8:Cg\Q+`cl;&okk&N'l?7&WqYdo.3fJr/"=W)4OA%_pS-H7or*\fQDM52O3BDZ9_fW.Yt2XNt_-GGrp:ufp3t7f![+P\'Q5OlFF<7XCN;JK]NuH?X(gPXnY^nCP@4eAecMKCoZ0pdGu"L%/Rj1:DQuu6f(khsoNI\]a+j\XAW?UtV6N"CMAkuBZ"J>Xmd/J,MA3$ra+]'nEfkgW]]N@ETp7cHbDg*0KrRID\%_l>,ES$PfsN5t%2GKt,9/MP[0@?&;lue<T7YSK;H56pqK6Vjck_^B`Z7-JX.(`Qf6Js@hg&!Z%=c](&]5ao,<0^\O#&9EmaIC8b$[RLY#e&02J'ZAL%hc!/Le0q(lUN:L.(,a?NqCb@qk5UALs8PS:pm:sjRbes/&",=$pCL$(Y\OK\h4YBq_RA8edF1U>rTT)OWOZoGeP/D<gIiKf?-3n0%l6mX=jg0/$YDIUc/'X<\TK]f6V_t!.Z-CY_&Xc$)o$@8!;Ym0262Skc=)4GMO'b<ILP/WB?`ZEc^05lBoBo:KZ`0<_CTk'C&aMp'%c@H,c=NQ"I4[;6[M3pbGe-pOf-;%Z%SbSr!`O1pXM+IUKZuW:F/-u^)8H*o$ePhX,AkCCIYB2Wjij#7ncu]G@W!O)>kMcY[I,CI"%*[i/m2sM[cbU9Vqg'ck(>.-;2acV.QJ#e,S^O:U>4@I.:0)]SS-@b)>pbD18`i1XGe!_0EZ^DE1-B;MYK;G;Z<pVM0C8=0^Ur"3@%NE?QcGng.4jbo]5jtaJWjEa8l9T;Wi+p8p=I<b&^&oLS2FaG##i8X4qa:1LoJAR1K$,'KuG5H35rAPX;)sd+`S"K]CVB4Q?2dGpP%AYH:MmC^D]M05-j/*?6+/DKT03f-P>_&go2%tb`R>)V=ARq(?4qH"R@o:,JUbG/!pi1'>+pf)UsIPttK@)Q2=(UN;4\*N:sjfNnX%gE"?ZWXL`t(&b[GFu45&=>:Lf=sbeZk&bSZiZ<c(bb;p>_r!q9msua!AlL+hP9FgsHg@j\d3Yn[J%mPfT/>a_Ah]Q_(0^qU#$:(9%rVZr+oMkdSnroF/[l(^Q^)GLT;-b4Q0/YN1N)1lgG<RMJ'K)2B,0Pun_5>4NmTi4,ct"&ne<^&)@?%Yu57g'f;>HhEb*^s`.o4Hn%Md?HI$@"T_O"BV[gn6S.XVbsf[OLBd1__u-e$@"7%Ir4A+Fepc6pu):#:N7=nX?l:-*g2K,D;/+,P+gH":u:"IVhf*=oW16"S=`Y%:<N!3ecC5l^sR;dJ6$YL&5*PW!M-GjnggNV5X<s4p0RJKig2>&R-ObI\=r%1G#\Ni^`s1A;Zh"'1RtTNJ2DG1@?N,@)8q3?TWS9V%+A2KSl>]KS?-dV#3_33G4Bc_u3m$<6Z7*J0^.LUBjnLDjl(@lVlh_bak<DZ9'?7tE)8FbF#.);Yd1%:>59CN'BC$Y4`s+[='q3$O%[Id%>)3'=.0q2J:KILPm%RTkZ`IXi*%-_>V5G@+0C#oQX/,+-Z.U,+?5T/XI$%_*)5tX-a$kscg)<I5N:c-jVKJH45!D]#-a`#^d%L?[de0P6/9_EjmSb*'S&APr3]q)X/E.0f<::2LiXc?V;t]%:#I21SF*#3Z\OF5N:;fRScR8%h)N:_I/o>cV=XU2\qd;fH;q</3@B%$<jqm'GoL^%?Iu=3@rPrM]nb27!@?6j>3PBnE#>u/9DmiRWuV[,KPSlGD'Xa<TolWYF>4kjH5]=9<R8W9#`#fN^Ocq>F&u:nGQO$%Y7Z\B\?W4V[%4H0<mNL6i"D=E"F5h0Q:+N1(dVr_1cFTSU_[uKoP-ATRA"2jKdL(YK8KRb9`iH+>)<GF$.C&ZU%tZLMVE$r=a\n#%1BEXbY3PY[P;NWU69<75HRgnI:C.=HA+:.5ASk3-<F2bHKD%`0^OdL\)00A4j""mGrOU^P-f]&bOtFbT@S`;eQnUYTVKQJ(9:WFY%mSA-HZiM:3oUfu#Z(F$EP>[PbF,d]'8I6lWW^O_j>@N/=:B_\mDCt$fnnbUppq7tt3U)!t1$KWNei3jHhc>2,dY>ojSB$VN8P[r?%BSjNK)ougAgD]e/aF2N_c=k,$=:M#X)'+,&Y)DUN1Lag^@OK8H?+j-"#eOI!%GmNg)[$<VrCgm)W_G[Z%UtM/(TQ)?)=3eX7sI`=%B(42<c*-PCa#N=6Q]f0T)g#K!fqEBh^%Lk\Bp<.Li3FIOO5&AIK4DQ?0_?6.SWf_T#W=K2"V5@U'h?"q_72oMgq^"Ujp1G7R-E>\%S6Xp\jW<hPHb?ubkJ=4`FE73Jf6]_&gjQU)jQPOPjJUo/rqg)?n(BM`lOR=C?c4fCr:^!_X+Rh;IX_8$,]ZL@r:8s?YAR,7&!lLW2Z~>%AI9_PrivateDataEnd